/*!
 * konpeito.js (version 4.0.2, 2020/2/13)
 * https://github.com/natade-jp/konpeito
 * Copyright 2013-2020 natade < https://github.com/natade-jp >
 *
 * The MIT license.
 * https://opensource.org/licenses/MIT
 */
const multiplication32=function(t,n){let e=(65535&t)*(65535&n)>>>0,i=(65535&t)*(n>>>16);return e=e+((65535&i)<<16)>>>0,i=(t>>>16)*(65535&n),4294967295&(e+=(65535&i)<<16)};class MaximumLengthSequence{constructor(t){this.x=[];for(let t=0;t<521;t++)this.x[t]=0;if(void 0!==t)this.setSeed(t);else{const t=(new Date).getTime()+MaximumLengthSequence.seedUniquifier&4294967295;MaximumLengthSequence.seedUniquifier=MaximumLengthSequence.seedUniquifier+1&4294967295,this.setSeed(t)}}_rnd521(){const t=this.x;for(let n=0;n<32;n++)t[n]^=t[n+489];for(let n=32;n<521;n++)t[n]^=t[n-32]}setSeed(t){let n=0;const e=this.x;let i=t;for(let t=0;t<=16;t++){for(let t=0;t<32;t++)n=(n>>>1)+((i=multiplication32(i,1566083941)+1)<0?2147483648:0);e[t]=n}for(let t=16;t<521;t++)n=16===t?t:t-17,e[t]=e[n]<<23&4294967295^e[t-16]>>>9^e[t-1];for(let t=0;t<4;t++)this._rnd521();this.xi=0,this.haveNextNextGaussian=!1,this.nextNextGaussian=0}genrand_int32(){521===this.xi&&(this._rnd521(),this.xi=0);const t=this.x[this.xi]>>>0;return this.xi=this.xi+1,t}}MaximumLengthSequence.seedUniquifier=2271560481;const multiplication32$1=function(t,n){let e=(65535&t)*(65535&n)>>>0,i=(65535&t)*(n>>>16);return e=e+((65535&i)<<16)>>>0,i=(t>>>16)*(65535&n),4294967295&(e+=(65535&i)<<16)};class Xorshift{constructor(t){if(this.x=123456789,this.y=362436069,this.z=521288629,this.w=88675123,void 0!==t)this.setSeed(t);else{const t=(new Date).getTime()+Xorshift.seedUniquifier&4294967295;Xorshift.seedUniquifier=Xorshift.seedUniquifier+1&4294967295,this.setSeed(t)}}setSeed(t){let n=t;n=multiplication32$1(n,214013)+2531011>>>0,this.z=n,n=multiplication32$1(n,214013)+2531011>>>0,this.w=n,this.haveNextNextGaussian=!1,this.nextNextGaussian=0}genrand_int32(){const t=this.x^this.x<<11;return this.x=this.y,this.y=this.z,this.z=this.w,this.w=this.w^this.w>>>19^t^t>>>8,this.w}}Xorshift.seedUniquifier=2271560481;class Random{constructor(t){let n=void 0,e="fast";this.rand=null,this.haveNextNextGaussian=!1,this.nextNextGaussian=0,"number"==typeof t?n=t:"object"==typeof t&&(void 0!==t.seed&&(n=t.seed),void 0!==t.algorithm&&(e=t.algorithm)),/fast|xorshift/i.test(e)?this.rand=new Xorshift(n):this.rand=new MaximumLengthSequence(n)}setSeed(t){this.rand.setSeed(t)}genrand_int32(){return this.rand.genrand_int32()}next(t){return 0===t?0:32===t?this.genrand_int32():t<32?this.genrand_int32()>>>32-t:63===t?2147483648*this.genrand_int32()+this.genrand_int32():64===t?4294967296*this.genrand_int32()+this.genrand_int32():t<63?this.genrand_int32()*(1<<t-32)+(this.genrand_int32()>>>64-t):void 0}nextBytes(t){const n=new Array(t);for(let t=0;t<n.length;t++)n[t]=this.next(8);return n}nextShort(){return this.next(16)}nextInt(t){if(void 0!==t&&"number"==typeof t){let n,e;do{e=(n=this.genrand_int32()>>>0)%t}while(n-e+t>4294967296);return e}return 4294967295&this.next(32)}nextLong(){return this.next(64)}nextBoolean(){return 0!==this.next(1)}nextFloat(){return this.next(24)/16777216}nextDouble(){return(134217728*this.next(26)+this.next(27))/9007199254740992}nextGaussian(){if(this.haveNextNextGaussian)return this.haveNextNextGaussian=!1,this.nextNextGaussian;const t=Math.sqrt(-2*Math.log(this.nextDouble())),n=2*Math.PI*this.nextDouble(),e=t*Math.sin(n);return this.nextNextGaussian=t*Math.cos(n),this.haveNextNextGaussian=!0,e}}class RoundingModeEntity{static toString(){return"NONE"}static getAddNumber(t){return 0}}class RoundingMode_UP extends RoundingModeEntity{static toString(){return"UP"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?10-n:-(10+n)}}class RoundingMode_DOWN extends RoundingModeEntity{static toString(){return"DOWN"}static getAddNumber(t){return-t%10}}class RoundingMode_CEILING extends RoundingModeEntity{static toString(){return"CEILING"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?10-n:-n}}class RoundingMode_FLOOR extends RoundingModeEntity{static toString(){return"FLOOR"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?-n:-(10+n)}}class RoundingMode_HALF_UP extends RoundingModeEntity{static toString(){return"HALF_UP"}static getAddNumber(t){const n=t%10,e=n>=0?1:-1;return Math.abs(n)<5?-1*n:e*(10-Math.abs(n))}}class RoundingMode_HALF_DOWN extends RoundingModeEntity{static toString(){return"HALF_DOWN"}static getAddNumber(t){const n=t%10,e=n>=0?1:-1;return Math.abs(n)<6?-1*n:e*(10-Math.abs(n))}}class RoundingMode_HALF_EVEN extends RoundingModeEntity{static toString(){return"HALF_EVEN"}static getAddNumber(t){let n,e,i=t%100;i<0?(n=-1,e=1&Math.ceil(i/10)):(n=1,e=1&Math.floor(i/10));let r;return r=1===e?5:6,i%=10,Math.abs(i)<r?-1*i:n*(10-Math.abs(i))}}class RoundingMode_UNNECESSARY extends RoundingModeEntity{static toString(){return"UNNECESSARY"}static getAddNumber(t){if(0===t%10)return 0;throw"ArithmeticException"}}class RoundingMode{static valueOf(t){let n;if("string"==typeof t)n=t;else{if(!(t instanceof Object))throw"Unsupported argument "+t;n=t.toString()}const e=[RoundingMode_UP,RoundingMode_DOWN,RoundingMode_FLOOR,RoundingMode_CEILING,RoundingMode_HALF_UP,RoundingMode_HALF_DOWN,RoundingMode_HALF_EVEN,RoundingMode_UNNECESSARY],i=n.toUpperCase();for(let t=0;t<e.length;t++)if(e[t].toString()===i)return e[t];throw"IllegalArgumentException : "+n}static get UP(){return RoundingMode_UP}static get DOWN(){return RoundingMode_DOWN}static get CEILING(){return RoundingMode_CEILING}static get FLOOR(){return RoundingMode_FLOOR}static get HALF_UP(){return RoundingMode_HALF_UP}static get HALF_DOWN(){return RoundingMode_HALF_DOWN}static get HALF_EVEN(){return RoundingMode_HALF_EVEN}static get UNNECESSARY(){return RoundingMode_UNNECESSARY}}class MathContext{constructor(t,n){if(this.precision=0,this.roundingMode=void 0===n?RoundingMode.HALF_UP:n,"number"==typeof t&&(this.precision=t),"string"==typeof t){let n;null!==(n=t.match(/precision=\d+/))&&(n=n[0].substring("precision=".length,n[0].length),this.precision=parseInt(n,10)),null!==(n=t.match(/roundingMode=\w+/))&&(n=n[0].substring("roundingMode=".length,n[0].length),this.roundingMode=RoundingMode.valueOf(n))}if(this.precision<0)throw"IllegalArgumentException"}getPrecision(){return this.precision}getRoundingMode(){return this.roundingMode}equals(t){return t instanceof MathContext&&t.toString()===this.toString()}toString(){return"precision="+this.precision+" roundingMode="+this.roundingMode.toString()}static get UNLIMITED(){return DEFINE.UNLIMITED}static get DECIMAL32(){return DEFINE.DECIMAL32}static get DECIMAL64(){return DEFINE.DECIMAL64}static get DECIMAL128(){return DEFINE.DECIMAL128}static get DECIMAL256(){return DEFINE.DECIMAL256}}const DEFINE={UNLIMITED:new MathContext(0,RoundingMode.HALF_UP),DECIMAL32:new MathContext(7,RoundingMode.HALF_EVEN),DECIMAL64:new MathContext(16,RoundingMode.HALF_EVEN),DECIMAL128:new MathContext(34,RoundingMode.HALF_EVEN),DECIMAL256:new MathContext(72,RoundingMode.HALF_EVEN)};let DEFAULT_RANDOM=new Random;class BigIntegerTool{static toHexadecimalArrayFromPlainString(t,n){const e=Math.floor(Math.log(1073741823)/Math.log(n));let i=[];const r=[],o=Math.ceil(t.length/e);let a=t.length;for(let r=0;r<o;r++)a-=e,i[r]=a>=0?parseInt(t.substring(a,a+e),n):parseInt(t.substring(0,a+e),n);const s=Math.round(Math.pow(n,e));for(;0!==i.length;){let t=0;for(let n=i.length-1;n>=0;n--){const e=i[n]+t*s;i[n]=e>>>1,t=1&e}r[r.length]=t,0===i[i.length-1]&&i.pop()}i=[];for(let t=0;t<r.length;t++)i[t>>>4]|=r[t]<<(15&t);return i}static toPlainStringFromString(t){let n,e=0,i=t.replace(/\s/g,"").toLowerCase();const r=[];null!==(n=i.match(/^[0-9]+/))&&(n=n[0],i=i.substr(n.length),r.push(n)),null!==(n=i.match(/^\.[0-9]+/))&&(n=n[0],i=i.substr(n.length),e+=(n=n.substr(1)).length,r.push(n)),null!==(n=i.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),e-=parseInt(n,10));let o;if(0===e&&(o=r.join("")),e<0){for(let t=0;t<-e;t++)r.push("0");o=r.join("")}else e>0&&(o=0!==(o=(o=r.join("")).substring(0,o.length-e)).length?o:"0");return o}static toBigIntegerFromNumber(t){if(!isFinite(t))return t===Number.POSITIVE_INFINITY?{state:BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY,element:[]}:t===Number.NEGATIVE_INFINITY?{state:BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY,element:[]}:{state:BIGINTEGER_NUMBER_STATE.NOT_A_NUMBER,element:[]};let n,e;if(0===t?(e=BIGINTEGER_NUMBER_STATE.ZERO,n=0):t>0?(e=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER,n=t):(e=BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER,n=-t),n>4294967295)return{element:BigIntegerTool.toHexadecimalArrayFromPlainString(BigIntegerTool.toPlainStringFromString(n.toFixed()),10),state:e};const i=[];for(;0!==n;)i[i.length]=1&n,n>>>=1;const r=[];for(let t=0;t<i.length;t++)r[t>>>4]|=i[t]<<(15&t);return{element:r,state:e}}static toPlainStringFromHexadecimalArray(t,n){const e=function(t,e,i){const r=t.length;let o=0;for(let a=0;a<r;a++)i[a]=t[a]+(e.length>=a+1?e[a]:0)+o,i[a]>=n?(o=1,i[a]-=n):o=0;1===o&&(i[r]=1)},i=[0],r=[1];for(let n=0;n<t.length;n++)for(let o=0;o<16;o++)t[n]>>>o&1&&e(r,i,i),e(r,r,r);return i}static isZeroElement(t){return 0===t.length||1===t.length&&0===t[0]}static toBigIntegerFromString(t,n){let e=t.replace(/\s/g,"").toLowerCase();if(/nan/.test(t))return{state:BIGINTEGER_NUMBER_STATE.NOT_A_NUMBER,element:[]};if(/inf/.test(t))return/-/.test(t)?{state:BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY,element:[]}:{state:BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY,element:[]};const i=e.match(/^[-+]+/);let r=[],o=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER;if(null!==i){const t=i[0];e=e.substring(t.length,e.length),-1!==t.indexOf("-")&&(o=BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER)}return n?r=BigIntegerTool.toHexadecimalArrayFromPlainString(e,n):/^0x/.test(e)?r=BigIntegerTool.toHexadecimalArrayFromPlainString(e.substring(2,e.length),16):/^0b/.test(e)?r=BigIntegerTool.toHexadecimalArrayFromPlainString(e.substring(2,e.length),2):/^0o/.test(e)?r=BigIntegerTool.toHexadecimalArrayFromPlainString(e.substring(2,e.length),8):(e=BigIntegerTool.toPlainStringFromString(e),r=BigIntegerTool.toHexadecimalArrayFromPlainString(e,10)),BigIntegerTool.isZeroElement(r)&&(r=[],o=BIGINTEGER_NUMBER_STATE.ZERO),{element:r,state:o}}}const BIGINTEGER_NUMBER_STATE={ZERO:0,POSITIVE_NUMBER:1,NEGATIVE_NUMBER:2,NOT_A_NUMBER:3,POSITIVE_INFINITY:4,NEGATIVE_INFINITY:5};class BigInteger{constructor(t){if(this.state=BIGINTEGER_NUMBER_STATE.ZERO,0===arguments.length)this.element=[];else{if(1!==arguments.length)throw"BigInteger Unsupported argument "+t;if(t instanceof BigInteger)this.element=t.element.slice(0),this.state=t.state;else if("number"==typeof t){const n=BigIntegerTool.toBigIntegerFromNumber(t);this.element=n.element,this.state=n.state}else if("string"==typeof t){const n=BigIntegerTool.toBigIntegerFromString(t);this.element=n.element,this.state=n.state}else if(t instanceof Array){if(2!==t.length||"string"!=typeof t[0]||"number"!=typeof t[1])throw"BigInteger Unsupported argument "+arguments;{const n=BigIntegerTool.toBigIntegerFromString(t[0],t[1]);this.element=n.element,this.state=n.state}}else if("object"==typeof t)if("toBigInteger"in t){const n=t.toBigInteger();this.element=n.element,this.state=n.state}else if("intValue"in t){const n=BigIntegerTool.toBigIntegerFromNumber(t.intValue);this.element=n.element,this.state=n.state}else{const n=BigIntegerTool.toBigIntegerFromString(t.toString());this.element=n.element,this.state=n.state}else{if("boolean"!=typeof t)throw"BigInteger Unsupported argument "+t;{const n=BigIntegerTool.toBigIntegerFromNumber(t?1:0);this.element=n.element,this.state=n.state}}}}static create(t){return t instanceof BigInteger?t:new BigInteger(t)}static valueOf(t){return BigInteger.create(t)}static _toBigInteger(t){return t instanceof BigInteger?t:new BigInteger(t)}static _toFloat(t){return"number"==typeof t?t:t instanceof BigInteger?t.doubleValue:new BigInteger(t).doubleValue}static _toInteger(t){return"number"==typeof t?Math.trunc(t):t instanceof BigInteger?t.intValue:new BigInteger(t).intValue}static createRandomBigInteger(t,n){const e=n&&n instanceof Random?n:DEFAULT_RANDOM,i=new BigInteger,r=BigInteger._toInteger(t),o=1+(r-1>>4);if(0===r)return BigInteger.ZERO;let a;for(let t=0,n=0;t<o;t++)0===n?(a=e.nextInt(),i.element[t]=65535&a,n=1):(i.element[t]=a>>>16&65535,n=0);return r%16!=0&&(i.element[i.element.length-1]&=(1<<r%16)-1),i.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER,i._memory_reduction(),i}toString(t){if(!this.isFinite())return this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity";const n=t?BigInteger._toInteger(t):10,e=Math.floor(Math.log(1073741823)/Math.log(n)),i=Math.round(Math.pow(n,e)),r=[];for(let t=0;t<e;t++)r[t]="0";const o=r.join(""),a=BigIntegerTool.toPlainStringFromHexadecimalArray(this.element,i),s=[];let u="";this.sign()<0&&(s[s.length]="-");for(let t=a.length-1;t>=0;t--)u=a[t].toString(n),t<a.length-1&&(s[s.length]=o.substring(0,e-u.length)),s[s.length]=u;return s.join("")}clone(){return new BigInteger(this)}getTwosComplement(t){const n=this.clone();if(!this.isFinite())return n;if(n.isNotNegative())return n;{n.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER;const e=void 0!==t?t:n.bitLength(),i=n.element;for(let t=0;t<i.length;t++)i[t]^=65535;return e%16!=0&&(i[i.length-1]&=(1<<e%16)-1),n._add(new BigInteger(1)),n}}_memory_allocation(t){if(this.isFinite()){const n=BigInteger._toInteger(t),e=this.element.length<<4;if(e<n){const t=1+((n-e-1&4294967280)>>>4);for(let n=0;n<t;n++)this.element[this.element.length]=0}}}_memory_reduction(){if(this.isFinite()){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t])return void(t<this.element.length-1&&this.element.splice(t+1,this.element.length-t-1));this.state=BIGINTEGER_NUMBER_STATE.ZERO,this.element=[]}}_abs(){return this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER?this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY&&(this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY),this}abs(){return this.clone()._abs()}_negate(){return this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER?this.state=BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER:this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER?this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY?this.state=BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY:this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY&&(this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY),this}negate(){return this.clone()._negate()}sign(){return this.isNaN()?NaN:this.isZero()?0:this.isPositive()?1:-1}signum(){return this.sign()}_add(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite()){let t;return t=n.isNaN()||e.isNaN()||n.isInfinite()&&e.isInfinite()&&!n.equalsState(e)?BigInteger.NaN.clone():n.isPositiveInfinity()||e.isPositiveInfinity()?BigInteger.POSITIVE_INFINITY.clone():BigInteger.NEGATIVE_INFINITY.clone(),this.element=t.element,this.state=t.state,this}let i=n.element,r=e.element;if(n.sign()===e.sign()){this._memory_allocation(r.length<<4);let t=0;for(let n=0;n<i.length;n++)i[n]+=(r.length>=n+1?r[n]:0)+t,i[n]>65535?(t=1,i[n]&=65535):t=0;0!==t&&(i[i.length]=t)}else{const t=n.compareToAbs(e);if(0===t)return this.element=[],this.state=BIGINTEGER_NUMBER_STATE.ZERO,this;if(-1===t){this.state=e.state;const t=i;i=r.slice(0),r=t}let o=0;for(let t=0;t<i.length;t++)i[t]-=(r.length>=t+1?r[t]:0)+o,i[t]<0?(i[t]+=65536,o=1):o=0;this.element=i,this._memory_reduction()}return this}add(t){return this.clone()._add(t)}_subtract(t){const n=BigInteger._toBigInteger(t),e=n.state,i=this._add(n._negate());return n.state=e,i}subtract(t){return this.clone()._subtract(t)}sub(t){return this.subtract(t)}_multiply(t){const n=this.multiply(t);return this.element=n.element,this.state=n.state,this}multiply(t){const n=BigInteger._toBigInteger(t),e=this,i=n;if(!e.isFinite()||!i.isFinite())return e.isNaN()||i.isNaN()||e.isZero()||i.isZero()?BigInteger.NaN.clone():e.sign()*i.sign()>0?BigInteger.POSITIVE_INFINITY.clone():BigInteger.NEGATIVE_INFINITY.clone();const r=e.element,o=i.element,a=new BigInteger,s=new BigInteger,u=a.element;for(let t=0;t<r.length;t++){s.element=[];const n=s.element;let e=0;for(let i=0;i<o.length;i++)n[i]=r[t]*o[i]+e,n[i]>65535?(e=n[i]>>>16,n[i]&=65535):e=0;0!==e&&(n[n.length]=e);for(let e=n.length-1;e>=0;e--)n[e+t]=n[e];for(let e=t-1;e>=0;e--)n[e]=0;e=0,a._memory_allocation(n.length<<4);for(let i=t;i<u.length;i++)u[i]+=(n.length>=i+1?n[i]:0)+e,u[i]>65535?(e=1,u[i]&=65535):e=0;0!==e&&(u[u.length]=e)}const l=this.sign()*n.sign();return a.state=0===l?BIGINTEGER_NUMBER_STATE.ZERO:1===l?BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER,a}mul(t){return this.multiply(t)}_divideAndRemainder(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()||n.isInfinite()&&e.isInfinite()?[BigInteger.NaN,BigInteger.NaN]:n.isInfinite()?n.sign()*e.sign()>=0?[BigInteger.POSITIVE_INFINITY,BigInteger.NaN]:[BigInteger.NEGATIVE_INFINITY,BigInteger.NaN]:[BigInteger.ZERO,BigInteger.NaN];if(e.isZero())return n.isZero()?[BigInteger.NaN,BigInteger.NaN]:[n.sign()>=0?BigInteger.POSITIVE_INFINITY:BigInteger.NEGATIVE_INFINITY,BigInteger.NaN];const i=[],r=n.compareToAbs(e),o=n.sign()*e.sign();if(r<0)return i[0]=new BigInteger(0),i[1]=n.clone(),i;if(0===r)return i[0]=new BigInteger(1),i[0].state=1===o?BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER,i[1]=new BigInteger(0),i;const a=new BigInteger(1),s=n.bitLength()-e.bitLength(),u=n.clone()._abs(),l=e.shift(s)._abs(),c=new BigInteger;for(let t=0;t<=s&&(u.compareToAbs(l)>=0&&(u._subtract(l),c._add(a)),t!==s);t++)l._shift(-1),c._shift(1);return i[0]=c,i[0].state=1===o?BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER,i[1]=u,i[1].state=u.state!==BIGINTEGER_NUMBER_STATE.ZERO?n.state:u.state,i}divideAndRemainder(t){return this.clone()._divideAndRemainder(t)}_divide(t){return this._divideAndRemainder(t)[0]}divide(t){return this.clone()._divide(t)}div(t){return this.divide(t)}_remainder(t){const n=this._divideAndRemainder(t)[1];return this.element=n.element,this.state=n.state,this}remainder(t){return this.clone()._remainder(t)}rem(t){return this.remainder(t)}_mod(t){const n=this,e=BigInteger._toBigInteger(t);if(e.isZero())return n;const i=n._divideAndRemainder(e)[1];return n.state!==e.state&&i._add(e),this.element=i.element,this.state=i.state,this}mod(t){return this.clone()._mod(t)}modPow(t,n){const e=BigInteger._toBigInteger(n);let i=new BigInteger(this),r=new BigInteger(1);const o=new BigInteger(t);for(;0!==o.element.length;)0!=(1&o.element[0])&&(r=r.multiply(i).mod(e)),i=i.multiply(i).mod(e),o._shift(-1);return r}modInverse(t){const n=BigInteger._toBigInteger(t),e=this.extgcd(t),i=new BigInteger(1);return 0!==e[2].compareTo(i)?BigInteger.NaN:e[0]._add(n)._mod(n)}factorial(){if(!this.isFinite())return this;if(this.isNegative())return BigInteger.NaN;const t=BigInteger._toInteger(this);let n=BigInteger.ONE;for(let e=2;e<=t;e++)n=n.multiply(e);return n}scaleByPowerOfTen(t){const n=BigInteger._toInteger(t);return 0===n?this:n>0?this.mul(BigInteger.TEN.pow(n)):this.div(BigInteger.TEN.pow(n))}pow(t){const n=new BigInteger(t);if(this.isNaN()||n.isNaN())return BigInteger.NaN;if(n.isZero())return BigInteger.ONE;if(this.isZero())return n.isNegativeInfinity()?BigInteger.POSITIVE_INFINITY:BigInteger.ZERO;if(this.isOne())return this;if(this.isInfinite())return this.isPositiveInfinity()?BigInteger.POSITIVE_INFINITY:n.isPositiveInfinity()?BigInteger.NaN:BigInteger.create(1/0*Math.pow(-1,Math.round(n.doubleValue)));if(n.isInfinite()){if(this.isNegative())return BigInteger.NaN;if(this.compareTo(BigInteger.ONE)<0){if(n.isPositiveInfinity())return BigInteger.ZERO;if(n.isNegativeInfinity())return BigInteger.POSITIVE_INFINITY}else{if(n.isPositiveInfinity())return BigInteger.POSITIVE_INFINITY;if(n.isNegativeInfinity())return BigInteger.ZERO}}let e=BigInteger._toBigInteger(this),i=BigInteger._toBigInteger(1);for(;0!==n.element.length;)0!=(1&n.element[0])&&(i=i.multiply(e)),e=e.multiply(e),n._shift(-1);return i}square(){return this.mul(this)}sqrt(){if(this.isZero())return BigInteger.ZERO;if(this.isNaN())return BigInteger.NaN;if(this.isNegative())return BigInteger.NaN;if(this.isInfinite())return BigInteger.POSITIVE_INFINITY;const t=this.toString(10).replace(/^-/,"").length;let n=BigInteger.ONE.scaleByPowerOfTen(t);for(let t=0;t<300;t++){const t=n.add(this.div(n)).shiftRight(1),e=t.sub(n);if(e.isZero())break;n=t}return n}static setDefaultRandom(t){DEFAULT_RANDOM=t}static getDefaultRandom(){return DEFAULT_RANDOM}getShort(t){if(this.isZero())return 0;const n=BigInteger._toInteger(t);return 0<=n&&n<=this.element.length?this.element[n]:NaN}get booleanValue(){return!this.isZero()&&!this.isNaN()}get intValue(){if(!this.isFinite())return this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0;let t=this.getShort(0)+(this.getShort(1)<<16);return(t&=4294967295)>0&&this.isNegative()&&(t=-t),t}get longValue(){if(!this.isFinite())return this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0;let t=0;for(let n=Math.min(3,this.element.length-1);n>=0;n--)t*=65536,t+=this.getShort(n);return this.isNegative()&&(t=-t),t}get doubleValue(){return this.isFinite()?parseFloat(this.toString()):this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0}gcd(t){const n=BigInteger._toBigInteger(t);if(!this.isFinite()||!n.isFinite())return BigInteger.NaN;let e,i=this,r=n,o=10;for(;0!==r.sign()&&o;)e=i.remainder(r),i=r,r=e,o--;return i}extgcd(t){const n=BigInteger._toBigInteger(t);if(!this.isFinite()||!n.isFinite())return[BigInteger.NaN,BigInteger.NaN,BigInteger.NaN];const e=new BigInteger(1),i=new BigInteger(0);let r,o,a,s,u=this,l=n,c=e,h=i,g=i,f=e;for(;0!==l.sign();){const t=u.divideAndRemainder(l);o=t[0],r=t[1],a=c.subtract(o.multiply(h)),s=g.subtract(o.multiply(f)),c=h,h=a,g=f,f=s,u=l,l=r}return[c,g,u]}lcm(t){const n=BigInteger._toBigInteger(t);return this.isFinite()&&n.isFinite()?this.mul(n).div(this.gcd(n)):BigInteger.NaN}equals(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite())return!n.isNaN()&&!e.isNaN()&&n.state===e.state;if(n.state!==e.state)return!1;if(n.element.length!==e.element.length)return!1;for(let t=0;t<e.element.length;t++)if(n.element[t]!==e.element[t])return!1;return!0}compareToAbs(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()?NaN:n.isInfinite()||e.isInfinite()?0:e.isInfinite()?-1:1;if(n.element.length<e.element.length)return-1;if(n.element.length>e.element.length)return 1;for(let t=n.element.length-1;t>=0;t--)if(n.element[t]!==e.element[t]){const i=n.element[t]-e.element[t];return 0===i?0:i>0?1:-1}return 0}compareTo(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()?NaN:n.state===e.state?0:n.isPositiveInfinity()||e.isNegativeInfinity()?1:-1;const i=n.sign(),r=e.sign();return i!==r?i>r?1:-1:0===i?0:n.compareToAbs(e)*i}equalsState(t){const n=this,e=BigInteger._toBigInteger(t);return n.state===e.state}max(t){const n=BigInteger._toBigInteger(t);return this.compareTo(n)>=0?this.clone():n.clone()}min(t){const n=BigInteger._toBigInteger(t);return this.compareTo(n)>=0?n.clone():this.clone()}clip(t,n){const e=BigInteger._toBigInteger(t),i=BigInteger._toBigInteger(n);if(this.isNaN()||e.isNaN()||i.isNaN())return BigInteger.NaN;const r=e.compareTo(i);if(1===r)throw"clip(min, max) error. (min > max)->("+e+" > "+i+")";return 0===r?e:1===this.compareTo(i)?i:-1===this.compareTo(e)?e:this}static probablePrime(t,n,e,i){const r=e?BigInteger._toInteger(e):100,o=i?BigInteger._toInteger(i):500;for(let e=0;e<o;e++){const e=BigInteger.createRandomBigInteger(t,n);if(e.isProbablePrime(r))return e}return console.log("probablePrime "+i),BigInteger.NaN}isPrime(){if(!this.isFinite())return!1;if(this.sign()<=0)return!1;const t=Math.sqrt(Math.pow(2,51)),n=this.doubleValue,e=Math.ceil(Math.sqrt(n));if(n<=2)return!0;if(e>t)return null;for(let t=2;t<=e;t++)if(n%t==0)return!1;return!0}isProbablePrime(t){if(!this.isFinite())return!1;const n=this.element;if(this.sign()<=0)return!1;if(1===n.length&&n[0]<=2)return!0;if(0==(1&n[0]))return!1;const e=void 0!==t?BigInteger._toInteger(t):100,i=BigInteger.ZERO,r=BigInteger.ONE,o=this,a=o.bitLength(),s=o.subtract(r),u=s.getLowestSetBit(),l=s.shift(-u);if(e<=0)return!1;for(let t=0;t<e;t++){let t;do{t=BigInteger.createRandomBigInteger(a)}while(0===t.compareTo(i)||-1!==t.compareTo(o));let n=l,e=t.modPow(n,o);for(;;){if(n.equals(s)||e.equals(r)||e.equals(s))break;e=e.mul(e)._mod(o),n=n.shiftLeft(1)}if(!e.equals(s)&&0==(1&n.element[0]))return!1}return!0}nextProbablePrime(t,n){if(!this.isFinite())return BigInteger.NaN;const e=void 0!==t?BigInteger._toInteger(t)>>1:50,i=void 0!==n?BigInteger._toInteger(n):1e5,r=this.clone();for(let t=0;t<i;t++)if(r._add(BigInteger.ONE),r.isProbablePrime(e))return r;throw"nextProbablePrime ["+i+"]"}_shift(t){if(!this.isFinite())return this;let n=BigInteger._toInteger(t);if(0===n)return this;const e=this.element;if(1===n){let t=e.length-1;for(0!=(32768&e[t])&&(e[e.length]=1);t>=0;t--)e[t]<<=1,e[t]&=65535,t>0&&0!=(32768&e[t-1])&&(e[t]+=1)}else if(-1===n){for(let t=0;t<e.length;t++)e[t]>>>=1,t<e.length-1&&0!=(1&e[t+1])&&(e[t]|=32768);0===e[e.length-1]&&e.pop()}else{if(n>=16){const t=n>>>4;for(let n=e.length-1;n>=0;n--)e[n+t]=e[n];for(let n=t-1;n>=0;n--)e[n]=0;n&=15}else if(n<=-16){const t=-n>>>4;e.splice(0,t),n+=t<<4}if(0!==n)if(0<n){let t=0;for(let i=0;i<e.length;i++)e[i]=(e[i]<<n)+t,e[i]>65535?(t=e[i]>>>16,e[i]&=65535):t=0;0!==t&&(e[e.length]=t)}else{n=-n;for(let t=0;t<e.length;t++)t!==e.length-1?(e[t]+=e[t+1]<<16,e[t]>>>=n,e[t]&=65535):e[t]>>>=n;0===e[e.length-1]&&e.pop()}}return this}shift(t){return this.clone()._shift(t)}shiftLeft(t){return this.shift(t)}shiftRight(t){return this.shift(-t)}getLowestSetBit(){if(!this.isFinite())return NaN;for(let t=0;t<this.element.length;t++)if(0!==this.element[t]){const n=this.element[t];for(let e=0;e<16;e++)if(0!=(n>>>e&1))return 16*t+e}return-1}bitLength(){if(!this.isFinite())return NaN;for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t]){const n=this.element[t];for(let e=15;e>=0;e--)if(0!=(n>>>e&1))return 16*t+e+1}return 0}bitCount(){if(!this.isFinite())return NaN;let t;const n=(t=this.sign()>=0?this:this.add(new BigInteger(1))).bitLength();let e=0,i=0;for(let r=0;e<n;r++){const o=t.element[r];for(let t=0;t<16&&e<n;t++,e++)0!=(o>>>t&1)&&(i+=1)}return i}_and(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite()){let t;return t=n.isNaN()||e.isNaN()?BigInteger.NaN:BigInteger.ZERO,t=t.clone(),this.element=t.element,this.state=t.state,this}const i=n.sign(),r=e.sign(),o=Math.max(n.bitLength(),e.bitLength()),a=n.getTwosComplement(o).element,s=e.getTwosComplement(o).element,u=Math.max(a.length,s.length);this.element=[];for(let t=0;t<u;t++){const n=t>=a.length?0:a[t],e=t>=s.length?0:s[t];this.element[t]=n&e}return this._memory_reduction(),1===i||1===r?this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER:this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER&&(this.element=this.getTwosComplement(o).element,this._memory_reduction()),this}and(t){return this.clone()._and(t)}_or(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite()){let t;return t=n.isNaN()||e.isNaN()?BigInteger.NaN.clone():n.isInfinite()||e.isInfinite()?BigInteger.ZERO:n.isInfinite()?e:n,t=t.clone(),this.element=t.element,this.state=t.state,this}const i=n.sign(),r=e.sign(),o=Math.max(n.bitLength(),e.bitLength()),a=n.getTwosComplement(o).element,s=e.getTwosComplement(o).element,u=Math.max(a.length,s.length);this.element=[];for(let t=0;t<u;t++){const n=t>=a.length?0:a[t],e=t>=s.length?0:s[t];this.element[t]=n|e}return this.state=-1===i||-1===r?BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER:0===Math.max(i,r)?BIGINTEGER_NUMBER_STATE.ZERO:BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER,this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER&&(this.element=this.getTwosComplement(o).element,this._memory_reduction()),this}or(t){return this.clone()._or(t)}_xor(t){const n=this,e=BigInteger._toBigInteger(t);if(!n.isFinite()||!e.isFinite()){let t;return t=n.isNaN()||e.isNaN()?BigInteger.NaN:n.isInfinite()||e.isInfinite()?BigInteger.ZERO:n.isInfinite()?e:n,t=t.clone(),this.element=t.element,this.state=t.state,this}const i=n.sign(),r=e.sign(),o=Math.max(n.bitLength(),e.bitLength()),a=n.getTwosComplement(o).element,s=e.getTwosComplement(o).element,u=Math.max(a.length,s.length);this.element=[];for(let t=0;t<u;t++){const n=t>=a.length?0:a[t],e=t>=s.length?0:s[t];this.element[t]=n^e}return this._memory_reduction(),this.state=0!==i&&i!==r?BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER:BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER,this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER&&(this.element=this.getTwosComplement(o).element,this._memory_reduction()),this}xor(t){return this.clone()._xor(t)}_not(){return this._add(new BigInteger(1))._negate()}not(){return this.clone()._not()}_setBit(t){const n=BigInteger._toInteger(t);return this._memory_allocation(n+1),this.element[n>>>4]|=1<<(15&n),this.state=BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER,this}setBit(t){const n=BigInteger._toInteger(t);return this.clone()._setBit(n)}_flipBit(t){const n=BigInteger._toInteger(t);return this._memory_allocation(n+1),this.element[n>>>4]^=1<<(15&n),this._memory_reduction(),this}flipBit(t){const n=BigInteger._toInteger(t);return this.clone()._flipBit(n)}clearBit(t){const n=BigInteger._toInteger(t),e=this.clone();return e.element[n>>>4]&=~(1<<(15&n)),e._memory_reduction(),e}testBit(t){const n=BigInteger._toInteger(t);return 0!=(this.element[n>>>4]>>>(15&n)&1)}isZero(){return this.state===BIGINTEGER_NUMBER_STATE.ZERO}isOne(){return this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER&&1===this.element.length&&1===this.element[0]}isPositive(){return this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER||this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY}isNegative(){return this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_NUMBER||this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY}isNotNegative(){return this.state===BIGINTEGER_NUMBER_STATE.ZERO||this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_NUMBER||this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY}isNaN(){return this.state===BIGINTEGER_NUMBER_STATE.NOT_A_NUMBER}isPositiveInfinity(){return this.state===BIGINTEGER_NUMBER_STATE.POSITIVE_INFINITY}isNegativeInfinity(){return this.state===BIGINTEGER_NUMBER_STATE.NEGATIVE_INFINITY}isInfinite(){return this.isPositiveInfinity()||this.isNegativeInfinity()}isFinite(){return!this.isNaN()&&!this.isInfinite()}static get MINUS_ONE(){return DEFINE$1.MINUS_ONE}static get ZERO(){return DEFINE$1.ZERO}static get ONE(){return DEFINE$1.ONE}static get TWO(){return DEFINE$1.TWO}static get TEN(){return DEFINE$1.TEN}static get POSITIVE_INFINITY(){return DEFINE$1.POSITIVE_INFINITY}static get NEGATIVE_INFINITY(){return DEFINE$1.NEGATIVE_INFINITY}static get NaN(){return DEFINE$1.NaN}}const DEFINE$1={MINUS_ONE:new BigInteger(-1),ZERO:new BigInteger(0),ONE:new BigInteger(1),TWO:new BigInteger(2),TEN:new BigInteger(10),POSITIVE_INFINITY:new BigInteger(Number.POSITIVE_INFINITY),NEGATIVE_INFINITY:new BigInteger(Number.NEGATIVE_INFINITY),NaN:new BigInteger(Number.NaN)};let DEFAULT_CONTEXT=MathContext.DECIMAL128;class BigDecimalTool{static ToBigDecimalFromString(t){let n,e=0,i=t.replace(/\s/g,"").toLowerCase();if(/nan/.test(i))return{scale:0,integer:BigInteger.NaN};if(/inf/.test(i))return/-/.test(i)?{scale:0,integer:BigInteger.NEGATIVE_INFINITY}:{scale:0,integer:BigInteger.POSITIVE_INFINITY};let r="";return null!==(n=i.match(/^[+-]+/))&&(n=n[0],i=i.substr(n.length),-1!==n.indexOf("-")&&(r+="-")),null!==(n=i.match(/^[0-9]+/))&&(n=n[0],i=i.substr(n.length),r+=n),null!==(n=i.match(/^\.[0-9]+/))&&(n=n[0],i=i.substr(n.length),e+=(n=n.substr(1)).length,r+=n),null!==(n=i.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),e-=parseInt(n,10)),{scale:e,integer:new BigInteger([r,10])}}static ToBigDecimalFromNumber(t){const n="boolean"!=typeof t?t:t?1:0;if(!isFinite(n))return n===1/0?{scale:0,integer:BigInteger.POSITIVE_INFINITY}:n===-1/0?{scale:0,integer:BigInteger.NEGATIVE_INFINITY}:{scale:0,integer:BigInteger.NaN};if(n===Math.floor(n))return{scale:0,integer:new BigInteger(Math.round(n))};{let t=Math.trunc(Math.log(Math.abs(n))/Math.log(10)),e=n/Math.pow(10,t);t=-t;for(let n=0;n<14&&(e*=10,t+=1,!(Math.abs(e-Math.round(e))<=Number.EPSILON));n++);return e=Math.round(1e14*e)/1e14,{scale:t,integer:new BigInteger(e)}}}}class BigDecimal{constructor(t){this._scale=0,this.default_context=DEFAULT_CONTEXT;let n=!1;if(arguments.length>1)throw"BigDecimal Unsupported argument["+arguments.length+"]";if(t instanceof BigDecimal)this.integer=t.integer.clone(),this.int_string=t.int_string,this._scale=t._scale,this.default_context=t.default_context;else if("number"==typeof t||"boolean"==typeof t){const n=BigDecimalTool.ToBigDecimalFromNumber(t);this.integer=n.integer,this._scale=n.scale}else if("string"==typeof t){const n=BigDecimalTool.ToBigDecimalFromString(t);this.integer=n.integer,this._scale=n.scale}else if(t instanceof Array){if(t.length>=1){const n=t[0];if("number"==typeof n||"boolean"==typeof n){const t=BigDecimalTool.ToBigDecimalFromNumber(n);this.integer=t.integer,this._scale=t.scale}else if("string"==typeof n){const t=BigDecimalTool.ToBigDecimalFromString(n);this.integer=t.integer,this._scale=t.scale}else if(n instanceof BigDecimal)this.integer=n.integer.clone(),this._scale=n._scale;else if(n instanceof BigInteger)this.integer=n.clone();else{if("object"!=typeof n)throw"BigDecimal Unsupported argument "+n+"("+typeof n+")";if("toBigDecimal"in n){const t=n.toBigDecimal();this.integer=t.integer,this._scale=t._scale}else if("doubleValue"in n){const t=BigDecimalTool.ToBigDecimalFromNumber(n.doubleValue);this.integer=t.integer,this._scale=t.scale}else{const t=BigDecimalTool.ToBigDecimalFromString(n.toString());this.integer=t.integer,this._scale=t.scale}}}t.length>=2&&("number"==typeof t[1]?(this._scale=t[1],t.length>=3&&(this.default_context=void 0!==t[2]&&t[2]instanceof MathContext?t[2]:DEFAULT_CONTEXT,n=!0)):t.length>=2&&(this.default_context=void 0!==t[1]&&t[1]instanceof MathContext?t[1]:DEFAULT_CONTEXT,n=!0))}else if(t instanceof BigInteger)this.integer=t.clone();else{if("object"!=typeof t)throw"BigDecimal Unsupported argument "+arguments;if("toBigDecimal"in t){const n=t.toBigDecimal();this.integer=n.integer,this._scale=n._scale,this.default_context=n.default_context}else if("doubleValue"in t){const n=BigDecimalTool.ToBigDecimalFromNumber(t.doubleValue);this.integer=n.integer,this._scale=n.scale}else if("integer"in t&&"scale"in t&&"context"in t)this.integer=new BigInteger(t.integer),t.scale&&(this._scale=t.scale),t.context&&(this.default_context=t.context,n=!0);else if(t instanceof Object){const n=BigDecimalTool.ToBigDecimalFromString(t.toString());this.integer=n.integer,this._scale=n.scale}}if(n){const t=this.round(this.default_context);this.integer=t.integer,this._scale=t._scale,delete this.int_string}if(!(this.integer instanceof BigInteger&&this.default_context instanceof MathContext))throw"BigDecimal Unsupported argument "+arguments}static create(t){return t instanceof BigDecimal?t:new BigDecimal(t)}createUsingThisSettings(t,n){return new BigDecimal(n?[t,n]:[t,this.default_context])}static valueOf(t,n){return new BigDecimal(1===arguments.length?t:[t,n])}static _toBigDecimal(t){return t instanceof BigDecimal?t:new BigDecimal(t)}static _toBigInteger(t){return t instanceof BigInteger?t:t instanceof BigDecimal?t.toBigInteger():new BigInteger(t)}static _toFloat(t){return"number"==typeof t?t:t instanceof BigDecimal?t.doubleValue:new BigDecimal(t).doubleValue}static _toInteger(t){return"number"==typeof t?Math.trunc(t):t instanceof BigInteger?t.intValue:new BigInteger(t).intValue}_getUnsignedIntegerString(){return void 0===this.int_string&&(this.int_string=this.integer.toString(10).replace(/^-/,"")),this.int_string}clone(){return new BigDecimal(this)}scale(){return this._scale}signum(){return this.isFinite()?this.integer.signum():this.isNaN()?NaN:this.isPositiveInfinity()?1:-1}sign(){return this.signum()}precision(){return this._getUnsignedIntegerString().length}unscaledValue(){return new BigInteger(this.integer)}ulp(){return new BigDecimal([BigInteger.ONE,this.scale()])}abs(t){if(!this.isFinite())return this.isNegativeInfinity()?BigDecimal.POSITIVE_INFINITY:this;const n=this.clone();return n.integer=n.integer.abs(),void 0===t?n:n.round(t)}plus(t){if(!this.isFinite())return this;const n=this.clone();return void 0===t?n:n.round(t)}negate(t){if(!this.isFinite())return this.isPositiveInfinity()?BigDecimal.NEGATIVE_INFINITY:this.isNegativeInfinity()?BigDecimal.POSITIVE_INFINITY:this;const n=this.clone();return n.integer=n.integer.negate(),void 0===t?n:n.round(t)}movePointLeft(t){if(!this.isFinite())return this;const n=BigDecimal._toInteger(t);let e=this.scaleByPowerOfTen(-n);return e=e.setScale(Math.max(this.scale()+n,0))}movePointRight(t){if(!this.isFinite())return this;const n=BigDecimal._toInteger(t);let e=this.scaleByPowerOfTen(n);return e=e.setScale(Math.max(this.scale()-n,0))}stripTrailingZeros(){if(!this.isFinite())return this;const t=this.signum()>=0?"":"-",n=this.integer.toString(10).replace(/^-/,""),e=n.match(/0+$/);let i=null!==e?e[0].length:0;i===n.length&&(i=n.length-1);const r=this.scale()-i;return new BigDecimal([new BigInteger(t+n.substring(0,n.length-i)),r])}add(t,n){const e=BigDecimal._toBigDecimal(t),i=this,r=e;if(!i.isFinite()||!r.isFinite())return i.isNaN()||r.isNaN()||i.isInfinite()&&r.isInfinite()&&!i.equalsState(r)?BigDecimal.NaN:i.isPositiveInfinity()||r.isPositiveInfinity()?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY;const o=n||e.default_context,a=Math.max(i._scale,r._scale);if(i._scale===r._scale)return new BigDecimal([i.integer.add(r.integer),a,o]);if(i._scale>r._scale){const t=r.setScale(i._scale);return new BigDecimal([i.integer.add(t.integer),a,o])}{const t=i.setScale(r._scale);return new BigDecimal([t.integer.add(r.integer),a,o])}}subtract(t,n){const e=BigDecimal._toBigDecimal(t),i=this,r=e;if(!i.isFinite()||!r.isFinite())return i.isNaN()||r.isNaN()||i.equalsState(r)?BigDecimal.NaN:i.isNegativeInfinity()||r.isPositiveInfinity()?BigDecimal.NEGATIVE_INFINITY:BigDecimal.POSITIVE_INFINITY;const o=n||e.default_context,a=Math.max(i._scale,r._scale);if(i._scale===r._scale)return new BigDecimal([i.integer.subtract(r.integer),a,o]);if(i._scale>r._scale){const t=r.setScale(i._scale);return new BigDecimal([i.integer.subtract(t.integer),a,o])}{const t=i.setScale(r._scale);return new BigDecimal([t.integer.subtract(r.integer),a,o])}}sub(t,n){return this.subtract(t,n)}multiply(t,n){const e=BigDecimal._toBigDecimal(t),i=this,r=e;if(!i.isFinite()||!r.isFinite())return i.isNaN()||r.isNaN()||i.isZero()||r.isZero()?BigDecimal.NaN:i.sign()*r.sign()>0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY;const o=n||e.default_context,a=i.integer.multiply(r.integer),s=i._scale+r._scale;return new BigDecimal([a,s,o])}mul(t,n){return this.multiply(t,n)}divideToIntegralValue(t,n){const e=BigDecimal._toBigDecimal(t),i=this,r=e;if(!i.isFinite()||!r.isFinite())return i.isNaN()||r.isNaN()||i.isInfinite()&&r.isInfinite()?BigDecimal.NaN:i.isInfinite()?i.sign()*r.sign()>=0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY:BigDecimal.ZERO;if(r.isZero())return i.isZero()?BigDecimal.NaN:i.sign()>=0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY;const o=n||e.default_context,a=function(t){let n,e="1";for(n=0;n<t;n++)e+="0";return new BigInteger(e)};if(0===r.compareTo(BigDecimal.ZERO))throw"ArithmeticException";let s=i.integer,u=r.integer;const l=i._scale-r._scale;i._scale>r._scale?u=u.multiply(a(l)):i._scale<r._scale&&(s=s.multiply(a(-l)));const c=s.divide(u),h=c.signum();if(0!==h){const t=c.toString(10).replace(/^-/,"");if(0!==o.getPrecision()&&t.length>o.getPrecision())throw"ArithmeticException";if(t.length<=-l){const n=t.match(/0+$/),e=null!==n?n[0].length:0,i=h>=0?"":"-";return new BigDecimal([new BigInteger(i+t.substring(0,t.length-e)),-e,o])}}let g=new BigDecimal(c);return g=g.setScale(l,RoundingMode.UP),g=g.round(o),g.default_context=o,g}divideAndRemainder(t,n){const e=BigDecimal._toBigDecimal(t);if(!this.isFinite()||!e.isFinite())return this.isNaN()||e.isNaN()||this.isInfinite()&&e.isInfinite()?[BigDecimal.NaN,BigDecimal.NaN]:this.isInfinite()?this.sign()*e.sign()>=0?[BigDecimal.POSITIVE_INFINITY,BigDecimal.NaN]:[BigDecimal.NEGATIVE_INFINITY,BigDecimal.NaN]:[BigDecimal.ZERO,BigDecimal.NaN];if(e.isZero())return this.isZero()?[BigDecimal.NaN,BigDecimal.NaN]:[this.sign()>=0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY,BigDecimal.NaN];const i=n||e.default_context,r=this.divideToIntegralValue(e,i);return[r,this.subtract(r.multiply(e,i),i)]}rem(t,n){return this.divideAndRemainder(t,n)[1]}mod(t,n){const e=this,i=BigDecimal._toBigDecimal(t);if(i.isZero())return e;const r=e.rem(i,n);return e.equalsState(i)?r:r.add(i,n)}divide(t,n){const e=this,i=BigDecimal._toBigDecimal(t);if(!e.isFinite()||!i.isFinite())return e.isNaN()||i.isNaN()||e.isInfinite()&&i.isInfinite()?BigDecimal.NaN:e.isInfinite()?e.sign()*i.sign()>=0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY:BigDecimal.ZERO;if(i.isZero())return e.isZero()?BigDecimal.NaN:e.sign()>=0?BigDecimal.POSITIVE_INFINITY:BigDecimal.NEGATIVE_INFINITY;let r=null,o=null,a=0,s=!1;if(n?n instanceof MathContext?(r=(o=n).getRoundingMode(),a=o.getPrecision()):(n&&n.scale?a=n.scale:(s=!0,a=n&&(n.roundingMode||n.context)?e.scale():e.scale()-i.scale()),n&&n.context?(r=(o=n.context).getRoundingMode(),a=o.getPrecision()):o=this.default_context,r=n&&n.roundingMode?n.roundingMode:o.getRoundingMode()):(r=(o=i.default_context).getRoundingMode(),a=o.getPrecision()),0===i.compareTo(BigDecimal.ZERO))throw"ArithmeticException";const u=o.getPrecision();let l;if(0===u||u<=100){let t;const n={};let r,o,a;l=BigDecimal.ZERO;const s=0!==u?u+8:262143;t=e;for(let e=0;e<s&&(r=t.divideAndRemainder(i,MathContext.UNLIMITED),o=r[0],a=r[1],l=l.add(o.scaleByPowerOfTen(-e),MathContext.UNLIMITED),0!==a.compareTo(BigDecimal.ZERO));e++){if(0===u){if(n[a._getUnsignedIntegerString()])throw"ArithmeticException "+l+"["+a._getUnsignedIntegerString()+"]";n[a._getUnsignedIntegerString()]=!0}t=a.scaleByPowerOfTen(1)}}else{const t=new MathContext(u+4,RoundingMode.HALF_UP);l=this.mul(i.inv(t),t)}if(l.default_context=o,s)try{l=l.setScale(a,r)}catch(t){}else l=l.setScale(a,r);return l=l.round(o)}div(t,n){return this.divide(t,n)}inv(t){if(!this.isFinite())return this.isNaN()?BigDecimal.NaN:BigDecimal.ZERO;if(this.isZero())return BigDecimal.NaN;const n=t||this.default_context,e=BigDecimal.getDefaultContext(),i=this.isNegative();let r=i?this.negate():this;BigDecimal.setDefaultContext(n);const o=BigDecimal.create(1),a=-r.scale()+(r.precision()-1),s=new BigDecimal([1,a+1]);if(s.isZero())return BigDecimal.setDefaultContext(e),null;r=r.round(n);let u=s;for(let t=0;t<20;t++){const t=o.sub(r.mul(u),n);if(t.isZero())break;u=u.mul(o.add(t).add(t.square()),n)}return BigDecimal.setDefaultContext(e),i?u.negate():u}factorial(t){if(!this.isFinite())return this;const n=t||this.default_context;return new BigDecimal(new BigInteger(this).factorial()).round(n)}scaleByPowerOfTen(t){if(!this.isFinite())return this;const n=BigDecimal._toInteger(t),e=this.clone();return e._scale=this.scale()-n,e}static setDefaultContext(t){DEFAULT_CONTEXT=t||MathContext.DECIMAL128}static getDefaultContext(){return DEFAULT_CONTEXT}get booleanValue(){return this.integer.booleanValue}get intValue(){return this.isFinite()?4294967295&this.toBigInteger().intValue:this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0}get intValueExact(){if(!this.isFinite())throw"ArithmeticException";const t=this.toBigInteger().intValue;if(t<-2147483648||2147483647<t)throw"ArithmeticException";return t}get floatValue(){if(!this.isFinite())return this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0;const t=this.precision();return MathContext.DECIMAL32.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(this.toEngineeringString())}get doubleValue(){return this.isFinite()?parseFloat(this.toEngineeringString()):this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0}toBigInteger(){return this.integer.scaleByPowerOfTen(-this.scale())}equals(t,n){if(n)return 0===this.compareTo(t,n);if(t instanceof BigDecimal||"string"==typeof t){const n=t instanceof BigDecimal?t:BigDecimal._toBigDecimal(t);return!this.isNaN()&&!n.isNaN()&&(this.equalsState(n)&&this._scale===n._scale&&this.integer.equals(n.integer))}return 0===this.compareTo(t)}equalsState(t){const n=this,e=BigDecimal._toBigDecimal(t);return n.integer.equalsState(e.integer)}compareTo(t,n){const e=this,i=BigDecimal._toBigDecimal(t);if(!e.isFinite()||!i.isFinite())return e.integer.compareTo(i.integer);if(n){const t=BigDecimal._toBigDecimal(n),r=e.sub(i,MathContext.UNLIMITED),o=r.abs();return o.compareTo(t)<=0?0:r.sign()}{const t=e.signum(),n=i.signum();if(0===t&&t===n)return 0;if(0===t)return-n;if(0===n)return t}if(e._scale===i._scale)return e.integer.compareTo(i.integer);if(e._scale>i._scale){const t=i.setScale(e._scale);return e.integer.compareTo(t.integer)}{const t=e.setScale(i._scale);return t.integer.compareTo(i.integer)}}max(t){const n=BigDecimal._toBigDecimal(t);return this.isNaN()||n.isNaN()?BigDecimal.NaN:this.compareTo(n)>=0?this.clone():n.clone()}min(t){const n=BigDecimal._toBigDecimal(t);return this.isNaN()||n.isNaN()?BigDecimal.NaN:this.compareTo(n)<=0?this.clone():n.clone()}clip(t,n){const e=BigDecimal._toBigDecimal(t),i=BigDecimal._toBigDecimal(n);if(this.isNaN()||e.isNaN()||i.isNaN())return BigDecimal.NaN;const r=e.compareTo(i);if(1===r)throw"clip(min, max) error. (min > max)->("+e+" > "+i+")";return 0===r?e:1===this.compareTo(i)?i:-1===this.compareTo(e)?e:this}toString(){if(!this.isFinite())return this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity";const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(t)}toScientificNotation(t){if(!this.isFinite())return this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity";const n=BigDecimal._toInteger(t),e=this._getUnsignedIntegerString();let i=this.scale();const r=[];let o,a;if(-1===this.signum()&&(r[r.length]="-"),(i=-n-i)>=0)for(r[r.length]=e,o=0;o<i;o++)r[r.length]="0";else if(0<(a=this.precision()+i))r[r.length]=e.substring(0,a),r[r.length]=".",r[r.length]=e.substring(a,e.length);else{for(a=-a,r[r.length]="0.",o=0;o<a;o++)r[r.length]="0";r[r.length]=e}return r[r.length]="E",n>=0&&(r[r.length]="+"),r[r.length]=n,r.join("")}toEngineeringString(){if(!this.isFinite())return this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity";const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(3*Math.floor(t/3))}toPlainString(){return this.isFinite()?0===this.scale()?this.signum()<0?"-"+this._getUnsignedIntegerString():this._getUnsignedIntegerString():this.toScientificNotation(0).match(/^[^E]*/)[0]:this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity"}setScale(t,n){if(!this.isFinite())return this;const e=BigDecimal._toInteger(t);if(this.scale()===e)return this.clone();const i=void 0!==n?RoundingMode.valueOf(n):RoundingMode.UNNECESSARY;let r=this._getUnsignedIntegerString();const o=this.signum(),a=o>=0?"":"-",s=e-this.scale();if(0<=s){let t;for(t=0;t<s;t++)r+="0";return new BigDecimal([new BigInteger(a+r),e])}const u=r.length+s,l=u+1;if(u<=0){const t=(o+i.getAddNumber(o))/10;return new BigDecimal([new BigInteger(t),e])}{const t=r.match(/0+$/),n=null!==t?t[0].length:0;if(n+s>=0||i===RoundingMode.DOWN)return new BigDecimal([new BigInteger(a+r.substring(0,u)),e])}{const t=(r=r.substring(0,l)).length>1?2:1,n=parseInt(r.substring(r.length-t,r.length))*o,s=new BigInteger(a+r),u=new BigInteger(i.getAddNumber(n));return r=s.add(u).toString(),new BigDecimal([new BigInteger(r.substring(0,r.length-1)),e])}}round(t){if(!this.isFinite())return this;if(1===arguments.length){if(void 0!==t){if(!(t instanceof MathContext))throw"not MathContext";const n=t.getPrecision(),e=n-this.precision();if(0===e||0===n)return this.clone();const i=this.setScale(this.scale()+e,t.getRoundingMode());if(e>0)return i;if(i.precision()===t.getPrecision())return i;const r=i.integer.signum()>=0?"":"-",o=i._getUnsignedIntegerString(),a=r+o.substring(0,o.length-1);return new BigDecimal([new BigInteger(a),i.scale()-1])}return this}return this.setScale(0,RoundingMode.HALF_UP)}floor(){return this.isFinite()?this.setScale(0,RoundingMode.FLOOR):this}ceil(){return this.isFinite()?this.setScale(0,RoundingMode.CEILING):this}fix(){return this.isFinite()?this.setScale(0,RoundingMode.DOWN):this}fract(){return this.isFinite()?this.sub(this.floor()):BigDecimal.NaN}pow(t,n){const e=this,i=BigDecimal._toBigDecimal(t),r=n||this.default_context;if(e.isNaN()||i.isNaN())return BigDecimal.NaN;if(i.isZero())return n?BigDecimal.ONE.round(n):BigDecimal.ONE;if(e.isZero())return BigDecimal.ZERO;if(e.isOne())return n?e.round(n):e;if(e.isInfinite())return e.isPositiveInfinity()?BigDecimal.POSITIVE_INFINITY:i.isPositiveInfinity()?BigDecimal.NaN:BigDecimal.create(1/0*Math.pow(-1,Math.round(i.doubleValue)));if(i.isInfinite()){if(e.isNegative())return BigDecimal.NaN;if(e.compareTo(BigDecimal.ONE)<0){if(i.isPositiveInfinity())return BigDecimal.ZERO;if(i.isNegativeInfinity())return BigDecimal.POSITIVE_INFINITY}else{if(i.isPositiveInfinity())return BigDecimal.POSITIVE_INFINITY;if(i.isNegativeInfinity())return BigDecimal.ZERO}}const o=i.intValue;if(Math.abs(o)>1e3)throw BigDecimal.POSITIVE_INFINITY;if(0===r.getPrecision()&&i.isNegative())return BigDecimal.NaN;if(i.isInteger()){const t=i.isNegative();let n,e,a=Math.round(Math.abs(o));for(n=this.clone(),e=BigDecimal.ONE;0!==a;)0!=(1&a)&&(e=e.multiply(n,MathContext.UNLIMITED)),n=n.multiply(n.clone(),MathContext.UNLIMITED),a>>>=1;return e.default_context=r,e=t?e.inv(r):e.round(r)}return this.log(r).mul(t,r).exp(r)}square(t){return this.mul(this,t)}sqrt(t){return this.isZero()?BigDecimal.ZERO:this.isNaN()?BigDecimal.NaN:this.isNegative()?BigDecimal.NaN:this.isInfinite()?BigDecimal.POSITIVE_INFINITY:this.isZero()?BigDecimal.ZERO.round(t):this.rsqrt(t).inv(t)}rsqrt(t){if(this.isZero())return BigDecimal.POSITIVE_INFINITY;if(this.isNaN())return BigDecimal.NaN;if(this.isInfinite())return BigDecimal.ZERO;if(this.isNegative())return BigDecimal.NaN;const n=t||this.default_context,e=BigDecimal.getDefaultContext(),i=this.round(n);BigDecimal.setDefaultContext(n);const r=BigDecimal.create(1),o=BigDecimal.create(5),a=BigDecimal.create(6),s=BigDecimal.create(8),u=BigDecimal.create(16).inv(),l=i.inv();if(l.isZero())throw BigDecimal.setDefaultContext(e),"ArithmeticException";let c=l;for(let t=0;t<50;t++){const t=r.sub(i.mul(c.square())).round(n);if(t.isZero())break;c=c.mul(r.add(t.mul(s.add(t.mul(a.add(o.mul(t))))).mul(u)))}return BigDecimal.setDefaultContext(e),c}log(t){if(this.isZero())return BigDecimal.NEGATIVE_INFINITY;if(this.isNaN())return BigDecimal.NaN;if(this.isNegative())return BigDecimal.NaN;if(this.isInfinite())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;if(this.isOne())return new BigDecimal([0,n]);const e=BigDecimal.getDefaultContext(),i=-this.scale()+(this.precision()-1)+1,r=new MathContext(n.getPrecision()+i,RoundingMode.HALF_UP);BigDecimal.setDefaultContext(r);let o=this.round(r),a=0;{const t=BigDecimal.E,e=o.compareTo(t);if(0===e)return BigDecimal.setDefaultContext(n),new BigDecimal([1,n]);if(e>0)for(;a<300&&!(o.compareTo(t)<=0);a++)o=o.divide(t,n);else{const e=new BigDecimal(1);if(o.compareTo(e)<0)for(;a>-300&&!(o.compareTo(e)>0);a--)o=o.mul(t,n)}}BigDecimal.setDefaultContext(n);const s=(o=o.round(n)).sub(BigDecimal.ONE).div(o.add(BigDecimal.ONE)),u=s.mul(s);{let t=s,n=s,e=BigDecimal.ONE;for(let i=0;i<300;i++){e=e.add(BigDecimal.TWO),t=t.mul(u);const i=n.add(t.div(e)),r=i.sub(n);if(n=i,r.isZero())break}o=n.mul(BigDecimal.TWO)}const l=o.add(a);return BigDecimal.setDefaultContext(e),l}exp(t){if(this.isZero())return new BigDecimal([1,t]);if(this.isNaN())return BigDecimal.NaN;if(this.isNegativeInfinity())return BigDecimal.ZERO;if(this.isPositiveInfinity())return BigDecimal.POSITIVE_INFINITY;const n=this.isNegative(),e=t||this.default_context,i=BigDecimal.getDefaultContext();let r=this;n&&(r=r.negate());const o=-r.scale()+(r.precision()-1)+1,a=new MathContext(e.getPrecision()+o,RoundingMode.HALF_UP);BigDecimal.setDefaultContext(a);let s=0,u=1;{const t=r.doubleValue;t>=10&&(s=Math.floor(Math.log(Math.floor(t))/Math.log(10)),u=Math.pow(10,s))}const l=r.div(u,e);let c;{let t=l,n=BigDecimal.ONE.add(l),e=BigDecimal.ONE;for(let i=2;i<300;i++){e=e.mul(i),t=t.mul(l);const r=n.add(t.div(e)),o=r.sub(n);if(n=r,o.isZero())break}c=n}return c=c.pow(u),BigDecimal.setDefaultContext(i),n?c.round(e).inv():c.round(e)}sin(t){if(!this.isFinite())return BigDecimal.NaN;const n=t||this.default_context,e=BigDecimal.getDefaultContext(),i=-this.scale()+(this.precision()-1)+1,r=new MathContext(n.getPrecision()+i,RoundingMode.HALF_UP);BigDecimal.setDefaultContext(r);let o=this.mod(BigDecimal.TWO_PI,n);BigDecimal.setDefaultContext(n);let a=o=o.round(n);{const t=o.mul(o);let n=o,e=BigDecimal.ONE,i=-1;for(let r=2;r<300;r++)if(e=e.mul(r),r%2==1){n=n.mul(t);let r;i<0?(r=a.sub(n.div(e)),i=1):(r=a.add(n.div(e)),i=-1);const o=r.sub(a);if(a=r,o.isZero())break}}return BigDecimal.setDefaultContext(e),a}cos(t){if(!this.isFinite())return BigDecimal.NaN;const n=t||this.default_context,e=BigDecimal.getDefaultContext(),i=-this.scale()+(this.precision()-1)+1,r=new MathContext(n.getPrecision()+i,RoundingMode.HALF_UP);BigDecimal.setDefaultContext(r);let o=this.mod(BigDecimal.TWO_PI,n);BigDecimal.setDefaultContext(n),o=o.round(n);let a=BigDecimal.ONE;{let t=BigDecimal.ONE;const n=o.mul(o);let e=BigDecimal.ONE,i=-1;for(let r=2;r<300;r++)if(e=e.mul(r),r%2==0){t=t.mul(n);let r;i<0?(r=a.sub(t.div(e)),i=1):(r=a.add(t.div(e)),i=-1);const o=r.sub(a);if(a=r,o.isZero())break}}return BigDecimal.setDefaultContext(e),a}tan(t){if(!this.isFinite())return BigDecimal.NaN;const n=t||this.default_context;return this.sin(n).div(this.cos(n))}atan(t){if(!this.isFinite())return this.isNaN()?BigDecimal.NaN:this.isPositiveInfinity()?BigDecimal.HALF_PI:BigDecimal.HALF_PI.negate();const n=t||this.default_context,e=BigDecimal.getDefaultContext();if(BigDecimal.setDefaultContext(n),this.isZero()){const t=BigDecimal.ZERO;return BigDecimal.setDefaultContext(e),t}if(0===this.compareTo(BigDecimal.ONE)){const t=BigDecimal.QUARTER_PI;return BigDecimal.setDefaultContext(e),t}if(0===this.compareTo(BigDecimal.MINUS_ONE)){const t=BigDecimal.QUARTER_PI.negate();return BigDecimal.setDefaultContext(e),t}const i=this.sign();let r,o=this.abs(n);1===o.compareTo(BigDecimal.TWO)?(r=1,o=o.inv()):1===o.compareTo(BigDecimal.HALF)?(r=2,o=BigDecimal.ONE.sub(o).div(BigDecimal.ONE.add(o))):r=3;let a=o;{const t=o.mul(o);let n=o,e=BigDecimal.ONE,i=-1;for(let r=0;r<300;r++){n=n.mul(t),e=e.add(BigDecimal.TWO);let r;i<0?(r=a.sub(n.div(e)),i=1):(r=a.add(n.div(e)),i=-1);const o=r.sub(a);if(a=r,o.isZero())break}}return 1===r?a=BigDecimal.HALF_PI.sub(a):2===r&&(a=BigDecimal.QUARTER_PI.sub(a)),i<0&&(a=a.negate()),BigDecimal.setDefaultContext(e),a}atan2(t,n){const e=BigDecimal.getDefaultContext(),i=this.round(n),r=new BigDecimal([t,n]);if(r.isNaN()||i.isNaN())return BigDecimal.NaN;let o;if(r.isPositive())o=i.div(r).atan();else if(i.isNotNegative()&&r.isNegative())o=i.div(r).atan().add(BigDecimal.PI);else if(i.isNegative()&&r.isNegative())o=i.div(r).atan().sub(BigDecimal.PI);else if(i.isPositive())o=BigDecimal.HALF_PI;else{if(!i.isNegative())throw"ArithmeticException";o=BigDecimal.HALF_PI.negate()}return BigDecimal.setDefaultContext(e),o}and(t,n){const e=this,i=BigDecimal._toBigDecimal(t),r=n||i.default_context,o=e.toBigInteger(),a=i.toBigInteger();return new BigDecimal([o.and(a),r])}or(t,n){const e=this,i=BigDecimal._toBigDecimal(t),r=n||i.default_context,o=e.toBigInteger(),a=i.toBigInteger();return new BigDecimal([o.or(a),r])}xor(t,n){const e=this,i=BigDecimal._toBigDecimal(t),r=n||i.default_context,o=e.toBigInteger(),a=i.toBigInteger();return new BigDecimal([o.xor(a),r])}not(t){const n=t||this.default_context,e=this.toBigInteger();return new BigDecimal([e.not(),n])}shift(t,n){const e=n||this.default_context,i=this.toBigInteger(),r=BigDecimal._toInteger(t);return new BigDecimal([i.shift(r),e])}asin(t){const n=t||this.default_context,e=this.square().negate().add(1).sqrt(),i=this,r=e.square().add(i.square()).sqrt(),o=i.atan2(e);return r.log().add(o,n)}acos(t){const n=t||this.default_context,e=this,i=this.square().negate().add(1).sqrt(),r=e.square().add(i.square()).sqrt(),o=i.atan2(e);return r.log().add(o,n)}sinh(t){if(this.isInfinite())return this;const n=t||this.default_context,e=this.exp();return e.sub(e.inv()).mul(.5,n)}asinh(t){if(this.isInfinite())return this;const n=t||this.default_context;return this.add(this.mul(this).add(1).sqrt()).log(n)}cosh(t){if(this.isInfinite())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;return this.exp().add(this.negate().exp()).mul(.5,n)}acosh(t){if(this.isInfinite())return BigDecimal.NaN;const n=t||this.default_context;return this.add(this.mul(this).sub(1).sqrt()).log(n)}tanh(t){if(this.isInfinite())return BigDecimal.create(this.signum());const n=t||this.default_context,e=this.mul(2).exp();return e.sub(1).div(e.add(1),n)}atanh(t){const n=t||this.default_context;return this.add(1).div(this.negate().add(1)).log().mul(.5,n)}sec(t){const n=t||this.default_context;return this.cos().inv(n)}asec(t){const n=t||this.default_context;return this.inv().acos(n)}sech(t){if(this.isNegativeInfinity())return BigDecimal.ZERO;const n=t||this.default_context;return this.exp().add(this.negate().exp()).inv().mul(2,n)}asech(t){const n=t||this.default_context;return this.inv().add(this.square().inv().sub(1).sqrt()).log(n)}cot(t){if(this.isZero())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;return this.tan().inv(n)}acot(t){if(this.isZero())return BigDecimal.HALF_PI;const n=t||this.default_context;return this.inv().atan(n)}coth(t){if(this.isInfinite())return BigDecimal.create(this.signum());const n=t||this.default_context,e=this.mul(2).exp();return e.add(1).div(e.sub(1),n)}acoth(t){if(this.isInfinite())return BigDecimal.ZERO;const n=t||this.default_context;return this.add(1).div(this.sub(1)).log().mul(.5,n)}csc(t){if(this.isZero())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;return this.sin().inv(n)}acsc(t){const n=t||this.default_context;return this.inv().asin(n)}csch(t){if(this.isInfinite())return BigDecimal.ZERO;if(this.isZero())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;return this.exp().sub(this.negate().exp()).inv().mul(2,n)}acsch(t){if(this.isZero())return BigDecimal.POSITIVE_INFINITY;const n=t||this.default_context;return this.inv().add(this.square().inv().add(1).sqrt()).log(n)}sinc(t){const n=t||this.default_context;if(this.isZero())return BigDecimal.ONE;const e=BigDecimal.PI.mul(this);return e.sin().div(e,n)}isInteger(t){return!!this.isFinite()&&this.sub(this.fix()).isZero(t)}isZero(t){return!!this.isFinite()&&(t?this.equals(BigDecimal.ZERO,t):this.integer.isZero())}isOne(t){return!!this.isFinite()&&0===this.compareTo(BigDecimal.ONE,t)}isPositive(){return this.integer.isPositive()}isNegative(){return this.integer.isNegative()}isNotNegative(){return this.integer.isNotNegative()}isNaN(){return this.integer.isNaN()}isPositiveInfinity(){return this.integer.isPositiveInfinity()}isNegativeInfinity(){return this.integer.isNegativeInfinity()}isInfinite(){return this.integer.isInfinite()}isFinite(){return this.integer.isFinite()}isPrime(){return this.round().toBigInteger().isPrime()}isProbablePrime(t){return this.round().toBigInteger().isProbablePrime(void 0!==t?BigDecimal._toInteger(t):void 0)}nextProbablePrime(t,n){const e=this.round().toBigInteger(),i=void 0!==t?BigDecimal._toInteger(t):void 0,r=void 0!==n?BigDecimal._toInteger(n):void 0;return BigDecimal.create(e.nextProbablePrime(i,r))}static get MINUS_ONE(){return CACHED_DATA.MINUS_ONE.get()}static get ZERO(){return CACHED_DATA.ZERO.get()}static get HALF(){return CACHED_DATA.HALF.get()}static get ONE(){return CACHED_DATA.ONE.get()}static get TWO(){return CACHED_DATA.TWO.get()}static get TEN(){return CACHED_DATA.TEN.get()}static get PI(){return CACHED_DATA.PI.get()}static get QUARTER_PI(){return CACHED_DATA.QUARTER_PI.get()}static get HALF_PI(){return CACHED_DATA.HALF_PI.get()}static get TWO_PI(){return CACHED_DATA.TWO_PI.get()}static get E(){return CACHED_DATA.E.get()}static get LN2(){return CACHED_DATA.LN2.get()}static get LN10(){return CACHED_DATA.LN10.get()}static get LOG2E(){return CACHED_DATA.LOG2E.get()}static get LOG10E(){return CACHED_DATA.LOG10E.get()}static get SQRT2(){return CACHED_DATA.SQRT2.get()}static get SQRT1_2(){return CACHED_DATA.SQRT1_2.get()}static get POSITIVE_INFINITY(){return DEFINE$2.POSITIVE_INFINITY}static get NEGATIVE_INFINITY(){return DEFINE$2.NEGATIVE_INFINITY}static get NaN(){return DEFINE$2.NaN}}BigDecimal.RoundingMode=RoundingMode,BigDecimal.MathContext=MathContext;const DEFINE$2={MINUS_ONE:function(){return new BigDecimal(-1)},ZERO:function(){return new BigDecimal(0)},HALF:function(){return new BigDecimal(.5)},ONE:function(){return new BigDecimal(1)},TWO:function(){return new BigDecimal(2)},TEN:function(){return new BigDecimal(10)},PI:function(){const t=BigDecimal.create(1),n=BigDecimal.create(2),e=BigDecimal.create(4);let i=t,r=n.sqrt().inv(),o=e.inv(),a=t,s=t;for(let t=0;t<300;t++){const t=i.add(r).div(n),u=i.mul(r).sqrt(),l=o.sub(a.mul(i.sub(t).square())),c=a.mul(n),h=t.add(u).square().div(l.mul(e)),g=h.sub(s);if(s=h,g.isZero())break;i=t,r=u,o=l,a=c}return s},QUARTER_PI:function(){return DEFINE$2.PI().div(4)},HALF_PI:function(){return DEFINE$2.PI().div(2)},TWO_PI:function(){return DEFINE$2.PI().mul(2)},E:function(){let t=BigDecimal.create(2),n=BigDecimal.create(1);for(let e=2;e<300;e++){n=n.mul(e);const i=t.add(n.inv()),r=i.sub(t);if(t=i,r.isZero())break}return t},LN2:function(){return new BigDecimal(2).log()},LN10:function(){return new BigDecimal(10).log()},LOG2E:function(){return new BigDecimal(2).log().inv()},LOG10E:function(){return new BigDecimal(10).log().inv()},SQRT2:function(){return new BigDecimal(2).sqrt()},SQRT1_2:function(){return new BigDecimal(.5).sqrt()},POSITIVE_INFINITY:new BigDecimal(Number.POSITIVE_INFINITY),NEGATIVE_INFINITY:new BigDecimal(Number.NEGATIVE_INFINITY),NaN:new BigDecimal(Number.NaN)};class BigDecimalCache{constructor(t,n){this.method_name=t,this.table=[],this.table_max=n}get(){const t=BigDecimal.getDefaultContext().toString();for(let n=0;n<this.table.length;n++)if(this.table[n].name===t){const t=this.table.splice(n,1)[0];return this.table.unshift(t),t.number}const n=DEFINE$2[this.method_name]();return this.table.length===this.table_max&&this.table.pop(),this.table.unshift({name:t,number:n}),n}}class BigDecimalConst{constructor(){this.MINUS_ONE=new BigDecimalCache("MINUS_ONE",10),this.ZERO=new BigDecimalCache("ZERO",10),this.HALF=new BigDecimalCache("HALF",10),this.ONE=new BigDecimalCache("ONE",10),this.TWO=new BigDecimalCache("TWO",10),this.TEN=new BigDecimalCache("TEN",10),this.PI=new BigDecimalCache("PI",10),this.QUARTER_PI=new BigDecimalCache("QUARTER_PI",10),this.HALF_PI=new BigDecimalCache("HALF_PI",10),this.TWO_PI=new BigDecimalCache("TWO_PI",10),this.E=new BigDecimalCache("E",10),this.LN2=new BigDecimalCache("LN2",10),this.LN10=new BigDecimalCache("LN10",10),this.LOG2E=new BigDecimalCache("LOG2E",10),this.LOG10E=new BigDecimalCache("LOG10E",10),this.SQRT2=new BigDecimalCache("SQRT2",10),this.SQRT1_2=new BigDecimalCache("SQRT1_2",10)}}const CACHED_DATA=new BigDecimalConst;class FractionTool{static to_fraction_data_from_number_string(t){let n,e=0,i=!1,r=t.replace(/\s/g,"").toLowerCase();const o=[];if(null!==(n=r.match(/^[+-]+/))&&(n=n[0],r=r.substr(n.length),-1!==n.indexOf("-")&&(i=!0,o.push("-"))),null!==(n=r.match(/^[0-9]+/))&&(n=n[0],r=r.substr(n.length),o.push(n)),0===r.length)return new Fraction([new BigInteger([o.join(""),10]),BigInteger.ONE]);let a=null;if(/[()'"[\]]/.test(r)){const t=r.match(/([^.]*)\.(\d*)[(['"](\d+)[)\]'"](.*)/);if(null===t)throw"Fraction Unsupported argument "+r;const n=t[2].length,e=t[3];r=0===n?t[1]+t[4]:t[1]+"."+t[2]+t[4];const i=new BigInteger([e,10]),o=[];for(let t=0;t<e.length;t++)o.push("9");const s=new BigInteger([o.join(""),10]);a=(a=new Fraction([i,s])).scaleByPowerOfTen(-n)}null!==(n=r.match(/^\.[0-9]+/))&&(n=n[0],r=r.substr(n.length),e+=(n=n.substr(1)).length,o.push(n)),null!==(n=r.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),e-=parseInt(n,10));let s=null;{let t=null,n=null;if(0===e&&(t=new BigInteger([o.join(""),10]),n=BigInteger.ONE),e<0){for(let t=0;t<-e;t++)o.push("0");t=new BigInteger([o.join(""),10]),n=BigInteger.ONE}else if(e>0){t=new BigInteger([o.join(""),10]);const i=["1"];for(let t=0;t<e;t++)i.push("0");n=new BigInteger([i.join(""),10])}s=new Fraction([t,n])}return a&&(s=i?s.sub(a):s.add(a)),s}static to_fraction_data_from_fraction_string(t){if(/nan|inf/i.test(t)){const n=new Fraction;return n.denominator=BigInteger.ONE,/nan/i.test(t)?n.numerator=BigInteger.NaN:/-/.test(t)?n.numerator=BigInteger.NEGATIVE_INFINITY:n.numerator=BigInteger.POSITIVE_INFINITY,n}if(-1===t.indexOf("/"))return FractionTool.to_fraction_data_from_number_string(t);{const n=t.split("/"),e=FractionTool.to_fraction_data_from_number_string(n[0]),i=FractionTool.to_fraction_data_from_number_string(n[1]);return e.div(i)}}static to_fraction_data_from_number(t){const n="boolean"!=typeof t?t:t?1:0;let e=null,i=null;if(!isFinite(n)){const t=new Fraction;return t.denominator=BigInteger.ONE,t.numerator=n===1/0?BigInteger.POSITIVE_INFINITY:n===-1/0?BigInteger.NEGATIVE_INFINITY:BigInteger.NaN,t}if(n===Math.floor(n))e=new BigInteger(n),i=BigInteger.ONE;else{let t=Math.trunc(Math.log(Math.abs(n))/Math.log(10)),r=n/Math.pow(10,t);t=-t;for(let n=0;n<14&&(r*=10,t+=1,!(Math.abs(r-Math.round(r))<=Number.EPSILON));n++);if(r=Math.round(1e14*r)/1e14,t<=0)e=new BigInteger(n),i=BigInteger.ONE;else{e=new BigInteger(r);const n=["1"];for(let e=0;e<t;e++)n.push("0");i=new BigInteger([n.join(""),10])}}return new Fraction([e,i])}static normalization(t){if(!t.denominator.equals(BigInteger.ONE)){if(t.denominator.equals(BigInteger.MINUS_ONE))return t.numerator=t.numerator.negate(),void(t.denominator=BigInteger.ONE);if(t.numerator.equals(BigInteger.ZERO))return void(t.denominator=BigInteger.ONE);const n=t.numerator.gcd(t.denominator);let e=t.numerator.div(n),i=t.denominator.div(n);i.sign()<0&&(e=e.negate(),i=i.negate()),t.numerator=e,t.denominator=i}}}class Fraction{constructor(t){if(this.numerator=null,this.denominator=null,0===arguments.length)this.numerator=BigInteger.ZERO,this.denominator=BigInteger.ONE;else{if(1!==arguments.length)throw"Fraction Unsupported argument "+t;{let n=!1;if("number"==typeof t||"boolean"==typeof t){const n=FractionTool.to_fraction_data_from_number(t);this.numerator=n.numerator,this.denominator=n.denominator}else if("string"==typeof t){const n=FractionTool.to_fraction_data_from_fraction_string(t);this.numerator=n.numerator,this.denominator=n.denominator}else if(t instanceof BigInteger)this.numerator=t,this.denominator=BigInteger.ONE;else if(t instanceof Fraction)this.numerator=t.numerator,this.denominator=t.denominator;else if(t instanceof Array&&2===t.length)this.numerator=t[0]instanceof BigInteger?t[0]:new BigInteger(t[0]),this.denominator=t[1]instanceof BigInteger?t[1]:new BigInteger(t[1]),n=!0;else if(t instanceof BigDecimal){const n=t.unscaledValue();if(n.isFinite()){const n=new Fraction(t.unscaledValue()),e=n.scaleByPowerOfTen(-t.scale());this.numerator=e.numerator,this.denominator=e.denominator}else this.numerator=n,this.denominator=BigInteger.ONE}else{if("object"!=typeof t)throw"Fraction Unsupported argument "+t;if("doubleValue"in t){const n=FractionTool.to_fraction_data_from_number(t.doubleValue);this.numerator=n.numerator,this.denominator=n.denominator}else if("numerator"in t&&"denominator"in t)this.numerator=t.numerator instanceof BigInteger?t.numerator:new BigInteger(t.numerator),this.denominator=t.denominator instanceof BigInteger?t.denominator:new BigInteger(t.denominator),n=!0;else{const n=FractionTool.to_fraction_data_from_fraction_string(t.toString());this.numerator=n.numerator,this.denominator=n.denominator}}n&&FractionTool.normalization(this)}}}static create(t){return t instanceof Fraction?t:new Fraction(t)}static valueOf(t){return Fraction.create(t)}static _toFraction(t){return t instanceof Fraction?t:new Fraction(t)}static _toFloat(t){return"number"==typeof t?t:t instanceof Fraction?t.doubleValue:new Fraction(t).doubleValue}static _toInteger(t){return"number"==typeof t?Math.trunc(t):t instanceof Fraction?t.intValue:new Fraction(t).intValue}clone(){return new Fraction(this)}abs(){return this.isFinite()?this.sign()>=0?this:this.negate():this.isNegativeInfinity()?Fraction.POSITIVE_INFINITY:this}negate(){return this.isFinite()?new Fraction([this.numerator.negate(),this.denominator]):this.isPositiveInfinity()?Fraction.NEGATIVE_INFINITY:this.isNegativeInfinity()?Fraction.POSITIVE_INFINITY:this}sign(){return this.isFinite()?this.numerator.sign():this.isNaN()?NaN:this.isPositiveInfinity()?1:-1}toString(){return this.isFinite()?this.numerator.toString()+" / "+this.denominator.toString():this.isNaN()?"NaN":this.isPositiveInfinity()?"Infinity":"-Infinity"}add(t){const n=this,e=Fraction._toFraction(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()||n.isInfinite()&&e.isInfinite()&&!n.equalsState(e)?Fraction.NaN:n.isPositiveInfinity()||e.isPositiveInfinity()?Fraction.POSITIVE_INFINITY:Fraction.NEGATIVE_INFINITY;return new Fraction(n.isInteger()&&e.isInteger()?[n.numerator.add(e.numerator),BigInteger.ONE]:[n.numerator.mul(e.denominator).add(e.numerator.mul(n.denominator)),n.denominator.mul(e.denominator)])}sub(t){const n=this,e=Fraction._toFraction(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()||n.equalsState(e)?Fraction.NaN:n.isNegativeInfinity()||e.isPositiveInfinity()?Fraction.NEGATIVE_INFINITY:Fraction.POSITIVE_INFINITY;return new Fraction(n.isInteger()&&e.isInteger()?[n.numerator.sub(e.numerator),BigInteger.ONE]:[n.numerator.mul(e.denominator).sub(e.numerator.mul(n.denominator)),n.denominator.mul(e.denominator)])}mul(t){const n=this,e=Fraction._toFraction(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()||n.isZero()||e.isZero()?Fraction.NaN:n.sign()*e.sign()>0?Fraction.POSITIVE_INFINITY:Fraction.NEGATIVE_INFINITY;return new Fraction(n.isInteger()&&e.isInteger()?[n.numerator.mul(e.numerator),BigInteger.ONE]:[n.numerator.mul(e.numerator),n.denominator.mul(e.denominator)])}div(t){const n=this,e=Fraction._toFraction(t);if(!n.isFinite()||!e.isFinite())return n.isNaN()||e.isNaN()||n.isInfinite()&&e.isInfinite()?Fraction.NaN:n.isInfinite()?n.sign()*e.sign()>=0?Fraction.POSITIVE_INFINITY:Fraction.NEGATIVE_INFINITY:Fraction.ZERO;if(e.isZero())return n.isZero()?Fraction.NaN:n.sign()>=0?Fraction.POSITIVE_INFINITY:Fraction.NEGATIVE_INFINITY;return new Fraction(n.isInteger()&&e.isInteger()?[n.numerator,e.numerator]:[n.numerator.mul(e.denominator),e.numerator.mul(n.denominator)])}inv(){return this.isFinite()?this.isZero()?Fraction.NaN:new Fraction([this.denominator,this.numerator]):this.isNaN()?Fraction.NaN:Fraction.ZERO}rem(t){const n=this,e=Fraction._toFraction(t);return n.isFinite()&&e.isFinite()&&!e.isZero()?n.sub(e.mul(n.div(e).fix())):Fraction.NaN}mod(t){const n=this,e=Fraction._toFraction(t);if(e.isZero())return n;const i=n.rem(e);return n.equalsState(e)?i:i.add(e)}pow(t){const n=this,e=Fraction._toFraction(t);if(n.isNaN()||e.isNaN())return Fraction.NaN;if(e.isZero())return Fraction.ONE;if(n.isZero())return Fraction.ZERO;if(n.isOne())return Fraction.ONE;if(n.isInfinite())return n.isPositiveInfinity()?Fraction.POSITIVE_INFINITY:e.isPositiveInfinity()?Fraction.NaN:Fraction.create(1/0*Math.pow(-1,Math.round(e.doubleValue)));if(e.isInfinite()){if(n.isNegative())return Fraction.NaN;if(n.compareTo(Fraction.ONE)<0){if(e.isPositiveInfinity())return Fraction.ZERO;if(e.isNegativeInfinity())return Fraction.POSITIVE_INFINITY}else{if(e.isPositiveInfinity())return Fraction.POSITIVE_INFINITY;if(e.isNegativeInfinity())return Fraction.ZERO}}const i=n.numerator.pow(e.intValue),r=n.denominator.pow(e.intValue);return new Fraction([i,r])}factorial(){return this.isFinite()?new Fraction([this.toBigInteger().factorial(),Fraction.ONE]):this}scaleByPowerOfTen(t){if(!this.isFinite())return this;const n=Fraction._toInteger(t);if(0===n)return this;let e;return n>0?e=new Fraction([this.numerator.scaleByPowerOfTen(n),this.denominator]):n<0&&(e=new Fraction([this.numerator,this.denominator.scaleByPowerOfTen(-n)])),e}get booleanValue(){return this.numerator.booleanValue}get intValue(){return this.isFinite()?this.isInteger()?Math.trunc(this.numerator.doubleValue):Math.trunc(this.doubleValue):this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0}get doubleValue(){if(!this.isFinite())return this.isNaN()?NaN:this.isPositiveInfinity()?1/0:-1/0;if(this.isInteger())return this.numerator.doubleValue;const t=new BigDecimal([this.numerator,MathContext.UNLIMITED]),n=new BigDecimal([this.denominator,MathContext.UNLIMITED]);return t.div(n,{context:MathContext.DECIMAL64}).doubleValue}toBigInteger(){return new BigInteger(this.fix().numerator)}toBigDecimal(t){if(!this.isFinite())return new BigDecimal(this.doubleValue);if(this.isInteger())return new BigDecimal(this.numerator);const n=new BigDecimal([this.numerator,MathContext.UNLIMITED]),e=new BigDecimal([this.denominator,MathContext.UNLIMITED]);return t?n.div(e,{context:t}):n.div(e,{context:BigDecimal.getDefaultContext()})}equals(t){const n=this,e=Fraction._toFraction(t);return n.isFinite()&&e.isFinite()?n.numerator.equals(e.numerator)&&n.denominator.equals(e.denominator):!n.isNaN()&&!e.isNaN()&&!!n.equalsState(e)}equalsState(t){const n=this,e=Fraction._toFraction(t);return n.numerator.equalsState(e.numerator)}compareTo(t){const n=this,e=Fraction._toFraction(t);return n.isFinite()&&e.isFinite()?n.sub(e).sign():n.numerator.compareTo(e.numerator)}max(t){const n=Fraction._toFraction(t);return this.isNaN()||n.isNaN()?Fraction.NaN:this.compareTo(n)>=0?this:n}min(t){const n=Fraction._toFraction(t);return this.isNaN()||n.isNaN()?Fraction.NaN:this.compareTo(n)>=0?n:this}clip(t,n){const e=Fraction._toFraction(t),i=Fraction._toFraction(n);if(this.isNaN()||e.isNaN()||i.isNaN())return Fraction.NaN;const r=e.compareTo(i);if(1===r)throw"clip(min, max) error. (min > max)->("+e+" > "+i+")";return 0===r?e:1===this.compareTo(i)?i:-1===this.compareTo(e)?e:this}floor(){if(this.isInteger()||!this.isFinite())return this;const t=this.fix();return this.sign()>0?t:new Fraction([t.numerator.sub(BigInteger.ONE),Fraction.ONE])}ceil(){if(this.isInteger()||!this.isFinite())return this;const t=this.fix();return this.sign()>0?new Fraction([t.numerator.add(BigInteger.ONE),Fraction.ONE]):t}round(){if(this.isInteger()||!this.isFinite())return this;const t=this.floor();return this.sub(t).compareTo(Fraction.HALF)>=0?new Fraction([t.numerator.add(BigInteger.ONE),Fraction.ONE]):t}fix(){return this.isInteger()||!this.isFinite()?this:new Fraction([this.numerator.div(this.denominator),Fraction.ONE])}fract(){return this.isFinite()?this.isInteger()?Fraction.ZERO:this.sub(this.floor()):Fraction.NaN}isInteger(){return!!this.isFinite()&&this.denominator.equals(BigInteger.ONE)}isZero(){return!!this.isFinite()&&this.numerator.isZero()}isOne(){return!!this.isFinite()&&(this.numerator.equals(BigInteger.ONE)&&this.denominator.equals(BigInteger.ONE))}isPositive(){return this.numerator.isPositive()}isNegative(){return this.numerator.isNegative()}isNotNegative(){return this.numerator.isNotNegative()}isNaN(){return this.numerator.isNaN()}isPositiveInfinity(){return this.numerator.isPositiveInfinity()}isNegativeInfinity(){return this.numerator.isNegativeInfinity()}isInfinite(){return this.numerator.isInfinite()}isFinite(){return this.numerator.isFinite()}isPrime(){return this.round().toBigInteger().isPrime()}isProbablePrime(t){return this.round().toBigInteger().isProbablePrime(void 0!==t?BigDecimal._toInteger(t):void 0)}nextProbablePrime(t,n){const e=this.round().toBigInteger(),i=void 0!==t?Fraction._toInteger(t):void 0,r=void 0!==n?Fraction._toInteger(n):void 0;return Fraction.create(e.nextProbablePrime(i,r))}static get MINUS_ONE(){return DEFINE$3.MINUS_ONE}static get ZERO(){return DEFINE$3.ZERO}static get HALF(){return DEFINE$3.HALF}static get ONE(){return DEFINE$3.ONE}static get TWO(){return DEFINE$3.TWO}static get TEN(){return DEFINE$3.TEN}static get POSITIVE_INFINITY(){return DEFINE$3.POSITIVE_INFINITY}static get NEGATIVE_INFINITY(){return DEFINE$3.NEGATIVE_INFINITY}static get NaN(){return DEFINE$3.NaN}}const DEFINE$3={MINUS_ONE:new Fraction([BigInteger.MINUS_ONE,BigInteger.ONE]),ZERO:new Fraction([BigInteger.ZERO,BigInteger.ONE]),ONE:new Fraction([BigInteger.ONE,BigInteger.ONE]),HALF:new Fraction([BigInteger.ONE,BigInteger.TWO]),TWO:new Fraction([BigInteger.TWO,BigInteger.ONE]),TEN:new Fraction([BigInteger.TEN,BigInteger.ONE]),POSITIVE_INFINITY:new Fraction(Number.POSITIVE_INFINITY),NEGATIVE_INFINITY:new Fraction(Number.NEGATIVE_INFINITY),NaN:new Fraction(Number.NaN)};class LinearAlgebraTool{static tridiagonalize(t){const n=Matrix._toMatrix(t).getNumberMatrixArray(),e=function(t,n,e,i){let r=0;const o=e||0,a=i||t.length;for(let e=o;e<a;e++)r+=t[e]*n[e];return r},i=n.length,r=[],o=[];for(let t=0;t<i-2;t++){const a=n[t];r[t]=a[t];{const n=function(t,n,i){const r=n||0,o=i||t.length;let a=Math.sqrt(e(t,t,r,o));const s=[];if(Math.abs(a)>=1e-10){t[r]<0&&(a=-a);let n;for(let e=r,i=0;e<o;e++,i++)e===r?(s[i]=t[e]+a,n=1/Math.sqrt(s[i]*a),s[i]=s[i]*n):s[i]=t[e]*n}return{y1:-a,v:s}}(a,t+1,i);o[t]=n.y1;for(let e=0;e<n.v.length;e++)a[t+1+e]=n.v[e]}if(!(Math.abs(o[t])<1e-10)){for(let e=t+1;e<i;e++){let o=0;for(let i=t+1;i<e;i++)o+=n[i][e]*a[i];for(let t=e;t<i;t++)o+=n[e][t]*a[t];r[e]=o}const o=e(a,r,t+1,i)/2;for(let e=i-1;e>t;e--){const t=a[e],s=r[e]-o*t;r[e]=s;for(let o=e;o<i;o++){const i=t*r[o]+s*a[o];n[e][o]=n[e][o]-i}}}}i>=2&&(r[i-2]=n[i-2][i-2],o[i-2]=n[i-2][i-1]),i>=1&&(r[i-1]=n[i-1][i-1]);for(let t=i-1;t>=0;t--){const r=n[t];if(t<i-2)for(let o=t+1;o<i;o++){const a=n[o],s=e(r,a,t+1,i);for(let n=t+1;n<i;n++)a[n]-=s*r[n]}for(let t=0;t<i;t++)r[t]=0;r[t]=1}const a=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?new Complex(r[t]):1===Math.abs(t-n)?new Complex(o[Math.trunc(.5*(t+n))]):Complex.ZERO},i,i);return{P:new Matrix(n).T(),H:a}}static eig(t){const n=Matrix._toMatrix(t);let e=!1;const i=LinearAlgebraTool.tridiagonalize(n),r=i.P.getNumberMatrixArray(),o=i.H.getNumberMatrixArray(),a=n.row_length,s=[],u=[];for(let t=0;t<a;t++)s[t]=o[t][t],u[t]=0===t?0:o[t][t-1];for(let t=a-1;t>0;t--){let n=t;for(n=t;n>=1&&!(Math.abs(u[n])<=1e-10*(Math.abs(s[n-1])+Math.abs(s[n])));n--);if(n!=t){let i=0;for(;;){if(++i>100){e=!0;break}let o=(s[t-1]-s[t])/2,l=u[t]*u[t],c=Math.sqrt(o*o+l);o<0&&(c=-c);let h=s[n]-s[t]+l/(o+c),g=u[n+1];for(let e=n;e<t;e++){let i,c;Math.abs(h)>=Math.abs(g)?c=(l=-g/h)*(i=1/Math.sqrt(l*l+1)):i=(l=-h/g)*(c=1/Math.sqrt(l*l+1)),l=((o=s[e]-s[e+1])*c+2*i*u[e+1])*c,s[e]-=l,s[e+1]+=l,e>n&&(u[e]=i*u[e]-c*g),u[e+1]+=c*(i*o-2*c*u[e+1]);for(let t=0;t<a;t++)h=r[t][e],g=r[t][e+1],r[t][e]=i*h-c*g,r[t][e+1]=c*h+i*g;e<t-1&&(h=u[e+1],g=-c*u[e+2],u[e+2]*=i)}if(Math.abs(u[t])<=1e-10*(Math.abs(s[t-1])+Math.abs(s[t])))break}if(e)break}}return function(t,n){const e=n.length,i=[];for(let t=0;t<e;t++)i[t]={sigma:n[t],index:t};const r=function(t,n){return t.sigma===n.sigma?0:t.sigma<n.sigma?1:-1};i.sort(r);const o=Matrix.zeros(e),a=Matrix.zeros(e);for(let t=0;t<e;t++)a.matrix_array[t][t]=new Complex(i[t].sigma),o.matrix_array[t][i[t].index]=Complex.ONE;return{V:t.mul(o),D:a}}(new Matrix(r),s)}static doGramSchmidtOrthonormalization(t){const n=Matrix._toMatrix(t),e=n.column_length,i=n.matrix_array,r=Matrix.zeros(e),o=Matrix.zeros(e),a=r.matrix_array,s=o.matrix_array,u=[],l=new Array(e);for(let t=0;t<e;t++){for(let n=0;n<e;n++)l[n]=i[n][t];if(t>0){for(let n=0;n<t;n++)for(let r=0;r<e;r++)s[n][t]=s[n][t].add(i[r][t].dot(a[r][n]));for(let n=0;n<t;n++)for(let i=0;i<e;i++)l[i]=l[i].sub(s[n][t].mul(a[i][n]))}for(let n=0;n<e;n++)s[t][t]=s[t][t].add(l[n].square());if(s[t][t]=s[t][t].sqrt(),s[t][t].isZero(1e-10)){u.push(t);for(let n=0;n<e;n++)a[n][t]=Complex.ZERO}else for(let n=0;n<e;n++)a[n][t]=l[n].div(s[t][t])}return{Q:r,R:o,non_orthogonalized:u}}static createOrthogonalVector(t,n){const e=new Matrix(t),i=e.column_length,r=e.matrix_array,o=n||1e-10,a=LinearAlgebraTool.getLinearDependenceVector(e,o);for(let t=a.length-1;t>=0;t--)r.splice(a[t],1),e.row_length--;const s=i-r.length;if(s<=0)return null;const u=new Random(0);let l=null;for(let t=0;t<100;t++){const t=e.T(),n=Matrix.createMatrixDoEachCalculation(function(){return new Complex(u.nextGaussian())},t.row_length,s);if(t._concatRight(n),0===(l=LinearAlgebraTool.doGramSchmidtOrthonormalization(t)).non_orthogonalized.length)break}if(0!==l.non_orthogonalized.length)return console.log("miss"),null;const c=new Array(s),h=l.Q.matrix_array;for(let t=0;t<s;t++){c[t]=new Array(i);for(let n=0;n<i;n++)c[t][n]=h[n][i-s+t]}return new Matrix(c)}static getMaxRowNumber(t,n,e,i){const r=Matrix._toMatrix(t);let o=0,a=0,s=e||0;const u=i||r.row_length;for(;s<u;s++){const t=r.matrix_array[s][n].norm;t>a&&(a=t,o=s)}return{index:o,max:a}}static getLinearDependenceVector(t,n){const e=new Matrix(t),i=e.matrix_array,r=n?Matrix._toDouble(n):1e-10,o=new Array(e.row_length);for(let t=0;t<e.row_length;t++)o[t]=t;for(let t=0;t<e.column_length;t++){let n=0;{let a=0,s=0;for(const e in o){const r=o[e],u=i[r][t].norm;u>a&&(a=u,s=parseInt(e,10),n=r)}if(a<=r)continue;if(o.splice(s,1),t===e.column_length-1)break}for(const r in o){const a=o[r],s=i[a][t].div(i[n][t]);for(let r=t;r<e.column_length;r++)i[a][r]=i[a][r].sub(i[n][r].mul(s))}}return o}}class LinearAlgebra{static inner(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toMatrix(n),o=i.matrix_array,a=r.matrix_array,s=e?Matrix._toInteger(e):1;if(i.isScalar()&&r.isScalar())return new Matrix(i.scalar.dot(r.scalar));if(i.isVector()&&r.isVector()){let t=Complex.ZERO;for(let n=0;n<i.length;n++)t=t.add(i.getComplex(n).dot(r.getComplex(n)));return new Matrix(t)}if(i.row_length!==r.row_length||i.column_length!==r.column_length)throw"Matrix size does not match";if(1===s){const t=new Array(1);t[0]=new Array(i.column_length);for(let n=0;n<i.column_length;n++){let e=Complex.ZERO;for(let t=0;t<i.row_length;t++)e=e.add(o[t][n].dot(a[t][n]));t[0][n]=e}return new Matrix(t)}if(2===s){const t=new Array(i.row_length);for(let n=0;n<i.row_length;n++){let e=Complex.ZERO;for(let t=0;t<i.column_length;t++)e=e.add(o[n][t].dot(a[n][t]));t[n]=[e]}return new Matrix(t)}throw"dim"}static norm(t,n){const e=Matrix._toMatrix(t),i=void 0===n?2:Matrix._toDouble(n);if(1===i){const t=e.matrix_array;if(e.isRow()){let n=0;for(let i=0;i<e.column_length;i++)n+=t[0][i].norm;return n}if(e.isColumn()){let n=0;for(let i=0;i<e.row_length;i++)n+=t[i][0].norm;return n}let n=0;for(let i=0;i<e.column_length;i++){let r=0;for(let n=0;n<e.row_length;n++)r+=t[n][i].norm;n<r&&(n=r)}return n}if(2===i){const t=e.matrix_array;if(e.isRow()){let n=0;for(let i=0;i<e.column_length;i++)n+=t[0][i].square().real;return Math.sqrt(n)}if(e.isColumn()){let n=0;for(let i=0;i<e.row_length;i++)n+=t[i][0].square().real;return Math.sqrt(n)}return e.svd().S.diag().max().scalar.real}if(i===Number.POSITIVE_INFINITY||i===Number.NEGATIVE_INFINITY){const t=e.matrix_array;let n=i===Number.POSITIVE_INFINITY?0:Number.POSITIVE_INFINITY;const r=i===Number.POSITIVE_INFINITY?Math.max:Math.min;if(e.isRow()){for(let i=0;i<e.column_length;i++)n=r(n,t[0][i].norm);return n}if(e.isColumn()){for(let i=0;i<e.row_length;i++)n=r(n,t[i][0].norm);return n}n=0;for(let i=0;i<e.row_length;i++){let r=0;for(let n=0;n<e.column_length;n++)r+=t[i][n].norm;n=Math.max(n,r)}return n}if(e.isVector()){let t=0;for(let n=0;n<e.length;n++)t+=Math.pow(e.getComplex(n).norm,i);return Math.pow(t,1/i)}throw"norm"}static cond(t,n){const e=Matrix._toMatrix(t);if(2===(void 0===n?2:Matrix._toInteger(n))){if(e.isZeros())return Number.POSITIVE_INFINITY;if(e.isVector())return 1;if(e.isUnitary())return 1;const t=e.svd().S.diag();return t.max().scalar.real/t.min().scalar.real}return e.norm(n)*e.pinv().norm(n)}static rcond(t){return 1/LinearAlgebra.cond(Matrix._toMatrix(t),1)}static rank(t,n){const e=Matrix._toMatrix(t),i=void 0!==n?Matrix._toDouble(n):void 0;return e.row_length<=e.column_length?Math.min(e.row_length,e.column_length)-LinearAlgebraTool.getLinearDependenceVector(e,i).length:e.row_length-LinearAlgebraTool.getLinearDependenceVector(e,i).length}static trace(t){const n=Matrix._toMatrix(t),e=Math.min(n.row_length,n.column_length);let i=Complex.ZERO;for(let t=0;t<e;t++)i=i.add(n.matrix_array[t][t]);return i}static det(t){const n=Matrix._toMatrix(t);if(!n.isSquare())throw"not square";const e=n.length;if(e<5){const t=function(n){if(2===n.length)return n[0][0].mul(n[1][1]).sub(n[0][1].mul(n[1][0]));let e=Complex.ZERO;for(let i=0;i<n.length;i++){const r=[],o=n[i][0];for(let t=0,e=0;t<n.length;t++)if(i!==t){r[e]=[];for(let i=1,o=0;i<n.length;i++,o++)r[e][o]=n[t][i];e++}e=i%2==0?e.add(o.mul(t(r))):e.sub(o.mul(t(r)))}return e};return new Matrix(t(n.matrix_array))}{const t=LinearAlgebra.lup(n),i=(e-t.P.diag().sum().scalar.real)/2;let r=t.U.diag().prod();return i%2==1&&(r=r.negate()),new Matrix(r)}}static lup(t){const n=new Matrix(t),e=Matrix.zeros(n.row_length),i=n,r=Matrix.eye(n.row_length),o=e.matrix_array,a=i.matrix_array;for(let t=0;t<n.column_length;t++){let s;{const n=LinearAlgebraTool.getMaxRowNumber(i,t,t);if(s=n.index,0===n.max)continue;t!==s&&(e._exchangeRow(t,s),i._exchangeRow(t,s),r._exchangeRow(t,s))}for(let e=t+1;e<n.row_length;e++){const i=a[e][t].div(a[t][t]);o[e][t]=i;for(let r=t;r<n.column_length;r++)a[e][r]=a[e][r].sub(a[t][r].mul(i))}}return e._resize(n.row_length,Math.min(n.row_length,n.column_length)),i._resize(Math.min(n.row_length,n.column_length),n.column_length),e._each(function(t,n,e){return n===e?Complex.ONE:t}),{L:e,U:i,P:r}}static lu(t){const n=LinearAlgebra.lup(t);return{L:n.P.T().mul(n.L),U:n.U}}static linsolve(t,n){const e=Matrix._toMatrix(t),i=Matrix._toMatrix(n);if(!e.isSquare())throw"Matrix size does not match";const r=i;if(i.row_length!==e.row_length||i.column_length>1)throw"Matrix size does not match";const o=new Matrix(e);o._concatRight(r);const a=o.matrix_array,s=o.column_length,u=e.column_length;for(let t=0;t<u-1;t++){{const n=LinearAlgebraTool.getMaxRowNumber(o,t,t).index;o._exchangeRow(t,n)}{const n=a[t][t].inv();for(let e=t,i=t;i<s;i++)a[e][i]=a[e][i].mul(n)}for(let n=t+1;n<u;n++){const e=a[n][t];for(let i=t;i<s;i++)a[n][i]=a[n][i].sub(a[t][i].mul(e))}}const l=new Array(u);l[u-1]=a[u-1][u].div(a[u-1][u-1]);for(let t=u-2;t>=0;t--){l[t]=a[t][s-1];for(let n=t+1;n<u;n++)l[t]=l[t].sub(a[t][n].mul(l[n]));l[t]=l[t].div(a[t][t])}const c=new Array(e.row_length);for(let t=0;t<e.row_length;t++)c[t]=[l[t]];return new Matrix(c)}static qr(t){const n=new Matrix(t),e=n.row_length,i=n.row_length,r=n.row_length,o=n.column_length,a=Math.max(n.row_length,n.column_length);n._resize(a,a);const s=LinearAlgebraTool.doGramSchmidtOrthonormalization(n);let u=s.Q;const l=s.R,c=s.non_orthogonalized;if(c.length===n.row_length)u=Matrix.eye(n.row_length);else if(0!==c.length){const t={};for(let n=0;n<c.length;n++)t[c[n]]=1;const n=[];for(let e=0;e<a;e++)if(!t[e]){const t=[];for(let n=0;n<a;n++)t[n]=u.matrix_array[n][e];n.push(t)}const e=LinearAlgebraTool.createOrthogonalVector(n);for(let t=0;t<c.length;t++){const n=c[t];for(let i=0;i<a;i++)u.matrix_array[i][n]=e.matrix_array[t][i]}}return u._resize(e,i),l._resize(r,o),{Q:u,R:l}}static tridiagonalize(t){const n=new Matrix(t);if(!n.isSquare())throw"not square matrix";if(!n.isSymmetric())throw"not Symmetric";if(n.isComplex())throw"not Real Matrix";return LinearAlgebraTool.tridiagonalize(n)}static eig(t){const n=new Matrix(t);if(!n.isSquare())throw"not square matrix";if(!n.isSymmetric())throw"not Symmetric";if(n.isComplex())throw"not Real Matrix";return LinearAlgebraTool.eig(n)}static svd(t){const n=new Matrix(t);if(n.isComplex())throw"Unimplemented";const e=LinearAlgebra.rank(n),i=LinearAlgebra.eig(n.T().mul(n)),r=Matrix.zeros(n.row_length,n.column_length);r._each(function(t,n,r){if(n===r&&n<e)return i.D.getComplex(n,n).sqrt()});const o=Math.min(n.row_length,n.column_length),a=Matrix.createMatrixDoEachCalculation(function(t,n){if(t===n){const n=r.matrix_array[t][t];return n.isZero()?Complex.ZERO:n.inv()}return Complex.ZERO},o),s=i.V.resize(i.V.row_length,o),u=n.mul(s).mul(a);return{U:LinearAlgebra.qr(u).Q,S:r,V:i.V}}static inv(t){const n=new Matrix(t);if(n.isScalar())return new Matrix(Complex.ONE.div(n.scalar));if(!n.isSquare())throw"not square";if(n.isDiagonal()){const t=n.T(),e=Math.min(t.row_length,t.column_length);for(let n=0;n<e;n++)t.matrix_array[n][n]=t.matrix_array[n][n].inv();return t}const e=n.column_length,i=new Matrix(n);i._concatRight(Matrix.eye(e));const r=i.matrix_array,o=i.column_length;for(let t=0;t<e;t++){{const n=LinearAlgebraTool.getMaxRowNumber(i,t,t).index;i._exchangeRow(t,n)}{const n=r[t][t].inv();for(let e=t,i=t;i<o;i++)r[e][i]=r[e][i].mul(n)}for(let n=0;n<e;n++)if(n!==t){const e=r[n][t];for(let i=t;i<o;i++)r[n][i]=r[n][i].sub(r[t][i].mul(e))}}const a=new Array(e);for(let t=0;t<e;t++){a[t]=new Array(e);for(let n=0;n<e;n++)a[t][n]=r[t][e+n]}return new Matrix(a)}static pinv(t){const n=new Matrix(t),e=LinearAlgebra.svd(n),i=e.U,r=e.S,o=e.V,a=Matrix.createMatrixDoEachCalculation(function(t,n){if(t===n){const n=r.matrix_array[t][t];return n.isZero()?Complex.ZERO:n.inv()}return Complex.ZERO},n.column_length,n.row_length);return o.mul(a).mul(i.T())}}class Statistics{static max(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=t[0];for(let e=1;e<t.length;e++)n.compareTo(t[e])<0&&(n=t[e]);return[n]};return e.eachVector(r,i)}static min(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=t[0];for(let e=1;e<t.length;e++)n.compareTo(t[e])>0&&(n=t[e]);return[n]};return e.eachVector(r,i)}static sum(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n]};return e.eachVector(r,i)}static mean(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n.div(t.length)]};return e.eachVector(r,i)}static prod(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=Complex.ONE;for(let e=0;e<t.length;e++)n=n.mul(t[e]);return[n]};return e.eachVector(r,i)}static geomean(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){let n=Complex.ONE;for(let e=0;e<t.length;e++)n=n.mul(t[e]);return[n.pow(Complex.create(t.length).inv())]};return e.eachVector(r,i)}static median(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t,n){return t.compareTo(n)},o=function(t){t.sort(r);let n;if(t.length%2==1)n=t[Math.floor(t.length/2)];else{const e=t[Math.floor(t.length/2)-1],i=t[Math.floor(t.length/2)];n=e.add(i).div(Complex.TWO)}return[n]};return e.eachVector(o,i)}static mode(t,n){const e=Matrix._toMatrix(t),i=n&&n.dimension?n.dimension:"auto",r=function(t,n){return t.compareTo(n)},o=function(t){t.sort(r);const n={};for(let e=0;e<t.length;e++){const i=t[e].real+" "+t[e].imag;n[i]?n[i].value++:n[i]={complex:t[e],value:1}}let e=Complex.ZERO,i=Number.NEGATIVE_INFINITY;for(const t in n){const r=n[t];r.value>i&&(i=r.value,e=r.complex)}return[e]};return e.eachVector(o,i)}static moment(t,n,e){const i=Matrix._toMatrix(t),r=Statistics.mean(i),o=e&&"number"==typeof e.correction?Matrix._toDouble(e.correction):1,a=e&&e.dimension?e.dimension:"auto",s=Matrix._toComplex(n);let u=0;const l=function(t){let n;n=r.isScalar()?r.scalar:r.getComplex(u++);let e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].sub(n);e=e.add(r.pow(s))}return 1===t.length?[e.div(t.length)]:[e.div(t.length-1+o)]};return i.eachVector(l,a)}static var(t,n){const e=Matrix._toMatrix(t),i=Statistics.mean(e),r=n&&"number"==typeof n.correction?Matrix._toDouble(n.correction):0,o=n&&n.dimension?n.dimension:"auto";let a=0;const s=function(t){if(1===t.length)return[Complex.ZERO];const n=i.getComplex(a++);let e=0;for(let i=0;i<t.length;i++){const r=t[i].sub(n).norm;e+=r*r}return[Complex.create(e/(t.length-1+r))]};return e.eachVector(s,o)}static std(t,n){const e=Matrix._toMatrix(t),i=n&&"number"==typeof n.correction?Matrix._toDouble(n.correction):0,r=n&&n.dimension?n.dimension:"auto",o=Statistics.var(e,{correction:i,dimension:r});return o._each(function(t){return t.sqrt()}),o}static mad(t,n,e){const i=Matrix._toMatrix(t),r=n?"string"==typeof n?n:Matrix._toInteger(n):"mean",o=e&&e.dimension?e.dimension:"auto";if("mean"===r||0===r)return Statistics.mean(i.sub(Statistics.mean(i,{dimension:o})).abs(),{dimension:o});if("median"===r||1===r)return Statistics.median(i.sub(Statistics.median(i,{dimension:o})).abs(),{dimension:o});throw"mad unsupported argument "+r}static skewness(t,n){const e=Matrix._toMatrix(t),i=n&&"number"==typeof n.correction?Matrix._toDouble(n.correction):1,r=n&&n.dimension?n.dimension:"auto",o=Statistics.moment(e,3,{correction:i,dimension:r}),a=Statistics.std(e,{correction:i,dimension:r});return 1===i?o.dotdiv(a.dotpow(3)):o.dotdiv(a.dotpow(3)).dotmul(2)}static cov(t,n,e){const i=Matrix._toMatrix(t);let r=0,o=null;if(void 0!==n&&(void 0!==e?(r=e&&"number"==typeof e.correction?Matrix._toDouble(e.correction):0,o=Matrix._toMatrix(n)):"object"==typeof n&&"correction"in n?r=Matrix._toDouble(n.correction):o=Matrix._toMatrix(n)),null===o){if(i.isVector())return Statistics.var(i,{correction:r});const t=1===i.row_length?1:r,n=i.matrix_array,e=Statistics.mean(i).matrix_array[0],o=new Array(i.column_length);for(let r=0;r<i.column_length;r++){const a=e[r];o[r]=new Array(i.column_length);for(let s=r;s<i.column_length;s++){const u=e[s];let l=Complex.ZERO;for(let t=0;t<i.row_length;t++)l=l.add(n[t][r].sub(a).dot(n[t][s].sub(u)));o[r][s]=l.div(i.row_length-1+t)}}for(let t=1;t<o[0].length;t++)for(let n=0;n<t;n++)o[t][n]=o[n][t];return new Matrix(o)}{if(!i.isVector()&&!o.isVector())throw"vector not specified";if(i.length!==o.length)throw"X.length !== Y.length";const t=Statistics.mean(i).scalar,n=Statistics.mean(o).scalar,e=i.length,a=1===e?1:r;let s=Complex.ZERO;for(let r=0;r<e;r++)s=s.add(i.getComplex(r).sub(t).dot(o.getComplex(r).sub(n)));return new Matrix(s.div(e-1+a))}}static standardization(t,n){const e=Matrix._toMatrix(t),i=e.sub(Statistics.mean(e,n));return i.dotdiv(Statistics.std(i,n))}static corrcoef(t,n,e){const i=Matrix._toMatrix(t);let r=null;if(void 0!==n&&(void 0!==e?r=Matrix._toMatrix(n):"object"==typeof n&&"correction"in n||(r=Matrix._toMatrix(n))),null===r)return Statistics.cov(Statistics.standardization(i,e),e);{if(!i.isVector()&&!r.isVector())throw"vector not specified";if(i.length!==r.length)throw"X.length["+i.length+"] !== Y.length["+r.length+"]";const t=Statistics.cov(i,r,e),n=i.std(e),o=r.std(e);return t.div(n.mul(o))}}static sort(t,n,e){const i=Matrix._toMatrix(t),r=e&&e.dimension?e.dimension:"auto";let o;o="ascend"===(n||"ascend")?function(t,n){return t.compareTo(n)}:function(t,n){return n.compareTo(t)};const a=function(t){return t.sort(o),t};return i.eachVector(a,r)}}class ProbabilityTool{static gammaln(t){const n=Math.log(2*Math.PI),e=[-15238221.539407417,691472.268851313,-36108.77125372499,8553103/6/650,-156.84828462600203,854513/138/462,-174611/330/380,43867/798/306,-3617/510/240,7/6/182,-691/2730/132,5/66/90,-1/30/56,1/42/30,-1/30/12,1/6/2];let i=1,r=t;for(;r<e.length;)i*=r,r++;const o=1/(r*r);let a=e[0];for(let t=1;t<e.length;t++)a*=o,a+=e[t];return a/=r,a+=.5*n,a+=-Math.log(i)-r+(r-.5)*Math.log(r)}static q_gamma(t,n,e){let i,r,o,a,s,u=1,l=1+t-n;if(t<1+n)return 1-ProbabilityTool.p_gamma(t,n,e);for(r=(o=Math.exp(n*Math.log(t)-t-e))/l,i=2;i<1e3;i++)if(a=((i-1-n)*(l-u)+(i+t)*l)/i,u=l,l=a,o*=(i-1-n)/i,a=o/(u*l),s=r,(r+=a)==s)return r;return Number.NaN}static p_gamma(t,n,e){let i,r,o,a;if(t>=1+n)return 1-ProbabilityTool.q_gamma(t,n,e);if(0===t)return 0;for(r=o=Math.exp(n*Math.log(t)-t-e)/n,i=1;i<1e3;i++)if(o*=t/(n+i),a=r,(r+=o)==a)return r;return Number.NaN}static gamma(t){return t<0?Math.PI/(Math.sin(Math.PI*t)*Math.exp(ProbabilityTool.gammaln(1-t))):Math.exp(ProbabilityTool.gammaln(t))}static gammainc(t,n,e){if("lower"===e)return ProbabilityTool.p_gamma(t,n,ProbabilityTool.gammaln(n));if("upper"===e)return ProbabilityTool.q_gamma(t,n,ProbabilityTool.gammaln(n));if(2===arguments.length)return ProbabilityTool.gammainc(t,n,"lower");throw"gammainc unsupported argument ["+e+"]"}static gampdf(t,n,e){let i=1/(ProbabilityTool.gamma(n)*Math.pow(e,n));return i*=Math.pow(t,n-1),i*=Math.exp(-t/e)}static gamcdf(t,n,e){return ProbabilityTool.gammainc(t/e,n)}static gaminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return 0;if(1==t)return Number.POSITIVE_INFINITY;let i,r,o=n*e;for(let a=0;a<100&&(r=o-(ProbabilityTool.gamcdf(o,n,e)-t)/ProbabilityTool.gampdf(o,n,e),i=r-o,!(Math.abs(i)<=1e-12));a++)(o=r)<0&&(o=1e-12);return o}static beta(t,n){return Math.exp(ProbabilityTool.gammaln(t)+ProbabilityTool.gammaln(n)-ProbabilityTool.gammaln(t+n))}static p_beta(t,n,e){let i,r,o,a;if(n<=0)return Number.POSITIVE_INFINITY;if(e<=0)return t<1?0:1===t?1:Number.POSITIVE_INFINITY;if(t>(n+1)/(n+e+2))return 1-ProbabilityTool.p_beta(1-t,e,n);if(t<=0)return 0;for(o=n*Math.log(t),o+=e*Math.log(1-t),o+=ProbabilityTool.gammaln(n+e),o-=ProbabilityTool.gammaln(n)+ProbabilityTool.gammaln(e),o=Math.exp(o),r=o/=n,i=1;i<1e3;i++)if(o*=n+e+i-1,o*=t,o/=n+i,a=r,(r+=o)===a)return r;return Number.NaN}static q_beta(t,n,e){return 1-ProbabilityTool.p_beta(t,n,e)}static betainc(t,n,e,i){if("lower"===i)return ProbabilityTool.p_beta(t,n,e);if("upper"===i)return ProbabilityTool.q_beta(t,n,e);if(3===arguments.length)return ProbabilityTool.betainc(t,n,e,"lower");throw"betainc unsupported argument ["+i+"]"}static isInteger(t){return t-Math.trunc(t)!=0}static betapdf(t,n,e){return t<0&&ProbabilityTool.isInteger(e-1)||1-t<0&&ProbabilityTool.isInteger(e-1)?0:Math.pow(t,n-1)*Math.pow(1-t,e-1)/ProbabilityTool.beta(n,e)}static betacdf(t,n,e){return ProbabilityTool.betainc(t,n,e)}static betainv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t&&n>0&&e>0)return 0;if(1==t&&n>0&&e>0)return 1;let i;i=0==e?1-1e-14:0==n?1e-14:n/(n+e);let r,o;for(let a=0;a<100&&(o=i-(ProbabilityTool.betacdf(i,n,e)-t)/ProbabilityTool.betapdf(i,n,e),r=o-i,!(Math.abs(r)<=1e-14));a++)(i=o)>1?i=1-1e-14:i<0&&(i=1e-14);return i}static factorial(t){const n=ProbabilityTool.gamma(t+1);return Math.trunc(t)===t?Math.round(n):n}static nchoosek(t,n){return Math.round(ProbabilityTool.factorial(t)/(ProbabilityTool.factorial(t-n)*ProbabilityTool.factorial(n)))}static erf(t){return ProbabilityTool.p_gamma(t*t,.5,.5*Math.log(Math.PI))*(t>=0?1:-1)}static erfc(t){return 1-ProbabilityTool.erf(t)}static erfinv(t){return ProbabilityTool.erfcinv(1-t)}static erfcinv(t){return-ProbabilityTool.norminv(.5*t)/Math.sqrt(2)}static normpdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o=1/Math.sqrt(2*Math.PI*r*r);return o*=Math.exp(-(t-i)*(t-i)/(2*r*r))}static normcdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;return(1+ProbabilityTool.erf((t-i)/(r*Math.sqrt(2))))/2}static norminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o,a,s=i;for(let n=0;n<200&&(a=s-(ProbabilityTool.normcdf(s,i,r)-t)/ProbabilityTool.normpdf(s,i,r),o=a-s,!(Math.abs(o)<=1e-12));n++)s=a;return s}static tpdf(t,n){let e=1/(Math.sqrt(n)*ProbabilityTool.beta(.5,.5*n));return e*=Math.pow(1+t*t/n,.5*-(n+1))}static tcdf(t,n){const e=t*t/(n+t*t);return.5*(1+ProbabilityTool.betainc(e,.5,.5*n)*(t<0?-1:1))}static tinv(t,n){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;if(t<.5){const e=ProbabilityTool.betainv(2*t,.5*n,.5);return-Math.sqrt(n/e-n)}{const e=ProbabilityTool.betainv(2*(1-t),.5*n,.5);return Math.sqrt(n/e-n)}}static tdist(t,n,e){return(1-ProbabilityTool.tcdf(Math.abs(t),n))*e}static tinv2(t,n){return-ProbabilityTool.tinv(.5*t,n)}static chi2pdf(t,n){if(t<0)return 0;if(0===t)return.5;let e=Math.pow(t,n/2-1)*Math.exp(-t/2);return e/=Math.pow(2,n/2)*ProbabilityTool.gamma(n/2)}static chi2cdf(t,n){return ProbabilityTool.gammainc(t/2,n/2)}static chi2inv(t,n){return ProbabilityTool.gaminv(t,n/2,2)}static fpdf(t,n,e){if(n<0||e<0)return Number.NaN;if(t<=0)return 0;let i=1;return i*=Math.pow(n*t/(n*t+e),n/2),i*=Math.pow(1-n*t/(n*t+e),e/2),i/=t*ProbabilityTool.beta(n/2,e/2)}static fcdf(t,n,e){return ProbabilityTool.betacdf(n*t/(n*t+e),n/2,e/2)}static finv(t,n,e){return(1/ProbabilityTool.betainv(1-t,e/2,n/2)-1)*e/n}}const isStr=function(t){return t&&("string"==typeof t||t instanceof String)};class ProbabilityComplex{static gammaln(t){return new Complex(ProbabilityTool.gammaln(Complex._toDouble(t)))}static gamma(t){return new Complex(ProbabilityTool.gamma(Complex._toDouble(t)))}static gammainc(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=isStr(e)?e:"lower";return new Complex(ProbabilityTool.gammainc(i,r,o))}static gampdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.gampdf(i,r,o))}static gamcdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.gamcdf(i,r,o))}static gaminv(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.gaminv(i,r,o))}static beta(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.beta(e,i))}static betainc(t,n,e,i){const r=Complex._toDouble(t),o=Complex._toDouble(n),a=Complex._toDouble(e),s=isStr(i)?i:"lower";return new Complex(ProbabilityTool.betainc(r,o,a,s))}static betapdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.betapdf(i,r,o))}static betacdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.betacdf(i,r,o))}static betainv(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.betainv(i,r,o))}static factorial(t){return new Complex(ProbabilityTool.factorial(Complex._toDouble(t)))}static nchoosek(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.nchoosek(e,i))}static erf(t){const n=Complex._toDouble(t);return new Complex(ProbabilityTool.erf(n))}static erfc(t){const n=Complex._toDouble(t);return new Complex(ProbabilityTool.erfc(n))}static erfinv(t){const n=Complex._toDouble(t);return new Complex(ProbabilityTool.erfinv(n))}static erfcinv(t){const n=Complex._toDouble(t);return new Complex(ProbabilityTool.erfcinv(n))}static normpdf(t,n,e){const i=Complex._toDouble(t),r=void 0!==n?Complex._toDouble(n):0,o=void 0!==e?Complex._toDouble(e):1;return new Complex(ProbabilityTool.normpdf(i,r,o))}static normcdf(t,n,e){const i=Complex._toDouble(t),r=void 0!==n?Complex._toDouble(n):0,o=void 0!==e?Complex._toDouble(e):1;return new Complex(ProbabilityTool.normcdf(i,r,o))}static norminv(t,n,e){const i=Complex._toDouble(t),r=void 0!==n?Complex._toDouble(n):0,o=void 0!==e?Complex._toDouble(e):1;return new Complex(ProbabilityTool.norminv(i,r,o))}static tpdf(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.tpdf(e,i))}static tcdf(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.tcdf(e,i))}static tinv(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.tinv(e,i))}static tdist(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toInteger(e);return new Complex(ProbabilityTool.tdist(i,r,o))}static tinv2(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.tinv2(e,i))}static chi2pdf(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.chi2pdf(e,i))}static chi2cdf(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.chi2cdf(e,i))}static chi2inv(t,n){const e=Complex._toDouble(t),i=Complex._toDouble(n);return new Complex(ProbabilityTool.chi2inv(e,i))}static fpdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.fpdf(i,r,o))}static fcdf(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.fcdf(i,r,o))}static finv(t,n,e){const i=Complex._toDouble(t),r=Complex._toDouble(n),o=Complex._toDouble(e);return new Complex(ProbabilityTool.finv(i,r,o))}}class Probability{static gammaln(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gammaln(t)})}static gamma(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gamma(t)})}static gammainc(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=isStr(e)?e:"lower";return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gammainc(t,r,o)})}static gampdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gampdf(t,r,o)})}static gamcdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gamcdf(t,r,o)})}static gaminv(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.gaminv(t,r,o)})}static beta(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.beta(t,i)})}static betainc(t,n,e,i){const r=Matrix._toMatrix(t),o=Matrix._toDouble(n),a=Matrix._toDouble(e),s=isStr(i)?i:"lower";return r.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.betainc(t,o,a,s)})}static betacdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.betacdf(t,r,o)})}static betapdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.betapdf(t,r,o)})}static betainv(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.betainv(t,r,o)})}static factorial(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.factorial(t)})}static nchoosek(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.nchoosek(t,i)})}static erf(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.erf(t)})}static erfc(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.erfc(t)})}static erfinv(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.erfinv(t)})}static erfcinv(t){return Matrix._toMatrix(t).cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.erfcinv(t)})}static normpdf(t,n,e){const i=Matrix._toMatrix(t),r=void 0!==n?Matrix._toDouble(n):0,o=void 0!==e?Matrix._toDouble(e):1;return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.normpdf(t,r,o)})}static normcdf(t,n,e){const i=Matrix._toMatrix(t),r=void 0!==n?Matrix._toDouble(n):0,o=void 0!==e?Matrix._toDouble(e):1;return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.normcdf(t,r,o)})}static norminv(t,n,e){const i=Matrix._toMatrix(t),r=void 0!==n?Matrix._toDouble(n):0,o=void 0!==e?Matrix._toDouble(e):1;return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.norminv(t,r,o)})}static tpdf(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.tpdf(t,i)})}static tcdf(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.tcdf(t,i)})}static tinv(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.tinv(t,i)})}static tdist(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.tdist(t,r,o)})}static tinv2(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.tinv2(t,i)})}static chi2pdf(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.chi2pdf(t,i)})}static chi2cdf(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.chi2cdf(t,i)})}static chi2inv(t,n){const e=Matrix._toMatrix(t),i=Matrix._toDouble(n);return e.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.chi2inv(t,i)})}static fpdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.fpdf(t,r,o)})}static fcdf(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.fcdf(t,r,o)})}static finv(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toDouble(n),o=Matrix._toDouble(e);return i.cloneMatrixDoEachCalculation(function(t){return ProbabilityComplex.finv(t,r,o)})}}class FFT{static bit_reverse_32(t){let n=4294967295&t;return n=(1431655765&n)<<1|n>>1&1431655765,n=(858993459&n)<<2|n>>2&858993459,n=(252645135&n)<<4|n>>4&252645135,n=(16711935&n)<<8|n>>8&16711935,n=(65535&n)<<16|n>>16&65535}static create_bit_reverse_table(t){const n=1<<t,e=[];for(let i=0;i<n;i++)e[i]=FFT.bit_reverse_32(i)>>>32-t;return e}constructor(t){this.size=t,this.inv_size=1/this.size,this.bit_size=Math.round(Math.log(this.size)/Math.log(2)),this.is_fast=1<<this.bit_size===this.size,this.bitrv=null,this.fft_re=new Array(this.size),this.fft_im=new Array(this.size);{const t=-2*Math.PI/this.size;let n=0;for(let e=0,i=0;e<this.size;e++){this.fft_re[e]=Math.cos(i),this.fft_im[e]=Math.sin(i);const r=t+n,o=i+r;n=o-i-r,i=o}}this.is_fast&&(this.bitrv=FFT.create_bit_reverse_table(this.bit_size))}delete(){delete this.size,delete this.inv_size,delete this.bit_size,delete this.is_fast,delete this.bitrv,delete this.fft_re,delete this.fft_im}fft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t=1,n=this.size/2,r=2;for(let o=1<<this.bit_size-1;o>0;o>>=1){for(let a=0;a<n;a++){let n=a*r;for(let r=0,a=0;r<t;r++,n++,a+=o){const r=e[n+t]*this.fft_re[a]-i[n+t]*this.fft_im[a],o=i[n+t]*this.fft_re[a]+e[n+t]*this.fft_im[a];e[n+t]=e[n]-r,i[n+t]=i[n]-o,e[n]+=r,i[n]+=o}}n/=2,r*=2,t*=2}}}else if(SignalTool.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,a=0;o<this.size;o++,a=o*r%this.size)e[r]+=t[o]*this.fft_re[a]-n[o]*this.fft_im[a],i[r]+=t[o]*this.fft_im[a]+n[o]*this.fft_re[a]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=r*n%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=t[r]*this.fft_im[o]}return{real:e,imag:i}}ifft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t,n,r=1,o=this.size/2,a=2;for(let s=1<<this.bit_size-1;s>0;s>>=1){for(let u=0;u<o;u++){let o=u*a;for(let a=0,u=0;a<r;a++,o++,u+=s)t=e[o+r]*this.fft_re[u]+i[o+r]*this.fft_im[u],n=i[o+r]*this.fft_re[u]-e[o+r]*this.fft_im[u],e[o+r]=e[o]-t,i[o+r]=i[o]-n,e[o]+=t,i[o]+=n}o/=2,a*=2,r*=2}}}else if(SignalTool.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,a=0;o<this.size;o++,a=r*o%this.size)e[r]+=t[o]*this.fft_re[a]+n[o]*this.fft_im[a],i[r]+=-t[o]*this.fft_im[a]+n[o]*this.fft_re[a]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=n*r%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=-t[r]*this.fft_im[o]}for(let t=0;t<this.size;t++)e[t]*=this.inv_size,i[t]*=this.inv_size;return{real:e,imag:i}}}class FFTCache{constructor(t,n){this.object=t,this.table=[],this.table_max=n}get(t){for(let n=0;n<this.table.length;n++)if(this.table[n].size===t){const t=this.table.splice(n,1)[0];return this.table.unshift(t),t}const n=new this.object(t);if(this.table.length===this.table_max){const t=this.table.pop();t.delete()}return this.table.unshift(n),n}}const fft_cache=new FFTCache(FFT,4);class DCT{constructor(t){this.size=t,this.dct_size=2*t,this.dct_re=new Array(this.size),this.dct_im=new Array(this.size);{const t=1/Math.sqrt(this.size),n=t*Math.sqrt(2);for(let e=0;e<this.size;e++){const i=-Math.PI*e/this.dct_size;this.dct_re[e]=Math.cos(i)*(0===e?t:n),this.dct_im[e]=Math.sin(i)*(0===e?t:n)}}}delete(){delete this.size,delete this.dct_size,delete this.dct_re,delete this.dct_im}dct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size);for(let i=0;i<this.dct_size;i++)n[i]=i<this.size?t[i]:0,e[i]=0;const i=fft_cache.get(this.dct_size).fft(n,e);for(let t=0;t<this.size;t++)n[t]=i.real[t]*this.dct_re[t]-i.imag[t]*this.dct_im[t];return n.splice(this.size),n}idct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size),i=2*this.size;for(let r=0;r<this.dct_size;r++)n[r]=r<this.size?i*t[r]*this.dct_re[r]:0,e[r]=r<this.size?i*t[r]*-this.dct_im[r]:0;const r=fft_cache.get(this.dct_size).ifft(n,e);return r.real.splice(this.size),r.real}}const dct_cache=new FFTCache(DCT,4);class SignalTool{static isContainsZero(t){for(let n=0;n<t.length;n++)if(0!==t[n])return!0;return!1}static fft(t,n){return fft_cache.get(t.length).fft(t,n)}static ifft(t,n){return fft_cache.get(t.length).ifft(t,n)}static dct(t){return dct_cache.get(t.length).dct(t)}static idct(t){return dct_cache.get(t.length).idct(t)}static powerfft(t,n){const e=t.length,i=SignalTool.fft(t,n),r=new Array(e);for(let t=0;t<e;t++)r[t]=i.real[t]*i.real[t]+i.imag[t]*i.imag[t];return r}static conv(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}const o=t.length,a=2*o;if(1<<Math.round(Math.log(o)/Math.log(2))===o){if(r){const e=t.length,i=new Array(a),r=new Array(a);for(let o=0;o<a;o++)i[o]=o<e?t[o]:0,r[o]=o<e?n[o]:0;const o=SignalTool.fft(i,r);for(let t=0;t<a;t++)i[t]=o.real[t]*o.real[t]-o.imag[t]*o.imag[t],r[t]=o.real[t]*o.imag[t]+o.imag[t]*o.real[t];const s=SignalTool.ifft(i,r);return s.real.splice(a-1),s.imag.splice(a-1),s}if(t.length===e.length){const r=t.length,o=new Array(a),s=new Array(a),u=new Array(a),l=new Array(a);for(let c=0;c<a;c++)o[c]=c<r?t[c]:0,s[c]=c<r?n[c]:0,u[c]=c<r?e[c]:0,l[c]=c<r?i[c]:0;const c=SignalTool.fft(o,s),h=SignalTool.fft(u,l),g=new Array(a),f=new Array(a);for(let t=0;t<a;t++)g[t]=c.real[t]*h.real[t]-c.imag[t]*h.imag[t],f[t]=c.real[t]*h.imag[t]+c.imag[t]*h.real[t];const m=SignalTool.ifft(g,f);return m.real.splice(a-1),m.imag.splice(a-1),m}}let s=!SignalTool.isContainsZero(n);s&&(s=!SignalTool.isContainsZero(i));{const r=new Array(t.length+e.length-1),o=new Array(t.length+e.length-1);for(let t=0;t<r.length;t++)r[t]=0,o[t]=0;if(s)for(let n=0;n<e.length;n++)for(let i=0;i<t.length;i++)r[n+i]+=t[i]*e[n];else for(let a=0;a<e.length;a++)for(let s=0;s<t.length;s++)r[a+s]+=t[s]*e[a]-n[s]*i[a],o[a+s]+=t[s]*i[a]+n[s]*e[a];return{real:r,imag:o}}}static xcorr(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}if(t.length===e.length){const o=t.length,a=2*o,s=Math.round(Math.log(o)/Math.log(2)),u=1<<s===o;if(u){let s=null;if(r){const e=new Array(a),i=new Array(a);for(let r=0;r<a;r++)e[r]=r<o?t[r]:0,i[r]=r<o?n[r]:0;const r=SignalTool.powerfft(e,i);s=SignalTool.ifft(r,i),e.pop(),i.pop();for(let t=0,n=o+1;t<e.length;t++,n++)a<=n&&(n=0),e[t]=s.real[n],i[t]=s.imag[n];return{real:e,imag:i}}{const r=new Array(a),u=new Array(a),l=new Array(a),c=new Array(a);for(let s=0;s<a;s++)r[s]=s<o?t[s]:0,u[s]=s<o?n[s]:0,l[s]=s<o?e[o-s-1]:0,c[s]=s<o?-i[o-s-1]:0;const h=SignalTool.fft(r,u),g=SignalTool.fft(l,c),f=new Array(a),m=new Array(a);for(let t=0;t<a;t++)f[t]=h.real[t]*g.real[t]-h.imag[t]*g.imag[t],m[t]=h.real[t]*g.imag[t]+h.imag[t]*g.real[t];return(s=SignalTool.ifft(f,m)).real.splice(a-1),s.imag.splice(a-1),s}}}let o=!SignalTool.isContainsZero(n);if(o&&(o=!SignalTool.isContainsZero(i)),r){const n=t.length,i=2*n;if(o){const r=new Array(n);for(let i=0;i<n;i++){r[i]=0;const o=n-i;for(let n=0;n<o;n++)r[i]+=t[n]*e[n+i]}const o=new Array(i-1),a=new Array(i-1);for(let t=0,e=n-1;t<n;t++,e--)o[t]=r[e],o[n+t-1]=r[t];for(let t=0;t<a.length;t++)a[t]=0;return{real:o,imag:a}}}{const r=new Array(e.length),o=new Array(e.length);for(let t=0;t<e.length;t++)r[t]=e[e.length-t-1],o[t]=-i[e.length-t-1];const a=SignalTool.conv(t,n,r,o);if(t.length===e.length)return a;const s=Math.abs(t.length-e.length),u=new Array(s);for(let t=0;t<s;t++)u[t]=0;return t.length>e.length?{real:u.concat(a.real),imag:u.concat(a.imag)}:{real:a.real.concat(u),imag:a.imag.concat(u)}}}static window(t,n,e){const i=void 0!==e?e:"symmetric",r=t.toLocaleLowerCase(),o=n,a=new Array(o);let s;"symmetric"===i||0===i?s=function(t){return t/(o-1)*(2*Math.PI)}:"periodic"!==i&&0===i||(s=function(t){return t/o*(2*Math.PI)});const u=function(t,n,e,i,r){for(let u=0;u<o;u++)a[u]=t,a[u]-=n*Math.cos(1*s(u)),a[u]+=e*Math.cos(2*s(u)),a[u]-=i*Math.cos(3*s(u)),a[u]+=r*Math.cos(4*s(u))};switch(r){case"rectangle":u(1,0,0,0,0);break;case"hann":u(.5,.5,0,0,0);break;case"hamming":u(.54,.46,0,0,0);break;case"blackman":u(.42,.5,.08,0,0);break;case"blackmanharris":u(.35875,.48829,.14128,.01168,0);break;case"blackmannuttall":u(.3635819,.4891775,.1365995,.0106411,0);break;case"flattop":u(1,1.93,1.29,.388,.032);break;case"sin":for(let t=0;t<o;t++)a[t]=Math.sin(.5*s(t));break;case"vorbis":for(let t=0;t<o;t++){const n=Math.sin(.5*s(t));a[t]=Math.sin(.5*Math.PI*n*n)}}return a}static hann(t,n){return SignalTool.window("hann",t,n)}static hamming(t,n){return SignalTool.window("hamming",t,n)}}class Signal{static fft(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.fft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return Matrix._toMatrix(t).eachVector(i,e)}static ifft(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.ifft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return Matrix._toMatrix(t).eachVector(i,e)}static powerfft(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.powerfft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex(i[n]);return r};return Matrix._toMatrix(t).eachVector(i,e)}static dct(t,n){const e=n&&n.dimension?n.dimension:"auto",i=Matrix._toMatrix(t);if(i.isComplex())throw"dct don't support complex numbers.";const r=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=SignalTool.dct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return i.eachVector(r,e)}static idct(t,n){const e=n&&n.dimension?n.dimension:"auto",i=Matrix._toMatrix(t);if(i.isComplex())throw"idct don't support complex numbers.";const r=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=SignalTool.idct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return i.eachVector(r,e)}static fft2(t){return Signal.fft(t,{dimension:"both"})}static ifft2(t){return Signal.ifft(t,{dimension:"both"})}static dct2(t){return Signal.dct(t,{dimension:"both"})}static idct2(t){return Signal.idct(t,{dimension:"both"})}static conv(t,n){const e=Matrix._toMatrix(t),i=Matrix._toMatrix(n);if(e.isMatrix()||i.isMatrix())throw"conv don't support matrix numbers.";const r=new Array(e.length),o=new Array(e.length),a=new Array(i.length),s=new Array(i.length);if(e.isRow())for(let t=0;t<e.column_length;t++)r[t]=e.matrix_array[0][t].real,o[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)r[t]=e.matrix_array[t][0].real,o[t]=e.matrix_array[t][0].imag;if(i.isRow())for(let t=0;t<i.column_length;t++)a[t]=i.matrix_array[0][t].real,s[t]=i.matrix_array[0][t].imag;else for(let t=0;t<i.row_length;t++)a[t]=i.matrix_array[t][0].real,s[t]=i.matrix_array[t][0].imag;const u=SignalTool.conv(r,o,a,s),l=new Array(u.real.length);for(let t=0;t<u.real.length;t++)l[t]=new Complex([u.real[t],u.imag[t]]);const c=new Matrix([l]);return i.isRow()?c:c.transpose()}static xcorr(t,n){const e=Matrix._toMatrix(t);if(!n)return e.xcorr(e);const i=Matrix._toMatrix(n);if(e.isMatrix()||i.isMatrix())throw"conv don't support matrix numbers.";const r=new Array(e.length),o=new Array(e.length),a=new Array(i.length),s=new Array(i.length);if(e.isRow())for(let t=0;t<e.column_length;t++)r[t]=e.matrix_array[0][t].real,o[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)r[t]=e.matrix_array[t][0].real,o[t]=e.matrix_array[t][0].imag;if(i.isRow())for(let t=0;t<i.column_length;t++)a[t]=i.matrix_array[0][t].real,s[t]=i.matrix_array[0][t].imag;else for(let t=0;t<i.row_length;t++)a[t]=i.matrix_array[t][0].real,s[t]=i.matrix_array[t][0].imag;const u=SignalTool.xcorr(r,o,a,s),l=new Array(u.real.length);for(let t=0;t<u.real.length;t++)l[t]=new Complex([u.real[t],u.imag[t]]);const c=new Matrix([l]);return e.isRow()?c:c.transpose()}static window(t,n,e){const i=Matrix._toInteger(n),r=SignalTool.window(t,i,e);return new Matrix(r).transpose()}static hann(t,n){return Signal.window("hann",t,n)}static hamming(t,n){return Signal.window("hamming",t,n)}static fftshift(t,n){const e=Matrix._toMatrix(t);if(e.isVector()){const t=Math.floor(e.length/2);return e.circshift(t,n)}const i=Math.floor(e.column_length/2),r=Math.floor(e.row_length/2);if(void 0!==n){const t=n.dimension;if("row"===t||1===t)return e.circshift(i,n);if("column"===t||2===t)return e.circshift(r,n)}return e.circshift(i,{dimension:"row"}).circshift(r,{dimension:"column"})}}class MatrixTool{static toPositionArrayFromObject(t,n,e){if("string"==typeof t){const i=MatrixTool.toArrayFromString(t);if(":"===i){const t=new Array(n);for(let i=0;i<n;i++)t[i]=i+e;return t}if(i instanceof Array){const t=i,n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=Math.trunc(t[e].real);return n}throw"toArrayFromString["+t+"]["+i+"]"}let i=t;if(i instanceof Matrix||i instanceof Complex||"number"==typeof i||(i=Matrix._toMatrix(i)),i instanceof Matrix){if(!i.isVector())throw"getMatrix argument "+i;const t=i.length,n=new Array(i.length);if(i.isRow())for(let e=0;e<t;e++)n[e]=Math.trunc(i.matrix_array[0][e].real);else if(i.isColumn())for(let e=0;e<t;e++)n[e]=Math.trunc(i.matrix_array[e][0].real);return n}return[Matrix._toInteger(i)]}static match2(t,n){const e=[];let i=t;for(let t=0;t<1e3;t++){const t=i.match(n);if(null===t){i.length&&e.push([!1,i]);break}t.index>0&&e.push([!1,i.substr(0,t.index)]),e.push([!0,t[0]]),i=i.substr(t.index+t[0].length)}return e}static trimBracket(t){let n=t,e=!1;if(/'$/.test(n)){const t=n.match(/(\s*')*$/g)[0],i=t.split("'").length-1;e=i%2==1,n=n.substring(0,n.length-t.length)}return/^\[/.test(n)&&/\]$/.test(n)?{text:n.substring(1,n.length-1),is_transpose:e}:null}static toMatrixArrayFromStringForArrayJSON(t){const n=[];let e=t.match(/\[[^\]]+\]/g);null===e&&(e=[t]);for(let t=0;t<e.length;t++){const i=e[t],r=i.substring(1,i.length-1).split(","),o=[];for(let t=0;t<r.length;t++){const n=r[t];o[t]=new Complex(n)}n[t]=o}return n}static InterpolationCalculation(t,n,e,i){const r=t.compareTo(e),o=void 0===i||i;if(0===r)return[t];if(n.isZero())throw"IllegalArgumentException";if(n.isNegative()&&-1===r)throw"IllegalArgumentException";const a=[];let s=t;a[0]=s;for(let t=1;t<65536;t++){if(s=s.add(n),o){if(e.compareTo(s)===r)break}else if(e.compareTo(s)*r>=0)break;a[t]=s}return a}static toArrayFromMatch2String(t){const n=t,e=[];for(let t=0;t<n.length;t++){const i=n[t];if(i[0])if(t<n.length-2&&!n[t+1][0]&&/:/.test(n[t+1][1])){let r,o,a;t<n.length-4&&!n[t+3][0]&&/:/.test(n[t+3][1])?(r=new Complex(i[1]),o=new Complex(n[t+2][1]),a=new Complex(n[t+4][1]),t+=4):(r=new Complex(i[1]),o=Complex.ONE,a=new Complex(n[t+2][1]),t+=2);const s=MatrixTool.InterpolationCalculation(r,o,a,!0);for(let t=0;t<s.length;t++)e.push(s[t])}else e.push(new Complex(i[1]))}return e}static toArrayFromString(t){if(":"===t.trim())return":";const n=t.toLowerCase().replace(/infinity|inf/g,"1e100000"),e=new RegExp("("+/[+-]? *(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan))?[ij]( *[+] *[- ]?(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan)))?/.source+")|("+/[+-]? *(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan))( *[+-] *[- ]?(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan))?[ij])?/.source+")","i");return MatrixTool.toArrayFromMatch2String(MatrixTool.match2(n,e))}static toMatrixArrayFromStringForArraySPACE(t){const n=t.split(";"),e=new Array(n.length);for(let t=0;t<n.length;t++)e[t]=MatrixTool.toArrayFromString(n[t]);return e}static toMatrixArrayFromStringInBracket(t){return/[[\]]/.test(t)?MatrixTool.toMatrixArrayFromStringForArrayJSON(t):MatrixTool.toMatrixArrayFromStringForArraySPACE(t)}static toMatrixArrayFromString(t){const n=t.replace(/^\s*|\s*$/g,""),e=MatrixTool.trimBracket(n);if(e){let t=MatrixTool.toMatrixArrayFromStringInBracket(e.text);return e.is_transpose&&(t=new Matrix(t).T().matrix_array),t}return[[new Complex(t)]]}static isCorrectMatrixArray(t){if(0===t.length)return!1;const n=t[0].length;if(0===n)return!1;for(let e=1;e<t.length;e++)if(t[e].length!==n)return!1;return!0}}class Matrix{constructor(t){let n=null,e=!1;if(1!==arguments.length)throw"Matrix : Many arguments ["+arguments.length+"]";{const i=t;if(i instanceof Matrix){n=new Array(i.row_length);for(let t=0;t<i.row_length;t++){n[t]=new Array(i.column_length);for(let e=0;e<i.column_length;e++)n[t][e]=i.matrix_array[t][e]}}else if(i instanceof Complex)n=[[i]];else if(i instanceof Array){n=[];for(let t=0;t<i.length;t++){const e=i[t];if(e instanceof Array){const i=new Array(e.length);for(let t=0;t<e.length;t++){const n=e[t];if(n instanceof Complex)i[t]=n;else if(n instanceof Matrix){if(!n.isScalar())throw"Matrix in matrix";i[t]=n.scalar}else i[t]=new Complex(n)}n[t]=i}else if(0===t&&(n[0]=new Array(i.length)),e instanceof Complex)n[0][t]=e;else if(e instanceof Matrix){if(!e.isScalar())throw"Matrix in matrix";n[0][t]=e.scalar}else n[0][t]=new Complex(e)}}else"string"==typeof i?(e=!0,n=MatrixTool.toMatrixArrayFromString(i)):i instanceof Object&&"doubleValue"in i?n=[[new Complex(i.doubleValue)]]:i instanceof Object?(e=!0,n=MatrixTool.toMatrixArrayFromString(i.toString())):n=[[new Complex(i)]]}if(e)for(let t=0;t<n.length;t++)":"===n[t]&&n.splice(t--,1);if(!MatrixTool.isCorrectMatrixArray(n))throw console.log(n),"new Matrix IllegalArgumentException";this.matrix_array=n,this.row_length=this.matrix_array.length,this.column_length=this.matrix_array[0].length,this.string_cash=null}static create(t){return 1===arguments.length&&t instanceof Matrix?t:new Matrix(t)}static valueOf(t){return Matrix.create(t)}static _toMatrix(t){return t instanceof Matrix?t:new Matrix(t)}static _toComplex(t){if(t instanceof Complex)return t;const n=Matrix._toMatrix(t);if(n.isScalar())return n.scalar;throw"not scalar. ["+t+"]"}static _toDouble(t){if("number"==typeof t)return t;const n=Matrix._toComplex(t);if(n.isReal())return n.real;throw"not support complex numbers."}static _toInteger(t){return Math.trunc(Matrix._toDouble(t))}_clearCash(){this.string_cash&&delete this.string_cash}clone(){return new Matrix(this.matrix_array)}toString(){if(this.string_cash)return this.string_cash;const t=Math.pow(10,9);let n=!1,e=!1,i=0;this._each(function(r,o,a){r.isReal()||(n=!0),Number.isFinite(r.real)&&Math.abs(r.real)>=t&&(e=!0),Number.isFinite(r.imag)&&Math.abs(r.imag)>=t&&(e=!0),i=Math.max(i,r.getDecimalPosition())}),i>0&&(i=4);let r=0;const o=[],a=function(t){const n=e?t.toExponential(4):t.toFixed(i);if(/inf/i.test(n))return t===Number.POSITIVE_INFINITY?"Inf":"-Inf";if(/nan/i.test(n))return"NaN";if(!e)return n;const r=n.split("e");let o=r[1];return 2===o.length?o=o.substr(0,1)+"00"+o.substr(1):3===o.length&&(o=o.substr(0,1)+"0"+o.substr(1)),r[0]+"e"+o};this._each(function(t){const e={};let i=t.real;if(e.re_sign=i<0?"-":" ",i=Math.abs(i),e.re_str=a(i),r=Math.max(r,e.re_str.length+1),n){let n=t.imag;e.im_sign=n<0?"-":"+",n=Math.abs(n),e.im_str=a(n),r=Math.max(r,e.im_str.length+1)}o.push(e)});const s=function(t,n){return"                                        ".substr(0,n-t.length)+t},u=[],l=this;return this._each(function(t,e,i){const a=o.shift();let c=s(a.re_sign+a.re_str,r);n&&(c+=" "+a.im_sign+s(a.im_str,r)+"i"),u.push(c),u.push(i<l.column_length-1?" ":"\n")}),this.string_cash=u.join(""),this.string_cash}toOneLineString(){if(this.isScalar())return this.scalar.toString();let t="[ ";for(let n=0;n<this.row_length;n++)for(let e=0;e<this.column_length;e++)t+=this.matrix_array[n][e].toString(),e<this.column_length-1?t+=", ":n<this.row_length-1&&(t+="; ");return t+=" ]"}equals(t,n){const e=this,i=Matrix._toMatrix(t);if(e.row_length!==i.row_length||e.column_length!==i.column_length)return!1;if(1===e.row_length&&1===e.column_length)return e.scalar.equals(i.scalar,n);const r=e.matrix_array,o=i.matrix_array;for(let t=0;t<this.row_length;t++)for(let e=0;e<this.column_length;e++)if(!r[t][e].equals(o[t][e],n))return!1;return!0}getNumberMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e].real}return t}getComplexMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e]}return t}_each(t){let n=!1;for(let e=0;e<this.row_length;e++)for(let i=0;i<this.column_length;i++){const r=t(this.matrix_array[e][i],e,i);void 0!==r&&(this.matrix_array[e][i]=r instanceof Complex?r:r instanceof Matrix?r.scalar:new Complex(r),n=!0)}return n&&this._clearCash(),this}cloneMatrixDoEachCalculation(t){return this.clone()._each(t)}static createMatrixDoEachCalculation(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";const i=Matrix._toInteger(n),r=e?Matrix._toInteger(e):i,o=new Array(i);for(let n=0;n<i;n++){o[n]=new Array(r);for(let e=0;e<r;e++){const i=t(n,e);o[n][e]=void 0===i?Complex.ZERO:Matrix._toComplex(i)}}return new Matrix(o)}eachVectorAuto(t){if(this.isRow()){const n=new Array(this.row_length);for(let t=0;t<this.column_length;t++)n[t]=this.matrix_array[0][t];return new Matrix(t(n))}{const n=Matrix.ZERO;n._resize(1,this.column_length);for(let e=0;e<this.column_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++)i[t]=this.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}}eachVectorBoth(t){const n=Matrix.ZERO;n._resize(this.row_length,1);for(let e=0;e<this.row_length;e++){const i=new Array(this.column_length);for(let t=0;t<this.column_length;t++)i[t]=this.matrix_array[e][t];const r=t(i);n._resize(n.row_length,Math.max(n.column_length,r.length));for(let t=0;t<r.length;t++)n.matrix_array[e][t]=r[t]}const e=Matrix.ZERO;e._resize(1,n.column_length);for(let i=0;i<n.column_length;i++){const r=new Array(n.row_length);for(let t=0;t<n.row_length;t++)r[t]=n.matrix_array[t][i];const o=t(r);e._resize(Math.max(e.row_length,o.length),e.column_length);for(let t=0;t<o.length;t++)e.matrix_array[t][i]=o[t]}return e}eachVectorRow(t){const n=Matrix.ZERO;n._resize(this.row_length,1);for(let e=0;e<this.row_length;e++){const i=new Array(this.column_length);for(let t=0;t<this.column_length;t++)i[t]=this.matrix_array[e][t];const r=t(i);n._resize(n.row_length,Math.max(n.column_length,r.length));for(let t=0;t<r.length;t++)n.matrix_array[e][t]=r[t]}return n}eachVectorColumn(t){const n=Matrix.ZERO;n._resize(1,this.column_length);for(let e=0;e<this.column_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++)i[t]=this.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}eachVector(t,n){let e=void 0!==n?n:"auto";if("string"==typeof e?e=e.toLocaleLowerCase():"number"!=typeof e&&(e=Matrix._toInteger(e)),"auto"===e||0===e)return this.eachVectorAuto(t);if("row"===e||1===e)return this.eachVectorRow(t);if("column"===e||2===e)return this.eachVectorColumn(t);if("both"===e||3===e)return this.eachVectorBoth(t);throw"eachVector argument "+n}getMatrix(t,n,e=!1){const i=e?1:0,r=MatrixTool.toPositionArrayFromObject(t,this.row_length,i),o=MatrixTool.toPositionArrayFromObject(n,this.column_length,i),a=this.matrix_array,s=new Array(r.length);for(let t=0;t<r.length;t++){const n=new Array(o.length);for(let e=0;e<o.length;e++)n[e]=a[r[t]-i][o[e]-i];s[t]=n}return new Matrix(s)}setMatrix(t,n,e,i=!1){const r=i?1:0,o=MatrixTool.toPositionArrayFromObject(t,this.row_length,r),a=MatrixTool.toPositionArrayFromObject(n,this.column_length,r),s=new Matrix(this).matrix_array,u=Matrix._toMatrix(e),l=u.matrix_array;for(let t=0;t<o.length;t++)for(let n=0;n<a.length;n++)s[o[t]-r][a[n]-r]=l[t%u.row_length][n%u.column_length];return new Matrix(s)}getComplex(t,n){let e=null,i=null;return 1===arguments.length?e=Matrix._toInteger(t):2===arguments.length&&(e=Matrix._toInteger(t),i=Matrix._toInteger(n)),this.isRow()?this.matrix_array[0][e]:this.isColumn()?this.matrix_array[e][0]:this.matrix_array[e][i]}get booleanValue(){return this.matrix_array[0][0].booleanValue}get intValue(){return Math.trunc(this.matrix_array[0][0].real)}get doubleValue(){return this.matrix_array[0][0].real}get scalar(){return this.matrix_array[0][0]}get length(){return this.row_length>this.column_length?this.row_length:this.column_length}get width(){return this.column_length}get height(){return this.row_length}get norm1(){return LinearAlgebra.norm(this,1)}get norm2(){return LinearAlgebra.norm(this,2)}norm(t){return LinearAlgebra.norm(this,t)}cond(t){return LinearAlgebra.cond(this,t)}rcond(){return LinearAlgebra.rcond(this)}rank(t){return LinearAlgebra.rank(this,t)}trace(){return LinearAlgebra.trace(this)}det(){return LinearAlgebra.det(this)}static memset(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";const i=Matrix._toMatrix(t);if(i.isScalar()){const t=i.scalar;return Matrix.createMatrixDoEachCalculation(function(){return t},n,e)}{const t=i.matrix_array,r=i.row_length,o=i.column_length;return Matrix.createMatrixDoEachCalculation(function(n,e){return t[n%r][e%o]},n,e)}}static eye(t,n){return Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?Complex.ONE:Complex.ZERO},t,n)}static zeros(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ZERO,t,n)}static ones(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ONE,t,n)}static rand(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.rand()},t,n)}static randn(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.randn()},t,n)}diag(){if(this.isVector()){const t=this;return Matrix.createMatrixDoEachCalculation(function(n,e){return n===e?t.getComplex(n):Complex.ZERO},this.length)}{const t=Math.min(this.row_length,this.column_length),n=new Array(t);for(let e=0;e<t;e++)n[e]=new Array(1),n[e][0]=this.matrix_array[e][e];return new Matrix(n)}}isScalar(){return 1===this.row_length&&1==this.column_length}isRow(){return 1===this.row_length}isColumn(){return 1===this.column_length}isVector(){return 1===this.row_length||1===this.column_length}isMatrix(){return 1!==this.row_length&&1!==this.column_length}isSquare(){return this.row_length===this.column_length}isReal(t){let n=!0;return this._each(function(e){n&&e.isComplex(t)&&(n=!1)}),n}isComplex(t){return!this.isReal(t)}isZeros(t){let n=!0;const e=t||1e-10;return this._each(function(t){n&&!t.isZero(e)&&(n=!1)}),n}isIdentity(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&(i===r?t.isOne(e)||(n=!1):t.isZero(e)||(n=!1))}),n}isDiagonal(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i!==r&&!t.isZero(e)&&(n=!1)}),n}isTridiagonal(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&Math.abs(i-r)>1&&!t.isZero(e)&&(n=!1)}),n}isRegular(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.rank(n)===this.row_length}isOrthogonal(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.transpose()).isIdentity(n)}isUnitary(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.ctranspose()).isIdentity(n)}isSymmetric(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t+1;e<this.column_length;e++)if(!this.matrix_array[t][e].equals(this.matrix_array[e][t],n))return!1;return!0}isHermitian(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t;e<this.column_length;e++)if(t===e){if(!this.matrix_array[t][e].isReal(n))return!1}else if(!this.matrix_array[t][e].equals(this.matrix_array[e][t].conj(),n))return!1;return!0}isTriangleUpper(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i>r&&!t.isZero(e)&&(n=!1)}),n}isTriangleLower(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i<r&&!t.isZero(e)&&(n=!1)}),n}isPermutation(t){if(!this.isSquare())return!1;const n=t||1e-10,e=new Array(this.row_length),i=new Array(this.column_length);for(let t=0;t<this.row_length;t++)for(let r=0;r<this.column_length;r++){const o=this.matrix_array[t][r];if(o.isOne(n)){if(e[t]||i[r])return!1;e[t]=1,i[r]=1}else if(!o.isZero(n))return!1}for(let t=0;t<this.row_length;t++)if(void 0===e[t]||void 0===i[t])return!1;return!0}size(t){if(void 0!==t){let n=t;if("string"==typeof n?n=n.toLocaleLowerCase():"number"!=typeof n&&(n=Matrix._toInteger(n)),"row"===n||1===n)return new Matrix(this.row_length);if("column"===n||2===n)return new Matrix(this.column_length)}return new Matrix([[this.row_length,this.column_length]])}compareTo(t,n){const e=this,i=Matrix._toMatrix(t);if(e.isScalar()&&i.isScalar())return e.scalar.compareTo(i.scalar,n);const r=e.matrix_array,o=i.matrix_array,a=Math.max(e.row_length,i.row_length),s=Math.max(e.column_length,i.column_length);return Matrix.createMatrixDoEachCalculation(function(t,n){return r[t%e.row_length][n%e.column_length].compareTo(o[t%i.row_length][n%i.column_length])},a,s)}add(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),a=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].add(r[t%e.row_length][o%e.column_length])},o,a)}sub(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),a=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].sub(r[t%e.row_length][o%e.column_length])},o,a)}mul(t){const n=this,e=Matrix._toMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(n.scalar.mul(e.scalar));if(n.isScalar()){const t=new Array(e.row_length);for(let i=0;i<e.row_length;i++){t[i]=new Array(e.column_length);for(let o=0;o<e.column_length;o++)t[i][o]=n.scalar.mul(r[i][o])}return new Matrix(t)}if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].mul(e.scalar)}return new Matrix(t)}if(n.column_length!==e.row_length)throw"Matrix size does not match";{const t=new Array(n.row_length);for(let o=0;o<n.row_length;o++){t[o]=new Array(e.column_length);for(let a=0;a<e.column_length;a++){let e=Complex.ZERO;for(let t=0;t<n.column_length;t++)e=e.add(i[o][t].mul(r[t][a]));t[o][a]=e}}return new Matrix(t)}}div(t){const n=this,e=Matrix._toMatrix(t),i=n.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(n.scalar.div(e.scalar));if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].div(e.scalar)}return new Matrix(t)}if(e.row_length===e.column_length){const t=e.det().scalar.norm;return t>1e-10?this.mul(e.inv()):this.mul(e.pinv())}if(n.column_length!==e.column_length)throw"Matrix size does not match";throw"warning"}pow(t){if(!this.isSquare())throw"not square "+this;let n=Matrix._toInteger(t);if(n<0)throw"error negative number "+n;let e,i;for(e=this.clone(),i=Matrix.eye(this.length);0!==n;)0!=(1&n)&&(i=i.mul(e)),e=e.mul(e),n>>>=1;return i}dotmul(t){const n=this,e=Matrix._toMatrix(t);if(!n.isScalar()&&!e.isScalar()&&n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),a=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].mul(r[t%e.row_length][o%e.column_length])},o,a)}dotdiv(t){const n=this,e=Matrix._toMatrix(t);if(!n.isScalar()&&!e.isScalar()&&n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),a=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].div(r[t%e.row_length][o%e.column_length])},o,a)}dotinv(){const t=this,n=t.matrix_array;return Matrix.createMatrixDoEachCalculation(function(t,e){return n[t][e].inv()},t.row_length,t.column_length)}dotpow(t){const n=this,e=Matrix._toMatrix(t);if(!n.isScalar()&&!e.isScalar()&&n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),a=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].pow(r[t%e.row_length][o%e.column_length])},o,a)}nmul(t){return this.dotmul(t)}ndiv(t){return this.dotdiv(t)}ninv(){return this.dotinv()}npow(t){return this.dotpow(t)}real(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.real)})}imag(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.imag)})}arg(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.arg)})}sign(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.sign())})}testInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isInteger(t)?Complex.ONE:Complex.ZERO})}testComplexInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplexInteger(t)?Complex.ONE:Complex.ZERO})}testZero(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isZero(t)?Complex.ONE:Complex.ZERO})}testOne(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isOne(t)?Complex.ONE:Complex.ZERO})}testComplex(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplex(t)?Complex.ONE:Complex.ZERO})}testReal(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isReal(t)?Complex.ONE:Complex.ZERO})}testNaN(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNaN()?Complex.ONE:Complex.ZERO})}testPositive(){return this.cloneMatrixDoEachCalculation(function(t){return t.isPositive()?Complex.ONE:Complex.ZERO})}testNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNegative()?Complex.ONE:Complex.ZERO})}testNotNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNotNegative()?Complex.ONE:Complex.ZERO})}testPositiveInfinity(){return this.cloneMatrixDoEachCalculation(function(t){return t.isPositiveInfinity()?Complex.ONE:Complex.ZERO})}testNegativeInfinity(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNegativeInfinity()?Complex.ONE:Complex.ZERO})}testInfinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isInfinite()?Complex.ONE:Complex.ZERO})}testFinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isFinite()?Complex.ONE:Complex.ZERO})}abs(){return this.cloneMatrixDoEachCalculation(function(t){return t.abs()})}conj(){return this.cloneMatrixDoEachCalculation(function(t){return t.conj()})}negate(){return this.cloneMatrixDoEachCalculation(function(t){return t.negate()})}sqrt(){return this.cloneMatrixDoEachCalculation(function(t){return t.sqrt()})}log(){return this.cloneMatrixDoEachCalculation(function(t){return t.log()})}exp(){return this.cloneMatrixDoEachCalculation(function(t){return t.exp()})}sin(){return this.cloneMatrixDoEachCalculation(function(t){return t.sin()})}cos(){return this.cloneMatrixDoEachCalculation(function(t){return t.cos()})}tan(){return this.cloneMatrixDoEachCalculation(function(t){return t.tan()})}atan(){return this.cloneMatrixDoEachCalculation(function(t){return t.atan()})}atan2(t){const n=Matrix._toComplex(t);return this.cloneMatrixDoEachCalculation(function(t){return t.atan2(n)})}floor(){return this.cloneMatrixDoEachCalculation(function(t){return t.floor()})}ceil(){return this.cloneMatrixDoEachCalculation(function(t){return t.ceil()})}round(){return this.cloneMatrixDoEachCalculation(function(t){return t.round()})}fix(){return this.cloneMatrixDoEachCalculation(function(t){return t.fix()})}fract(){return this.cloneMatrixDoEachCalculation(function(t){return t.fract()})}sinc(){return this.cloneMatrixDoEachCalculation(function(t){return t.sinc()})}_rot90(t){const n=Matrix._toInteger(t);let e=1;if(1===arguments.length&&(e=(n%4+4)%4),0===e)return this;const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++){i[t]=new Array(this.column_length);for(let n=0;n<this.column_length;n++)i[t][n]=this.matrix_array[t][n]}const r=this.matrix_array;if(1===e){r.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?r[t].splice(this.row_length):r[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)r[t][n]=i[this.row_length-n-1][t]}}else if(2===e)for(let t=0;t<this.row_length;t++)for(let n=0;n<this.column_length;n++)r[t][n]=i[this.row_length-t-1][this.column_length-n-1];else if(3===e){r.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?r[t].splice(this.row_length):r[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)r[t][n]=i[n][this.column_length-t-1]}}return this.row_length=r.length,this.column_length=r[0].length,this._clearCash(),this}rot90(t){return this.clone()._rot90(t)}_resize(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(e===this.row_length&&i===this.column_length)return this;if(e<=0||i<=0)throw"_resize";const r=Math.max(this.row_length,e),o=Math.max(this.column_length,i),a=this.matrix_array;for(let t=0;t<r;t++){t>=this.row_length&&(a[t]=new Array(o));for(let n=0;n<o;n++)(t>=this.row_length||n>=this.column_length)&&(a[t][n]=Complex.ZERO)}if(this.row_length>e&&a.splice(e),this.column_length>i)for(let t=0;t<a.length;t++)a[t].splice(i);return this.row_length=e,this.column_length=i,this._clearCash(),this}resize(t,n){return this.clone()._resize(t,n)}_deleteRow(t){const n=Matrix._toInteger(t);if(1===this.row_length||this.row_length<=n)throw"_deleteRow";return this.matrix_array.splice(n,1),this.row_length--,this._clearCash(),this}_deleteColumn(t){const n=Matrix._toInteger(t);if(1===this.column_length||this.column_length<=n)throw"_deleteColumn";for(let t=0;t<this.row_length;t++)this.matrix_array[t].splice(n,1);return this.column_length--,this._clearCash(),this}deleteRow(t){return this.clone()._deleteRow(t)}deleteColumn(t){return this.clone()._deleteColumn(t)}_exchangeRow(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(1===this.row_length||this.row_length<=e||this.row_length<=i)throw"_exchangeRow";if(e===i)return this;const r=this.matrix_array[e];return this.matrix_array[e]=this.matrix_array[i],this.matrix_array[i]=r,this._clearCash(),this}_exchangeColumn(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(1===this.column_length||this.column_length<=e||this.column_length<=i)throw"_exchangeColumn";if(e===i)return this;for(let t=0;t<this.row_length;t++){const n=this.matrix_array[t][e];this.matrix_array[t][e]=this.matrix_array[t][i],this.matrix_array[t][i]=n}return this._clearCash(),this}exchangeRow(t,n){return this.clone()._exchangeRow(t,n)}exchangeColumn(t,n){return this.clone()._exchangeColumn(t,n)}_concatRight(t){const n=Matrix._toMatrix(t);if(this.row_length!=n.row_length)throw"_concatRight";for(let t=0;t<this.row_length;t++)for(let e=0;e<n.column_length;e++)this.matrix_array[t].push(n.matrix_array[t][e]);return this.column_length+=n.column_length,this._clearCash(),this}_concatBottom(t){const n=Matrix._toMatrix(t);if(this.column_length!=n.column_length)throw"_concatBottom";for(let t=0;t<n.row_length;t++)this.matrix_array.push(n.matrix_array[t]);return this.row_length+=n.row_length,this._clearCash(),this}concatRight(t){return this.clone()._concatRight(t)}concatBottom(t){return this.clone()._concatBottom(t)}clip(t,n){const e=Matrix._toMatrix(t),i=Matrix._toMatrix(n),r=e.matrix_array,o=i.matrix_array;return this.cloneMatrixDoEachCalculation(function(t,n,a){const s=r[n%e.row_length][a%e.column_length],u=o[n%i.row_length][a%i.column_length];return t.clip(s,u)})}static arange(t,n,e){const i=void 0!==n?Matrix._toComplex(t):Complex.ZERO,r=void 0!==n?Matrix._toComplex(n):Matrix._toComplex(t),o=void 0!==e?Matrix._toComplex(e):Complex.ONE;return new Matrix(MatrixTool.InterpolationCalculation(i,o,r,!1))}circshift(t,n){const e=Matrix._toInteger(t),i=n&&n.dimension?n.dimension:"auto",r=function(t){const n=new Array(t.length);let i=(-e%t.length+t.length)%t.length;for(let e=0;e<t.length;e++)n[e]=t[i++],i===t.length&&(i=0);return n};return this.eachVector(r,i)}roll(t,n){return this.circshift(t,n)}reshape(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n),r=this.row_length*this.column_length,o=e*i;if(r!==o)throw"reshape error. (this_size !== new_size)->("+r+" !== "+o+")";const a=this.matrix_array;let s=0,u=0;const l=new Array(e);for(let t=0;t<e;t++){l[t]=new Array(i);for(let n=0;n<i;n++)l[t][n]=a[u][s],++s===this.column_length&&(s=0,u++)}return new Matrix(l)}fliplr(){return this.flip({dimension:"row"})}flipud(){return this.flip({dimension:"column"})}flip(t){const n=t&&t.dimension?t.dimension:"auto",e=function(t){const n=new Array(t.length);for(let e=0,i=t.length-1;e<t.length;e++,i--)n[e]=t[i];return n};return this.eachVector(e,n)}indexsort(t){const n=Matrix._toMatrix(t);if(n.isMatrix())throw"argsort error. argsort is not vector. ("+n.toOneLineString+")";let e=!1,i=null,r=null;if(n.isRow()){if(this.column_length!==n.column_length)throw"argsort error. (this_size !== new_size)->("+this.column_length+" !== "+n.column_length+")";e=!0,i=this.transpose().matrix_array,r=n.matrix_array[0]}if(n.isColumn()){if(this.row_length!==n.row_length)throw"argsort error. (this_size !== new_size)->("+this.row_length+" !== "+n.row_length+")";i=this.matrix_array,r=n.transpose().matrix_array[0]}const o=new Array(r.length);for(let t=0;t<r.length;t++)o[t]={index:r[t],data:i[t]};const a=function(t,n){return t.index.compareTo(n.index)};{const t=[],n=function(e,i,r,o){if(i<r){const a=Math.floor((i+r)/2);n(e,i,a,o),n(e,a+1,r,o);let s,u,l,c=0;for(s=i;s<=a;s++)t[c++]=e[s];for(s=a+1,u=0,l=i;s<=r&&u<c;)o(e[s],t[u])>=0?e[l++]=t[u++]:e[l++]=e[s++];for(;u<c;)e[l++]=t[u++]}return!0};n(o,0,o.length-1,a)}const s=new Array(r.length);for(let t=0;t<r.length;t++)s[t]=o[t].data;const u=new Matrix(s);return e?u.transpose():u}transpose(){const t=new Array(this.column_length);for(let n=0;n<this.column_length;n++){t[n]=new Array(this.row_length);for(let e=0;e<this.row_length;e++)t[n][e]=this.matrix_array[e][n]}return new Matrix(t)}ctranspose(){return this.transpose().conj()}T(){return this.ctranspose()}inner(t,n=1){return LinearAlgebra.inner(this,t,n)}lup(){return LinearAlgebra.lup(this)}lu(){return LinearAlgebra.lu(this)}linsolve(t){return LinearAlgebra.linsolve(this,t)}qr(){return LinearAlgebra.qr(this)}tridiagonalize(){return LinearAlgebra.tridiagonalize(this)}eig(){return LinearAlgebra.eig(this)}svd(){return LinearAlgebra.svd(this)}inv(){return LinearAlgebra.inv(this)}pinv(){return LinearAlgebra.pinv(this)}gammaln(){return Probability.gammaln(this)}gamma(){return Probability.gamma(this)}gammainc(t,n){return Probability.gammainc(this,t,n)}gampdf(t,n){return Probability.gampdf(this,t,n)}gamcdf(t,n){return Probability.gampdf(this,t,n)}gaminv(t,n){return Probability.gaminv(this,t,n)}beta(t){return Probability.beta(this,t)}betainc(t,n,e){return Probability.betainc(this,t,n,e)}betacdf(t,n){return Probability.betacdf(this,t,n)}betapdf(t,n){return Probability.betapdf(this,t,n)}betainv(t,n){return Probability.betainv(this,t,n)}factorial(){return Probability.factorial(this)}nchoosek(t){return Probability.nchoosek(this,t)}erf(){return Probability.erf(this)}erfc(){return Probability.erfc(this)}erfinv(){return Probability.erfinv(this)}erfcinv(){return Probability.erfcinv(this)}normpdf(t=0,n=1){return Probability.normpdf(this,t,n)}normcdf(t=0,n=1){return Probability.normcdf(this,t,n)}norminv(t=0,n=1){return Probability.norminv(this,t,n)}tpdf(t){return Probability.tpdf(this,t)}tcdf(t){return Probability.tcdf(this,t)}tinv(t){return Probability.tinv(this,t)}tdist(t,n){return Probability.tdist(this,t,n)}tinv2(t){return Probability.tinv2(this,t)}chi2pdf(t){return Probability.chi2pdf(this,t)}chi2cdf(t){return Probability.chi2cdf(this,t)}chi2inv(t){return Probability.chi2inv(this,t)}fpdf(t,n){return Probability.fpdf(this,t,n)}fcdf(t,n){return Probability.fcdf(this,t,n)}finv(t,n){return Probability.finv(this,t,n)}max(t){return Statistics.max(this,t)}min(t){return Statistics.min(this,t)}sum(t){return Statistics.sum(this,t)}mean(t){return Statistics.mean(this,t)}prod(t){return Statistics.prod(this,t)}geomean(t){return Statistics.geomean(this,t)}median(t){return Statistics.median(this,t)}mode(t){return Statistics.mode(this,t)}moment(t,n){return Statistics.moment(this,t,n)}var(t){return Statistics.var(this,t)}std(t){return Statistics.std(this,t)}mad(t,n){return Statistics.mad(this,t,n)}skewness(t){return Statistics.skewness(this,t)}cov(t,n){return Statistics.cov(this,t,n)}standardization(t){return Statistics.standardization(this,t)}corrcoef(t,n){return Statistics.corrcoef(this,t,n)}sort(t,n){return Statistics.sort(this,t,n)}fft(t){return Signal.fft(this,t)}ifft(t){return Signal.ifft(this,t)}powerfft(t){return Signal.powerfft(this,t)}dct(t){return Signal.dct(this,t)}idct(t){return Signal.idct(this,t)}fft2(){return Signal.fft2(this)}ifft2(){return Signal.ifft2(this)}dct2(){return Signal.dct2(this)}idct2(){return Signal.idct2(this)}conv(t){return Signal.conv(this,t)}xcorr(t){return Signal.xcorr(this,t)}static window(t,n,e){return Signal.window(t,n,e)}static hann(t,n){return Signal.hann(t,n)}static hamming(t,n){return Signal.hamming(t,n)}fftshift(t){return Signal.fftshift(this,t)}static get ONE(){return new Matrix(1)}static get TWO(){return new Matrix(2)}static get TEN(){return new Matrix(10)}static get ZERO(){return new Matrix(0)}static get MINUS_ONE(){return new Matrix(-1)}static get I(){return new Matrix(Complex.I)}static get PI(){return new Matrix(Math.PI)}static get QUARTER_PI(){return new Matrix(.25*Math.PI)}static get HALF_PI(){return new Matrix(.5*Math.PI)}static get TWO_PI(){return new Matrix(2*Math.PI)}static get E(){return new Matrix(Math.E)}static get LN2(){return new Matrix(Math.LN2)}static get LN10(){return new Matrix(Math.LN10)}static get LOG2E(){return new Matrix(Math.LOG2E)}static get LOG10E(){return new Matrix(Math.LOG10E)}static get SQRT2(){return new Matrix(Math.SQRT2)}static get SQRT1_2(){return new Matrix(Math.SQRT1_2)}static get HALF(){return new Matrix(.5)}static get POSITIVE_INFINITY(){return new Matrix(Number.POSITIVE_INFINITY)}static get NEGATIVE_INFINITY(){return new Matrix(Number.NEGATIVE_INFINITY)}static get NaN(){return new Matrix(Number.NaN)}}const random_class=new Random;class ComplexTool{static ToComplexFromString(t){let n=t.replace(/\s/g,"").toLowerCase();if(n=n.replace(/infinity|inf/g,"1e100000"),!/[ij]/.test(n))return{real:parseFloat(n),imag:0};let e,i=0,r=0;return(e=n.match(/[+-]?(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan))($|[+-])/))&&(i=parseFloat(e[0])),(e=n.match(/[+-]?(([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)|(nan))?[ij]/))&&(e=e[0].substring(0,e[0].length-1),r=/^[-+]$/.test(e)||0===e.length?"-"===e?-1:1:parseFloat(e)),{real:i,imag:r}}}class Complex{constructor(t){if(1!==arguments.length)throw"Complex Many arguments : "+arguments.length;{const n=t;if(n instanceof Complex)this._re=n._re,this._im=n._im;else if("number"==typeof n)this._re=n,this._im=0;else if("string"==typeof n){const t=ComplexTool.ToComplexFromString(n);this._re=t.real,this._im=t.imag}else if(n instanceof Array){if(2!==n.length)throw"Complex Unsupported argument "+arguments;this._re=n[0],this._im=n[1]}else if("boolean"==typeof n)this._re=n?1:0,this._im=0;else if("doubleValue"in n)this._re=n.doubleValue,this._im=0;else if("_re"in n&&"_im"in n)this._re=n._re,this._im=n._im;else{if(!(n instanceof Object))throw"Complex Unsupported argument "+arguments;{const t=ComplexTool.ToComplexFromString(n.toString());this._re=t.real,this._im=t.imag}}}}static create(t){return t instanceof Complex?t:new Complex(t)}static valueOf(t){return Complex.create(t)}static _toComplex(t){return t instanceof Complex?t:t instanceof Matrix?Matrix._toComplex(t):new Complex(t)}static _toDouble(t){if("number"==typeof t)return t;const n=Complex._toComplex(t);if(n.isReal())return n.real;throw"not support complex numbers.["+t+"]"}static _toInteger(t){return Math.trunc(Complex._toDouble(t))}get booleanValue(){return 0!==this._re||0!==this._im}get intValue(){return Math.trunc(this._re)}get doubleValue(){return this._re}clone(){return this}toString(){const t=function(t){let n=t.toPrecision(6);if(-1!==n.indexOf("."))n=(n=n.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e");else{if(/inf/i.test(n))return t===Number.POSITIVE_INFINITY?"Inf":"-Inf";if(/nan/i.test(n))return"NaN"}return n};return this.isReal()?t(this._re):0===this._re?t(this._im)+"i":this._im>=0||Number.isNaN(this._im)?t(this._re)+" + "+t(this._im)+"i":t(this._re)+" - "+t(-this._im)+"i"}static rand(){return new Complex(random_class.nextDouble())}static randn(){return new Complex(random_class.nextGaussian())}get real(){return this._re}get imag(){return this._im}get norm(){return 0===this._im?Math.abs(this._re):0===this._re?Math.abs(this._im):Math.sqrt(this._re*this._re+this._im*this._im)}get arg(){return 0===this._im?this._re>=0?0:Math.PI:0===this._re?Math.PI*(this._im>=0?.5:-.5):Math.atan2(this._im,this._re)}getDecimalPosition(){const t=function(t){if(!Number.isFinite(t))return 0;let n=t,e=0;for(let t=0;t<20&&!(Math.abs(n-Math.round(n))<=Number.EPSILON);t++)n*=10,e++;return e};return Math.max(t(this.real),t(this.imag))}sign(){return this.isFinite()?0===this._im?0===this._re?Complex.ZERO:new Complex(this._re>0?1:-1):this.div(this.norm):this.isNaN()||this._im===1/0||this._im===-1/0?Complex.NaN:this._re===1/0?Complex.ONE:Complex.MINUS_ONE}add(t){const n=new Complex(t);return n._re=this._re+n._re,n._im=this._im+n._im,n}sub(t){const n=new Complex(t);return n._re=this._re-n._re,n._im=this._im-n._im,n}mul(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=-this._im*n._im,n._im=0,n;{const t=this._re*n._re-this._im*n._im,e=this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}dot(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=this._im*n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=-this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}div(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re/n._re,n;if(0===this._re&&0===n._re)return n._re=this._im/n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=this._im*n._re-this._re*n._im,i=1/(n._re*n._re+n._im*n._im);return n._re=t*i,n._im=e*i,n}}mod(t){const n=new Complex(t);if(0!==this._im||0!==n._im)throw"calculation method is undefined.";let e=this._re-n._re*(0|this._re/n._re);return e<0&&(e+=n._re),n._re=e,n}inv(){return 0===this._im?new Complex(1/this._re):0===this._re?new Complex([0,-1/this._im]):Complex.ONE.div(this)}equals(t,n){const e=Complex._toComplex(t),i=n?Complex._toDouble(n):Number.EPSILON;return this._re===e._re&&this._im===e._im||Math.abs(this._re-e._re)<i&&Math.abs(this._im-e._im)<i}compareTo(t,n){const e=this,i=Complex._toComplex(t),r=n?Complex._toDouble(n):Number.EPSILON,o=e.real+e.imag,a=i.real+i.imag;return Math.abs(o-a)<=r?0:o>a?1:-1}max(t){const n=Complex._toComplex(t);return this.compareTo(n)>=0?this:n}min(t){const n=Complex._toComplex(t);return this.compareTo(n)<=0?this:n}clip(t,n){const e=Complex._toComplex(t),i=Complex._toComplex(n),r=e.compareTo(i);if(1===r)throw"clip(min, max) error. (min > max)->("+e+" > "+i+")";return 0===r?e:1===this.compareTo(i)?i:-1===this.compareTo(e)?e:this}isInteger(t){const n=t?Complex._toDouble(t):Number.EPSILON;return this.isReal()&&Math.abs(this._re-Math.trunc(this._re))<n}isComplexInteger(t){const n=t?Complex._toDouble(t):Number.EPSILON;return Math.abs(this._re-Math.trunc(this._re))<n&&Math.abs(this._im-Math.trunc(this._im))<n}isZero(t){const n=t?Complex._toDouble(t):Number.EPSILON;return Math.abs(this._re)<n&&Math.abs(this._im)<n}isOne(t){const n=t?Complex._toDouble(t):Number.EPSILON;return Math.abs(this._re-1)<n&&Math.abs(this._im)<n}isComplex(t){const n=t?Complex._toDouble(t):Number.EPSILON;return Math.abs(this._im)>=n}isReal(t){const n=t?Complex._toDouble(t):Number.EPSILON;return Math.abs(this._im)<n}isNaN(){return isNaN(this._re)||isNaN(this._im)}isPositive(){return 0<this._re}isNegative(){return 0>this._re}isNotNegative(){return 0<=this._re}isPositiveInfinity(){return this._re===Number.POSITIVE_INFINITY||this._im===Number.POSITIVE_INFINITY}isNegativeInfinity(){return this._re===Number.NEGATIVE_INFINITY||this._im===Number.NEGATIVE_INFINITY}isInfinite(){return this.isPositiveInfinity()||this.isNegativeInfinity()}isFinite(){return!this.isNaN()&&!this.isInfinite()}abs(){return new Complex(this.norm)}conj(){return 0===this._im?this:new Complex([this._re,-this._im])}negate(){return new Complex([-this._re,-this._im])}pow(t){const n=this,e=new Complex(t);if(e.isReal()){if(n.isReal()&&(n.isNotNegative()||e.isInteger()))return e._re=Math.pow(n._re,e._re),e;{const t=Math.pow(n.norm,e._re),i=n.arg*e._re;return e._re=t*Math.cos(i),e._im=t*Math.sin(i),e}}return e.mul(n.log()).exp()}square(){return 0===this._im?new Complex(this._re*this._re):this.mul(this)}sqrt(){if(this.isReal())return new Complex(this.isNotNegative()?Math.sqrt(this._re):[0,Math.sqrt(-this._re)]);const t=Math.sqrt(this.norm),n=.5*this.arg;return new Complex([t*Math.cos(n),t*Math.sin(n)])}rsqrt(){return this.isReal()?new Complex(this.isNotNegative()?1/Math.sqrt(this._re):[0,-1/Math.sqrt(-this._re)]):this.sqrt().inv()}log(){return new Complex(this.isReal()&&this.isNotNegative()?Math.log(this._re):[Math.log(this.norm),this.arg])}exp(){if(this.isReal())return new Complex(Math.exp(this._re));const t=Math.exp(this._re);return new Complex([t*Math.cos(this._im),t*Math.sin(this._im)])}sin(){if(this.isReal())return new Complex(Math.sin(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.sub(n).div([0,2])}cos(){if(this.isReal())return new Complex(Math.cos(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.add(n).div(2)}tan(){return this.isReal()?new Complex(Math.tan(this._re)):this.sin().div(this.cos())}atan(){return this.isReal()?new Complex(Math.atan(this._re)):Complex.I.div(Complex.TWO).mul(Complex.I.add(this).div(Complex.I.sub(this)).log())}atan2(t){if(0===arguments.length)return new Complex(this.arg);const n=this,e=Complex._toComplex(t);if(n.isReal()&&e.isReal())return new Complex(Math.atan2(n._re,e._re));throw"calculation method is undefined."}sinc(){if(this.isReal()){if(0===this._re)return Complex.ONE;const t=Math.PI*this._re;return new Complex(Math.sin(t)/t)}const t=this.mul(Complex.PI);return new Complex(t.sin().div(t))}floor(){return new Complex([Math.floor(this._re),Math.floor(this._im)])}ceil(){return new Complex([Math.ceil(this._re),Math.ceil(this._im)])}round(){return new Complex([Math.round(this._re),Math.round(this._im)])}fix(){return new Complex([Math.trunc(this._re),Math.trunc(this._im)])}fract(){return new Complex([this._re-Math.floor(this._re),this._im-Math.floor(this._im)])}static get ONE(){return DEFINE$4.ONE}static get TWO(){return DEFINE$4.TWO}static get TEN(){return DEFINE$4.TEN}static get ZERO(){return DEFINE$4.ZERO}static get MINUS_ONE(){return DEFINE$4.MINUS_ONE}static get I(){return DEFINE$4.I}static get PI(){return DEFINE$4.PI}static get QUARTER_PI(){return DEFINE$4.QUARTER_PI}static get HALF_PI(){return DEFINE$4.HALF_PI}static get TWO_PI(){return DEFINE$4.TWO_PI}static get E(){return DEFINE$4.E}static get LN2(){return DEFINE$4.LN2}static get LN10(){return DEFINE$4.LN10}static get LOG2E(){return DEFINE$4.LOG2E}static get LOG10E(){return DEFINE$4.LOG10E}static get SQRT2(){return DEFINE$4.SQRT2}static get SQRT1_2(){return DEFINE$4.SQRT1_2}static get HALF(){return DEFINE$4.HALF}static get POSITIVE_INFINITY(){return DEFINE$4.POSITIVE_INFINITY}static get NEGATIVE_INFINITY(){return DEFINE$4.NEGATIVE_INFINITY}static get NaN(){return DEFINE$4.NaN}}const DEFINE$4={ZERO:new Complex(0),ONE:new Complex(1),TWO:new Complex(2),TEN:new Complex(10),MINUS_ONE:new Complex(-1),I:new Complex([0,1]),PI:new Complex(Math.PI),QUARTER_PI:new Complex(.25*Math.PI),HALF_PI:new Complex(.5*Math.PI),TWO_PI:new Complex(2*Math.PI),E:new Complex(Math.E),LN2:new Complex(Math.LN2),LN10:new Complex(Math.LN10),LOG2E:new Complex(Math.LOG2E),LOG10E:new Complex(Math.LOG10E),SQRT2:new Complex(Math.SQRT2),SQRT1_2:new Complex(Math.SQRT1_2),HALF:new Complex(.5),POSITIVE_INFINITY:new Complex(Number.POSITIVE_INFINITY),NEGATIVE_INFINITY:new Complex(Number.NEGATIVE_INFINITY),NaN:new Complex(Number.NaN)};class MultipleRegressionAnalysis{static runMultipleRegressionAnalysis(t){let n=Matrix.create(t.samples),e=Matrix.create(t.target);const i={correction:1};t.is_standardised&&(n=n.standardization(),e=e.standardization());const r=Matrix.create(n.width),o=Matrix.create(n.height),a=n.cov(i),s=a.rcond();if(s<=1e-10)return console.log("Analysis failed due to highly correlated explanatory variables.(rcond : "+s+")"),null;const u=[],l=r.intValue;for(let t=0;t<l;t++)u[t]=[n.getMatrix(":",t).cov(e,i)];const c=Matrix.create(u),h=a.inv().mul(c),g=e.mean().sub(n.mean().mul(h)),f=n.mul(h).add(g),m=f.var(i),_=e.var(i),I=f.corrcoef(e,i),N=m.div(_),x=r,d=f.sub(e.mean()).dotpow(2).sum(),E=d.div(x),M=o.sub(r).sub(1),b=f.sub(e).dotpow(2).sum(),w=b.div(M),T=o.sub(1),p=e.sub(e.mean()).dotpow(2).sum(),B=p.div(T),D=w,C=D.sqrt(),y=E.div(w),F=Matrix.ONE.sub(y.fcdf(x,M)),A=Matrix.ONE.sub(w.div(B)),S=o.mul(b.div(o).mul(2*Math.PI).log().add(1)).add(r.add(2).mul(2)),R=a.dotmul(o).inv(),O={coefficient:Matrix.ZERO,standard_error:Matrix.ZERO,t_stat:Matrix.ZERO,p_value:Matrix.ZERO,lower_95:Matrix.ZERO,upper_95:Matrix.ZERO},P=[];for(let t=0;t<l;t++)P[t]={coefficient:Matrix.ZERO,standard_error:Matrix.ZERO,t_stat:Matrix.ZERO,p_value:Matrix.ZERO,lower_95:Matrix.ZERO,upper_95:Matrix.ZERO};O.coefficient=g;for(let t=0;t<l;t++)P[t].coefficient=new Matrix(h.getComplex(t));{const t=r.intValue;let e=o.inv();for(let i=0;i<t;i++)for(let r=0;r<t;r++)e=e.add(n.getMatrix(":",i).mean().mul(n.getMatrix(":",r).mean()).mul(R.getMatrix(i,r)));O.standard_error=e.mul(D).sqrt();for(let t=0;t<l;t++)P[t].standard_error=R.getMatrix(t,t).mul(D).sqrt()}{const t=function(t){t.t_stat=t.coefficient.div(t.standard_error),t.p_value=t.t_stat.tdist(M,2);const n=new Matrix(1-.95);t.lower_95=t.coefficient.sub(n.tinv2(M).mul(t.standard_error)),t.upper_95=t.coefficient.add(n.tinv2(M).mul(t.standard_error))};t(O);for(let n=0;n<l;n++)t(P[n])}let v=null;{const t={coefficient:O.coefficient.doubleValue,standard_error:O.standard_error.doubleValue,t_stat:O.t_stat.doubleValue,p_value:O.p_value.doubleValue,lower_95:O.lower_95.doubleValue,upper_95:O.upper_95.doubleValue},n=[];for(let t=0;t<l;t++)n.push({coefficient:P[t].coefficient.doubleValue,standard_error:P[t].standard_error.doubleValue,t_stat:P[t].t_stat.doubleValue,p_value:P[t].p_value.doubleValue,lower_95:P[t].lower_95.doubleValue,upper_95:P[t].upper_95.doubleValue});v={intercept:t,parameters:n}}return{q:r.doubleValue,n:o.doubleValue,predicted_values:f.getNumberMatrixArray(),sY:m.doubleValue,sy:_.doubleValue,multiple_R:I.doubleValue,R_square:N.doubleValue,adjusted_R_square:A.doubleValue,ANOVA:{regression:{df:x.doubleValue,SS:d.doubleValue,MS:E.doubleValue},residual:{df:M.doubleValue,SS:b.doubleValue,MS:w.doubleValue},total:{df:T.doubleValue,SS:p.doubleValue,MS:B.doubleValue},F:y.doubleValue,significance_F:F.doubleValue},Ve:D.doubleValue,standard_error:C.doubleValue,AIC:S.doubleValue,regression_table:v}}}class DataAnalysis{static runMultipleRegressionAnalysis(t){return MultipleRegressionAnalysis.runMultipleRegressionAnalysis(t)}}class konpeito{static get BigInteger(){return BigInteger}static get BigDecimal(){return BigDecimal}static get RoundingMode(){return RoundingMode}static get MathContext(){return MathContext}static get Fraction(){return Fraction}static get Complex(){return Complex}static get Matrix(){return Matrix}static get Random(){return Random}static get DataAnalysis(){return DataAnalysis}}export default konpeito;
