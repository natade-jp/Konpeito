/*!
 * SenkoJS
 * https://github.com/natade-jp/SenkoJS
 * Copyright 2013-2019 natade
 *
 * The MIT license.
 * https://opensource.org/licenses/MIT
 */
class RandomTool{static unsigned32(t){return t<0?2147483648+(2147483647&t):t}static multiplication32(t,n){let e=(65535&t)*(65535&n),i=RandomTool.unsigned32(e);return e=(65535&t)*(n>>>16),i=RandomTool.unsigned32(i+((65535&e)<<16)),e=(t>>>16)*(65535&n),4294967295&(i=RandomTool.unsigned32(i+((65535&e)<<16)))}}class Random{constructor(t){this.x=[];for(let t=0;t<521;t++)this.x[t]=0;if(arguments.length>=1)this.setSeed(t);else{const t=(new Date).getTime()+Random.seedUniquifier&4294967295;Random.seedUniquifier=Random.seedUniquifier+1&4294967295,this.setSeed(t)}}_rnd521(){const t=this.x;for(let n=0;n<32;n++)t[n]^=t[n+489];for(let n=32;n<521;n++)t[n]^=t[n-32]}setSeed(t){let n=0;const e=this.x;for(let i=0;i<=16;i++){for(let e=0;e<32;e++)n=(n>>>1)+((t=RandomTool.multiplication32(t,1566083941)+1)<0?2147483648:0);e[i]=n}for(let t=16;t<521;t++)n=16===t?t:t-17,e[t]=e[n]<<23&4294967295^e[t-16]>>>9^e[t-1];for(let t=0;t<4;t++)this._rnd521();this.xi=0,this.haveNextNextGaussian=!1,this.nextNextGaussian=0}genrand_int32(){521===this.xi&&(this._rnd521(),this.xi=0);const t=RandomTool.unsigned32(this.x[this.xi]);return this.xi=this.xi+1,t}next(t){return 0===t?0:32===t?this.genrand_int32():t<32?this.genrand_int32()>>>32-t:63===t?2147483648*this.next(32)+this.next(32):64===t?4294967296*this.next(32)+this.next(32):t<64?this.genrand_int32()*(1<<t-32)+(this.genrand_int32()>>>64-t):void 0}nextBytes(t){const n=new Array(t);for(let t=0;t<n.length;t++)n[t]=this.next(8);return n}nextInt(){if(1===arguments.length){let t,n;const e=arguments[0];do{n=(t=RandomTool.unsigned32(this.genrand_int32()))%e}while(t-n+e>4294967296);return n}return 4294967295&this.next(32)}nextLong(){return this.next(64)}nextBoolean(){return 0!==this.next(1)}nextFloat(){return this.next(24)/16777216}nextDouble(){return(134217728*this.next(26)+this.next(27))/9007199254740992}nextGaussian(){if(this.haveNextNextGaussian)return this.haveNextNextGaussian=!1,this.nextNextGaussian;const t=Math.sqrt(-2*Math.log(this.nextDouble())),n=2*Math.PI*this.nextDouble(),e=t*Math.sin(n);return this.nextNextGaussian=t*Math.cos(n),this.haveNextNextGaussian=!0,e}}Random.seedUniquifier=2271560481;class IntegerTool{static string_to_binary_number(t,n){const e=Math.floor(Math.log(1073741823)/Math.log(n)),i=Math.round(Math.pow(n,e));let r=[];const o=[],s=Math.ceil(t.length/e);let a=t.length;for(let i=0;i<s;i++)a-=e,r[i]=a>=0?parseInt(t.substring(a,a+e),n):parseInt(t.substring(0,a+e),n);for(n=i;0!==r.length;){let t=0;for(let e=r.length-1;e>=0;e--){const i=r[e]+t*n;r[e]=i>>>1,t=1&i}o[o.length]=t,0===r[r.length-1]&&r.pop()}r=[];for(let t=0;t<o.length;t++)r[t>>>4]|=o[t]<<(15&t);return r}static number_to_binary_number(t){if(t>4294967295)return IntegerTool.string_to_binary_number(t.toFixed(),10);const n=[];for(;0!==t;)n[n.length]=1&t,t>>>=1;t=[];for(let e=0;e<n.length;e++)t[e>>>4]|=n[e]<<(15&e);return t}static binary_number_to_string(t,n){const e=function(t,e,i){const r=t.length;let o=0;for(let s=0;s<r;s++)i[s]=t[s]+(e.length>=s+1?e[s]:0)+o,i[s]>=n?(o=1,i[s]-=n):o=0;1===o&&(i[r]=1)},i=[0],r=[1];for(let n=0;n<t.length;n++)for(let o=0;o<16;o++)t[n]>>>o&1&&e(r,i,i),e(r,r,r);return i}static ToBigIntegerFromString(t,n){let e=t.replace(/\s/g,"").toLowerCase(),i=e.match(/^[-+]+/),r=[],o=1;return null!==i&&(i=i[0],e=e.substring(i.length,e.length),-1!==i.indexOf("-")&&(o=-1)),1===(r=n?IntegerTool.string_to_binary_number(e,n):/^0x/.test(e)?IntegerTool.string_to_binary_number(e.substring(2,e.length),16):/^0b/.test(e)?IntegerTool.string_to_binary_number(e.substring(2,e.length),2):/^0/.test(e)?IntegerTool.string_to_binary_number(e.substring(1,e.length),8):IntegerTool.string_to_binary_number(e,10)).length&&0===r[0]&&(r=[],o=0),{element:r,sign:o}}}class BigInteger{constructor(t){if(this.element=[],this.sign=0,0===arguments.length)this.element=[],this.sign=0;else{if(1!==arguments.length)throw"BigInteger Unsupported argument "+t;if(this.sign=1,t instanceof BigInteger){for(let n=0;n<t.element.length;n++)this.element[n]=t.element[n];this.sign=arguments[0].sign}else if("number"==typeof t||t instanceof Number){let n=t;n<0&&(this.sign=-1,n=-n),this.element=IntegerTool.number_to_binary_number(n)}else if("string"==typeof t||t instanceof String){const n=IntegerTool.ToBigIntegerFromString(t);this.element=n.element,this.sign=n.sign}else if(t instanceof Array){const n=IntegerTool.ToBigIntegerFromString(t[0],t[1]);this.element=n.element,this.sign=n.sign}else{if(!(t instanceof Object&&t.toString))throw"BigInteger Unsupported argument "+t;{const n=IntegerTool.ToBigIntegerFromString(t.toString());this.element=n.element,this.sign=n.sign}}}}static createConstBigInteger(t){return t instanceof BigInteger?t:new BigInteger(t)}static createRandomBigInteger(t,n){if(!(n instanceof Random))throw"createRandomBigInteger";const e=new BigInteger;e.sign=1;const i=1+(t-1>>4);let r;if(0!==t){for(let t=0,o=0;t<i;t++)0===o?(r=n.nextInt(),e.element[t]=65535&r,o=1):(e.element[t]=r>>>16&65535,o=0);return t%16!=0&&(e.element[e.element.length-1]&=(1<<t%16)-1),e._memory_reduction(),e}}static probablePrime(t,n,e=100){for(;;){const i=BigInteger.createRandomBigInteger(t,n);if(i.isProbablePrime(e))return i}}equals(t){const n=BigInteger.createConstBigInteger(t);if(this.signum()!==n.signum())return!1;if(this.element.length!==n.element.length)return!1;for(let t=0;t<n.element.length;t++)if(this.element[t]!==n.element[t])return!1;return!0}toString(t){0===arguments.length&&(t=10);const n=Math.floor(Math.log(1073741823)/Math.log(t)),e=Math.round(Math.pow(t,n));let i,r=[];for(i=0;i<n;i++)r[i]="0";r=r.join("");const o=IntegerTool.binary_number_to_string(this.element,e),s=[];let a="";for(this.signum()<0&&(s[s.length]="-"),i=o.length-1;i>=0;i--)a=o[i].toString(t),i<o.length-1&&(s[s.length]=r.substring(0,n-a.length)),s[s.length]=a;return s.join("")}getShort(t){return t<0||this.element.length<=t?0:this.element[t]}get intValue(){let t=this.getShort(0)+(this.getShort(1)<<16);return(t&=4294967295)>0&&this.sign<0&&(t=-t),t}get longValue(){let t=0;for(let n=3;n>=0;n--)t*=65536,t+=this.getShort(n);return this.sign<0&&(t=-t),t}get doubleValue(){return parseFloat(this.toString())}clone(){const t=new BigInteger;return t.element=this.element.slice(0),t.sign=this.sign,t}isNegative(){return this.sign<0}isZero(){return this._memory_reduction(),0===this.sign}isPositive(){return this.sign>0}getLowestSetBit(){for(let t=0;t<this.element.length;t++)if(0!==this.element[t]){const n=this.element[t];for(let e=0;e<16;e++)if(0!=(n>>>e&1))return 16*t+e}return-1}bitLength(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t]){const n=this.element[t];for(let e=15;e>=0;e--)if(0!=(n>>>e&1))return 16*t+e+1}return 0}bitCount(){let t;const n=(t=this.sign>=0?this:this.add(new BigInteger(1))).bitLength();let e=0,i=0;for(let r=0;e<n;r++){const o=t.element[r];for(let t=0;t<16&&e<n;t++,e++)0!=(o>>>t&1)&&(i+=1)}return i}getTwosComplement(t){const n=this.clone();if(n.sign>=0)return n;{n.sign=1,0===arguments.length&&(t=n.bitLength());const e=n.element;for(let t=0;t<e.length;t++)e[t]^=65535;return t%16!=0&&(e[e.length-1]&=(1<<t%16)-1),n._add(new BigInteger(1)),n}}_and(t){let n=this,e=BigInteger.createConstBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i&r}return 0===this.bitLength()&&(this.element=[],this.sign=0),1===i||1===r?this.sign=1:-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}and(t){return this.clone()._and(t)}_or(t){let n=this,e=BigInteger.createConstBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i|r}return this.sign=-1===i||-1===r?-1:Math.max(i,r),-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}or(t){return this.clone()._or(t)}_xor(t){let n=this,e=BigInteger.createConstBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i^r}return this.sign=0!==i&&i!==r?-1:1,-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}xor(t){return this.clone()._xor(t)}_not(){return this._add(new BigInteger(1))._negate()}not(){return this.clone()._not()}_andNot(t){const n=BigInteger.createConstBigInteger(t);return this._and(n.not())}andNot(t){return this.clone()._andNot(t)}_memory_allocation(t){const n=this.element.length<<4;if(n<t){const e=1+((t-n-1&4294967280)>>>4);for(let t=0;t<e;t++)this.element[this.element.length]=0}}_memory_reduction(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t])return void(t<this.element.length-1&&this.element.splice(t+1,this.element.length-t-1));this.sign=0,this.element=[]}gcd(t){let n,e=this,i=BigInteger.createConstBigInteger(t);for(;0!==i.signum();)n=e.remainder(i),e=i,i=n;return e}extgcd(t){const n=BigInteger.createConstBigInteger(t),e=new BigInteger(1),i=new BigInteger(0);let r,o,s,a,l=this,c=n,h=e,u=i,g=i,f=e;for(;0!==c.signum();){const t=l.divideAndRemainder(c);o=t[0],r=t[1],s=h.subtract(o.multiply(u)),a=g.subtract(o.multiply(f)),h=u,u=s,g=f,f=a,l=c,c=r}return[h,g,l]}_abs(){return this.sign*=this.sign,this}abs(){return this.clone()._abs()}_negate(){return this.sign*=-1,this}negate(){return this.clone()._negate()}signum(){return 0===this.element.length?0:this.sign}compareToAbs(t){const n=BigInteger.createConstBigInteger(t);if(this.element.length<n.element.length)return-1;if(this.element.length>n.element.length)return 1;for(let t=this.element.length-1;t>=0;t--)if(this.element[t]!==n.element[t]){const e=this.element[t]-n.element[t];return 0===e?0:e>0?1:-1}return 0}compareTo(t){const n=BigInteger.createConstBigInteger(t);return this.signum()!==n.signum()?this.sign>n.sign?1:-1:0===this.signum()?0:this.compareToAbs(n)*this.sign}max(t){const n=BigInteger.createConstBigInteger(t);return this.compareTo(n)>=0?this.clone():n.clone()}min(t){const n=BigInteger.createConstBigInteger(t);return this.compareTo(n)>=0?n.clone():this.clone()}_shift(t){if(0===t)return this;const n=this.element;if(1===t){let t=n.length-1;for(0!=(32768&n[t])&&(n[n.length]=1);t>=0;t--)n[t]<<=1,n[t]&=65535,t>0&&0!=(32768&n[t-1])&&(n[t]+=1)}else if(-1===t){for(let t=0;t<n.length;t++)n[t]>>>=1,t<n.length-1&&0!=(1&n[t+1])&&(n[t]|=32768);0===n[n.length-1]&&n.pop()}else{if(t>=16){const e=t>>>4;for(let t=n.length-1;t>=0;t--)n[t+e]=n[t];for(let t=e-1;t>=0;t--)n[t]=0;t&=15}else if(t<=-16){const e=-t>>>4;n.splice(0,e),t+=e<<4}if(0!==t)if(0<t){let e=0;for(let i=0;i<n.length;i++)n[i]=(n[i]<<t)+e,n[i]>65535?(e=n[i]>>>16,n[i]&=65535):e=0;0!==e&&(n[n.length]=e)}else{t=-t;for(let e=0;e<n.length;e++)e!==n.length-1?(n[e]+=n[e+1]<<16,n[e]>>>=t,n[e]&=65535):n[e]>>>=t;0===n[n.length-1]&&n.pop()}}return this}shift(t){return this.clone()._shift(t)}shiftLeft(t){return this.shift(t)}shiftRight(t){return this.shift(-t)}_add(t){const n=this,e=BigInteger.createConstBigInteger(t);let i=n.element,r=e.element;if(n.sign===e.sign){this._memory_allocation(r.length<<4);let t=0;for(let n=0;n<i.length;n++)i[n]+=(r.length>=n+1?r[n]:0)+t,i[n]>65535?(t=1,i[n]&=65535):t=0;0!==t&&(i[i.length]=t)}else{const t=n.compareToAbs(e);if(0===t)return this.element=[],this.sign=1,this;if(-1===t){this.sign=e.sign;const t=i;i=r.slice(0),r=t}let o=0;for(let t=0;t<i.length;t++)i[t]-=(r.length>=t+1?r[t]:0)+o,i[t]<0?(i[t]+=65536,o=1):o=0;this.element=i,this._memory_reduction()}return this}add(t){return this.clone()._add(t)}_subtract(t){const n=BigInteger.createConstBigInteger(t),e=n.sign,i=this._add(n._negate());return n.sign=e,i}subtract(t){return this.clone()._subtract(t)}sub(t){return this.subtract(t)}_multiply(t){const n=this.multiply(t);return this.element=n.element,this.sign=n.sign,this}multiply(t){const n=BigInteger.createConstBigInteger(t),e=new BigInteger,i=new BigInteger,r=n,o=this.element,s=r.element,a=e.element;for(let t=0;t<o.length;t++){i.element=[];const n=i.element;let r=0;for(let e=0;e<s.length;e++)n[e]=o[t]*s[e]+r,n[e]>65535?(r=n[e]>>>16,n[e]&=65535):r=0;0!==r&&(n[n.length]=r);for(let e=n.length-1;e>=0;e--)n[e+t]=n[e];for(let e=t-1;e>=0;e--)n[e]=0;r=0,e._memory_allocation(n.length<<4);for(let e=t;e<a.length;e++)a[e]+=(n.length>=e+1?n[e]:0)+r,a[e]>65535?(r=1,a[e]&=65535):r=0;0!==r&&(a[a.length]=r)}return e.sign=this.sign*n.sign,e}mul(t){return this.multiply(t)}_divideAndRemainder(t){const n=BigInteger.createConstBigInteger(t),e=[];if(0===n.signum())return e[0]=1/0,e[1]=NaN,e;const i=this.compareToAbs(n);if(i<0)return e[0]=new BigInteger(0),e[1]=this.clone(),e;if(0===i)return e[0]=new BigInteger(1),e[0].sign=this.sign*n.sign,e[1]=new BigInteger(0),e;const r=new BigInteger(1),o=this.bitLength()-n.bitLength(),s=this.clone()._abs(),a=n.shift(o)._abs(),l=new BigInteger;for(let t=0;t<=o&&(s.compareToAbs(a)>=0&&(s._subtract(a),l._add(r)),t!==o);t++)a._shift(-1),l._shift(1);return e[0]=l,e[0].sign=this.sign*n.sign,e[1]=s,e[1].sign=this.sign,e}divideAndRemainder(t){return this.clone()._divideAndRemainder(t)}_divide(t){return this._divideAndRemainder(t)[0]}divide(t){return this.clone()._divide(t)}div(t){return this.divide(t)}_remainder(t){return this._divideAndRemainder(t)[1]}remainder(t){return this.clone()._remainder(t)}rem(t){return this.remainder(t)}_mod(t){const n=BigInteger.createConstBigInteger(t);if(n.signum()<0)return null;const e=this._divideAndRemainder(n);return e[1]instanceof BigInteger?e[1].signum()>=0?e[1]:e[1]._add(n):null}mod(t){return this.clone()._mod(t)}_setBit(t){return this._memory_allocation(t+1),this.element[t>>>4]|=1<<(15&t),this}setBit(t){return this.clone()._setBit(t)}_flipBit(t){return this._memory_allocation(t+1),this.element[t>>>4]^=1<<(15&t),this}flipBit(t){return this.clone()._flipBit(t)}clearBit(t){const n=this.clone();return n.element[t>>>4]&=~(1<<(15&t)),n._memory_reduction(),n}testBit(t){return 0!=(this.element[t>>>4]>>>(15&t)&1)}pow(t){const n=new BigInteger(t);let e=new BigInteger(this),i=new BigInteger(1);for(;0!==n.element.length;)0!=(1&n.element[0])&&(i=i.multiply(e)),e=e.multiply(e),n._shift(-1);return i}modPow(t,n){const e=BigInteger.createConstBigInteger(n);let i=new BigInteger(this),r=new BigInteger(1);const o=new BigInteger(t);for(;0!==o.element.length;)0!=(1&o.element[0])&&(r=r.multiply(i).mod(e)),i=i.multiply(i).mod(e),o._shift(-1);return r}modInverse(t){const n=BigInteger.createConstBigInteger(t),e=this.extgcd(t),i=new BigInteger(1);return 0!==e[2].compareTo(i)?null:e[0]._add(n)._mod(n)}isProbablePrime(t){const n=this.element;if(0===n.length||1===n.length&&n[0]<=2)return!0;if(0==(1&n[0])||t<=0)return!1;if(void 0===Random)return!1;t>>=1;const e=new BigInteger(0),i=new BigInteger(1),r=this,o=r.bitLength(),s=r.subtract(i),a=s.getLowestSetBit(),l=s.shift(-a),c=new Random;let h,u;for(let n=0;n<t;n++){do{h=BigInteger.createRandomBigInteger(o,c)}while(0===h.compareTo(e)||-1!==h.compareTo(r));if(0!==(h=h.modPow(l,r)).compareTo(i)){u=!0;for(let t=0;t<=a;t++){if(0===h.compareTo(s)){u=!1;break}t<a&&(h=h.multiply(h)._mod(r))}if(u)return!1}}return!0}nextProbablePrime(){const t=this.clone();for(;;)if(t._add(BigInteger.ONE),t.isProbablePrime(100))break;return t}static valueOf(t){return new BigInteger(t)}}BigInteger.ONE=new BigInteger(1),BigInteger.TWO=new BigInteger(2),BigInteger.TEN=new BigInteger(10),BigInteger.ZERO=new BigInteger(0);class DecimalTool{static ToBigDecimalFromString(t){let n,e=0,i=t.replace(/\s/g,"").toLowerCase(),r="";return null!==(n=i.match(/^[+-]+/))&&(n=n[0],i=i.substr(n.length),-1!==n.indexOf("-")&&(r+="-")),null!==(n=i.match(/^[0-9]+/))&&(n=n[0],i=i.substr(n.length),r+=n),null!==(n=i.match(/^\.[0-9]+/))&&(n=n[0],i=i.substr(n.length),e+=(n=n.substr(1)).length,r+=n),null!==(n=i.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),e-=parseInt(n,10)),{scale:e,integer:new BigInteger([r,10])}}}class BigDecimal{constructor(t){this._scale=0,this.default_context=BigDecimal.DEFAULT_CONTEXT;let n=null;if(arguments.length>1)throw"BigDecimal Unsupported argument["+arguments.length+"]";if(t instanceof BigDecimal)this.integer=t.integer.clone(),this._scale=t._scale,this.int_string=t.int_string,this.default_context=t.default_context;else if(t instanceof BigInteger)this.integer=t.clone();else if("number"==typeof t||t instanceof Number)if(t===Math.floor(t))this.integer=new BigInteger(t);else{let n=0,e=t;for(;;)if(e*=10,n+=1,e===Math.floor(e))break;this._scale=n,this.integer=new BigInteger(e)}else if(t instanceof Array){if(t.length>=1)if("string"==typeof t[0]||t[0]instanceof String){const n=DecimalTool.ToBigDecimalFromString(t[0]);this.integer=n.integer,this._scale=n.scale}else this.integer=new BigInteger(t[0]);t.length>=2&&("number"==typeof t[1]||t[1]instanceof Number?(this._scale=t[1],t.length>=3&&(this.default_context=t[2]),t.length>=4&&(n=t[3])):(t.length>=2&&(this.default_context=t[1]),t.length>=3&&(n=t[2])))}else if("string"==typeof t||t instanceof String){const n=DecimalTool.ToBigDecimalFromString(t);this.integer=n.integer,this._scale=n.scale}else if(t instanceof Object&&void 0!==t.scale&&void 0!==t.default_context)this.integer=new BigInteger(t.integer),t.scale&&(this._scale=t.scale),t.default_context&&(this.default_context=t.default_context),t.context&&(n=t.context);else{if(!(t instanceof Object&&void 0!==t.toString))throw"BigDecimal Unsupported argument "+arguments;{const n=DecimalTool.ToBigDecimalFromString(t.toString());this.integer=n.integer,this._scale=n.scale}}if(n){const t=this.round(n);this.integer=t.integer,this._scale=t._scale,delete this.int_string}if(!(this.integer instanceof BigInteger&&this.default_context instanceof MathContext))throw"BigDecimal Unsupported argument "+arguments}static createConstBigDecimal(t){return t instanceof BigDecimal?t:new BigDecimal(t)}_getUnsignedIntegerString(){return void 0===this.int_string&&(this.int_string=this.integer.toString(10).replace(/^-/,"")),this.int_string}clone(){return new BigDecimal(this)}scale(){return this._scale}signum(){return this.integer.signum()}precision(){return this._getUnsignedIntegerString().length}unscaledValue(){return new BigInteger(this.integer)}toScientificNotation(t){const n=this._getUnsignedIntegerString();let e=this.scale();const i=[];let r,o;if(-1===this.signum()&&(i[i.length]="-"),(e=-t-e)>=0)for(i[i.length]=n,r=0;r<e;r++)i[i.length]="0";else if(0<(o=this.precision()+e))i[i.length]=n.substring(0,o),i[i.length]=".",i[i.length]=n.substring(o,n.length);else{for(o=-o,i[i.length]="0.",r=0;r<o;r++)i[i.length]="0";i[i.length]=n}return i[i.length]="E",t>=0&&(i[i.length]="+"),i[i.length]=t,i.join("")}toString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(t)}toEngineeringString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(3*Math.floor(t/3))}toPlainString(){return 0===this.scale()?this.signum()<0?"-"+this._getUnsignedIntegerString():this._getUnsignedIntegerString():this.toScientificNotation(0).match(/^[^E]*/)[0]}ulp(){return new BigDecimal([BigInteger.ONE,this.scale(),this.default_context])}setScale(t,n=RoundingMode.UNNECESSARY,e){if(this.scale()===t)return this.clone();const i=void 0!==e?e:this.default_context;let r=this._getUnsignedIntegerString();const o=this.signum(),s=o>=0?"":"-",a=t-this.scale();if(0<=a){let n;for(n=0;n<a;n++)r+="0";return new BigDecimal([new BigInteger(s+r),t,i])}const l=r.length+a,c=l+1;if(l<=0){const e=(o+n.getAddNumber(o))/10;return new BigDecimal([new BigInteger(e),t,i])}{const e=r.match(/0+$/),o=null!==e?e[0].length:0;if(o+a>=0||n===RoundingMode.DOWN)return new BigDecimal([new BigInteger(s+r.substring(0,l)),t,i])}{const e=(r=r.substring(0,c)).length>1?2:1,a=parseInt(r.substring(r.length-e,r.length))*o,l=new BigInteger(s+r),h=new BigInteger(n.getAddNumber(a));return r=l.add(h).toString(),new BigDecimal([new BigInteger(r.substring(0,r.length-1)),t,i])}}round(t){if(!(t instanceof MathContext))throw"not MathContext";const n=t.getPrecision(),e=n-this.precision();if(0===e||0===n)return this.clone();const i=this.setScale(this.scale()+e,t.getRoundingMode(),t);if(e>0)return i;if(i.precision()===t.getPrecision())return i;const r=i.integer.signum()>=0?"":"-",o=i._getUnsignedIntegerString(),s=r+o.substring(0,o.length-1);return new BigDecimal([new BigInteger(s),i.scale()-1,t])}abs(t){const n=this.clone();return n.integer=n.integer.abs(),void 0===t?n:n.round(t)}plus(t){const n=this.clone();return void 0===t?n:n.round(t)}negate(t){const n=this.clone();return n.integer=n.integer.negate(),void 0===t?n:n.round(t)}compareTo(t){const n=this,e=BigDecimal.createConstBigDecimal(t);{const t=n.signum(),i=e.signum();if(0===t&&t===i)return 0;if(0===t)return-i;if(0===i)return t}if(n._scale===e._scale)return n.integer.compareTo(e.integer);if(n._scale>e._scale){const t=e.setScale(n._scale);return n.integer.compareTo(t.integer)}{const t=n.setScale(e._scale);return t.integer.compareTo(e.integer)}}equals(t){const n=BigDecimal.createConstBigDecimal(t);return this._scale===n._scale&&this.integer.equals(n.integer)}min(t){const n=BigDecimal.createConstBigDecimal(t);return this.compareTo(n)<=0?this.clone():n.clone()}max(t){const n=BigDecimal.createConstBigDecimal(t);return this.compareTo(n)>=0?this.clone():n.clone()}scaleByPowerOfTen(t){const n=this.clone();return n._scale=this.scale()-t,n}movePointLeft(t){let n=this.scaleByPowerOfTen(-t);return n=n.setScale(Math.max(this.scale()+t,0))}movePointRight(t){let n=this.scaleByPowerOfTen(t);return n=n.setScale(Math.max(this.scale()-t,0))}stripTrailingZeros(){const t=this.signum()>=0?"":"-",n=this.integer.toString(10).replace(/^-/,""),e=n.match(/0+$/);let i=null!==e?e[0].length:0;i===n.length&&(i=n.length-1);const r=this.scale()-i;return new BigDecimal([new BigInteger(t+n.substring(0,n.length-i)),r,this.default_context])}add(t,n){const e=BigDecimal.createConstBigDecimal(t),i=n||e.default_context,r=this,o=e,s=Math.max(r._scale,o._scale);if(r._scale===o._scale)return new BigDecimal([r.integer.add(o.integer),s,i,i]);if(r._scale>o._scale){const t=o.setScale(r._scale);return new BigDecimal([r.integer.add(t.integer),s,i,i])}{const t=r.setScale(o._scale);return new BigDecimal([t.integer.add(o.integer),s,i,i])}}subtract(t,n){const e=BigDecimal.createConstBigDecimal(t),i=n||e.default_context,r=this,o=e,s=Math.max(r._scale,o._scale);if(r._scale===o._scale)return new BigDecimal([r.integer.subtract(o.integer),s,i,i]);if(r._scale>o._scale){const t=o.setScale(r._scale);return new BigDecimal([r.integer.subtract(t.integer),s,i,i])}{const t=r.setScale(o._scale);return new BigDecimal([t.integer.subtract(o.integer),s,i,i])}}sub(t,n){return this.subtract(t,n)}multiply(t,n){const e=BigDecimal.createConstBigDecimal(t),i=n||e.default_context,r=this,o=e,s=r.integer.multiply(o.integer),a=r._scale+o._scale;return new BigDecimal([s,a,i])}mul(t,n){return this.multiply(t,n)}divideToIntegralValue(t,n){const e=BigDecimal.createConstBigDecimal(t),i=n||e.default_context,r=function(t){let n,e="1";for(n=0;n<t;n++)e+="0";return new BigInteger(e)};if(0===e.compareTo(BigDecimal.ZERO))throw"ArithmeticException";const o=this,s=e;let a=o.integer,l=s.integer;const c=o._scale-s._scale;o._scale>s._scale?l=l.multiply(r(c)):o._scale<s._scale&&(a=a.multiply(r(-c)));const h=a.divide(l),u=h.signum();if(0!==u){const t=h.toString(10).replace(/^-/,"");if(0!==i.getPrecision()&&t.length>i.getPrecision())throw"ArithmeticException";if(t.length<=-c){const n=t.match(/0+$/),e=null!==n?n[0].length:0,r=u>=0?"":"-";return new BigDecimal([new BigInteger(r+t.substring(0,t.length-e)),-e,i])}}let g=new BigDecimal(h);return g=g.setScale(c,RoundingMode.UP),g=g.round(i),g.default_context=i,g}divideAndRemainder(t,n){const e=BigDecimal.createConstBigDecimal(t),i=n||e.default_context,r=this.divideToIntegralValue(e,i);return[r,this.subtract(r.multiply(e,i),i)]}rem(t,n){return this.divideAndRemainder(t,n)[1]}mod(t,n){const e=this.rem(t,n);if(e.compareTo(BigDecimal.ZERO)<0)return e.add(t,n)}divide(t,n){const e=this,i=BigDecimal.createConstBigDecimal(t);let r=null,o=null,s=0,a=!1;if(n&&n.scale?(a=!1,s=n.scale):(a=!0,s=n&&(n.roundingMode||n.context)?e.scale():e.scale()-i.scale()),n&&n.context?(r=n.context.getRoundingMode(),s=n.context.getPrecision(),o=n.context):o=this.default_context,r=n&&n.roundingMode?n.roundingMode:o.getRoundingMode(),0===i.compareTo(BigDecimal.ZERO))throw"ArithmeticException";let l,c=e;const h=[];let u,g,f,m;m=BigDecimal.ZERO;const _=o.getPrecision(),x=0!==_?_+8:262143;for(l=0;l<x&&(u=c.divideAndRemainder(i,MathContext.UNLIMITED),g=u[0],f=u[1],m=m.add(g.scaleByPowerOfTen(-l),MathContext.UNLIMITED),0!==f.compareTo(BigDecimal.ZERO));l++){if(0===_){if(h[f._getUnsignedIntegerString()])throw"ArithmeticException "+m+"["+f._getUnsignedIntegerString()+"]";h[f._getUnsignedIntegerString()]=!0}c=f.scaleByPowerOfTen(1)}if(a)try{m=m.setScale(s,r)}catch(t){}else m=m.setScale(s,r);return m=m.round(o)}div(t,n){return this.divide(t,n)}toBigInteger(){const t=this.toPlainString().replace(/\.\d*$/,"");return new BigInteger(t)}toBigIntegerExact(){const t=this.setScale(0,RoundingMode.UNNECESSARY);return new BigInteger(t.toPlainString())}get intValue(){let t=this.toBigInteger();return 4294967295&(t=t.intValue)}get intValueExact(){let t=this.toBigIntegerExact();if((t=t.intValue)<-2147483648||2147483647<t)throw"ArithmeticException";return t}get floatValue(){const t=this.precision();return MathContext.DECIMAL32.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}get doubleValue(){const t=this.precision();return MathContext.DECIMAL64.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}pow(t,n){let e=BigDecimal.createConstBigDecimal(t);const i=n||e.default_context;if(e=e.intValue,Math.abs(e)>999999999)throw"ArithmeticException";if(0===i.getPrecision()&&e<0)throw"ArithmeticException";if(i.getPrecision()>0&&e>i.getPrecision())throw"ArithmeticException";let r,o;for(r=this.clone(),o=BigDecimal.ONE;0!==e;)0!=(1&e)&&(o=o.multiply(r,MathContext.UNLIMITED)),r=r.multiply(r,MathContext.UNLIMITED),e>>>=1;return o.round(i)}static valueOf(t,n){return new BigDecimal(n?[t,n]:t)}}class RoundingModeInterface{static toString(){return"NONE"}static getAddNumber(t){return 0}}class RoundingMode_UP extends RoundingModeInterface{static toString(){return"UP"}static getAddNumber(t){return t%=10,0===t?0:t>0?10-t:-(10+t)}}class RoundingMode_DOWN extends RoundingModeInterface{static toString(){return"DOWN"}static getAddNumber(t){return-(t%=10)}}class RoundingMode_CEILING extends RoundingModeInterface{static toString(){return"CEILING"}static getAddNumber(t){return t%=10,0===t?0:t>0?10-t:-t}}class RoundingMode_FLOOR extends RoundingModeInterface{static toString(){return"FLOOR"}static getAddNumber(t){return t%=10,0===t?0:t>0?-t:-(10+t)}}class RoundingMode_HALF_UP extends RoundingModeInterface{static toString(){return"HALF_UP"}static getAddNumber(t){const n=(t%=10)>=0?1:-1;return Math.abs(t)<5?-1*t:n*(10-Math.abs(t))}}class RoundingMode_HALF_DOWN extends RoundingModeInterface{static toString(){return"HALF_DOWN"}static getAddNumber(t){const n=(t%=10)>=0?1:-1;return Math.abs(t)<6?-1*t:n*(10-Math.abs(t))}}class RoundingMode_HALF_EVEN extends RoundingModeInterface{static toString(){return"HALF_EVEN"}static getAddNumber(t){let n,e;(t%=100)<0?(n=-1,e=1&Math.ceil(t/10)):(n=1,e=1&Math.floor(t/10));let i;return i=1===e?5:6,t%=10,Math.abs(t)<i?-1*t:n*(10-Math.abs(t))}}class RoundingMode_UNNECESSARY extends RoundingModeInterface{static toString(){return"UNNECESSARY"}static getAddNumber(t){if(0===(t%=10))return 0;throw"ArithmeticException"}}const RoundingMode={CEILING:RoundingMode_CEILING,DOWN:RoundingMode_DOWN,FLOOR:RoundingMode_FLOOR,HALF_DOWN:RoundingMode_HALF_DOWN,HALF_EVEN:RoundingMode_HALF_EVEN,HALF_UP:RoundingMode_HALF_UP,UNNECESSARY:RoundingMode_UNNECESSARY,UP:RoundingMode_UP,valueOf:function(t){if(null===t)throw"NullPointerException";if(t instanceof RoundingModeInterface)return t;const n=t.toUpperCase();for(const t in RoundingMode){const e=RoundingMode[t];if(e instanceof RoundingModeInterface&&e.toString()===n)return e}throw"IllegalArgumentException : "+t}};class MathContext{constructor(t,n){if(this.precision=t,this.roundingMode=void 0===n?RoundingMode.HALF_UP:n,"string"==typeof t||t instanceof String){let n=t.match(/precision=\d+/);null!==n&&(n=n[0].substring("precision=".length,n[0].length),this.precision=parseInt(n,10)),null!==(n=t.match(/roundingMode=\w+/))&&(n=n[0].substring("roundingMode=".length,n[0].length),this.roundingMode=RoundingMode.valueOf(n))}if(this.precision<0)throw"IllegalArgumentException"}getPrecision(){return this.precision}getRoundingMode(){return this.roundingMode}equals(t){return t instanceof MathContext&&t.toString()===this.toString()}toString(){return"precision="+this.precision+" roundingMode="+this.roundingMode.toString()}}MathContext.UNLIMITED=new MathContext(0,RoundingMode.HALF_UP),MathContext.DECIMAL32=new MathContext(7,RoundingMode.HALF_EVEN),MathContext.DECIMAL64=new MathContext(16,RoundingMode.HALF_EVEN),MathContext.DECIMAL128=new MathContext(34,RoundingMode.HALF_EVEN),BigDecimal.DEFAULT_CONTEXT=MathContext.DECIMAL128,BigDecimal.RoundingMode=RoundingMode,BigDecimal.MathContext=MathContext,BigDecimal.ZERO=new BigDecimal(0),BigDecimal.ONE=new BigDecimal(1),BigDecimal.TEN=new BigDecimal(10),BigDecimal.ROUND_CEILING=RoundingMode.CEILING,BigDecimal.ROUND_DOWN=RoundingMode.DOWN,BigDecimal.ROUND_FLOOR=RoundingMode.FLOOR,BigDecimal.ROUND_HALF_DOWN=RoundingMode.HALF_DOWN,BigDecimal.ROUND_HALF_EVEN=RoundingMode.HALF_EVEN,BigDecimal.ROUND_HALF_UP=RoundingMode.HALF_UP,BigDecimal.ROUND_UNNECESSARY=RoundingMode.UNNECESSARY,BigDecimal.ROUND_UP=RoundingMode.UP,BigDecimal.CONTEXT_UNLIMITED=MathContext.UNLIMITED,BigDecimal.CONTEXT_DECIMAL32=MathContext.DECIMAL32,BigDecimal.CONTEXT_DECIMAL64=MathContext.DECIMAL64,BigDecimal.CONTEXT_DECIMAL128=MathContext.DECIMAL128;class Statistics{static gammaln(t){const n=Math.log(2*Math.PI),e=[-15238221.539407417,691472.268851313,-36108.77125372499,8553103/6/650,-156.84828462600203,854513/138/462,-174611/330/380,43867/798/306,-3617/510/240,7/6/182,-691/2730/132,5/66/90,-1/30/56,1/42/30,-1/30/12,1/6/2];let i=1;for(;t<e.length;)i*=t,t++;const r=1/(t*t);let o=e[0];for(let t=1;t<e.length;t++)o*=r,o+=e[t];return o/=t,o+=.5*n,o+=-Math.log(i)-t+(t-.5)*Math.log(t)}static q_gamma(t,n,e){let i,r,o,s,a,l=1,c=1+t-n;if(t<1+n)return 1-Statistics.p_gamma(t,n,e);for(r=(o=Math.exp(n*Math.log(t)-t-e))/c,i=2;i<1e3;i++)if(s=((i-1-n)*(c-l)+(i+t)*c)/i,l=c,c=s,o*=(i-1-n)/i,s=o/(l*c),a=r,(r+=s)==a)return r;return Number.NaN}static p_gamma(t,n,e){let i,r,o,s;if(t>=1+n)return 1-Statistics.q_gamma(t,n,e);if(0===t)return 0;for(r=o=Math.exp(n*Math.log(t)-t-e)/n,i=1;i<1e3;i++)if(o*=t/(n+i),s=r,(r+=o)==s)return r;return Number.NaN}static gamma(t){return t<0?Math.PI/(Math.sin(Math.PI*t)*Math.exp(Statistics.gammaln(1-t))):Math.exp(Statistics.gammaln(t))}static gammainc(t,n,e){if("lower"===e)return Statistics.p_gamma(t,n,Statistics.gammaln(n));if("upper"===e)return Statistics.q_gamma(t,n,Statistics.gammaln(n));if(2===arguments.length)return Statistics.gammainc(t,n,"lower");throw"gammainc unsupported argument ["+e+"]"}static gampdf(t,n,e){let i=1/(Statistics.gamma(n)*Math.pow(e,n));return i*=Math.pow(t,n-1),i*=Math.exp(-t/e)}static gamcdf(t,n,e){return Statistics.gammainc(t/e,n)}static gaminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return 0;if(1==t)return Number.POSITIVE_INFINITY;let i,r,o=n*e;for(let s=0;s<100&&(r=o-(Statistics.gamcdf(o,n,e)-t)/Statistics.gampdf(o,n,e),i=r-o,!(Math.abs(i)<=1e-12));s++)o=r;return o}static beta(t,n){return Math.exp(Statistics.gammaln(t)+Statistics.gammaln(n)-Statistics.gammaln(t+n))}static p_beta(t,n,e){let i,r,o,s;if(n<=0)return Number.POSITIVE_INFINITY;if(e<=0)return t<1?0:1===t?1:Number.POSITIVE_INFINITY;if(t>(n+1)/(n+e+2))return 1-Statistics.p_beta(1-t,e,n);if(t<=0)return 0;for(o=n*Math.log(t),o+=e*Math.log(1-t),o+=Statistics.gammaln(n+e),o-=Statistics.gammaln(n)+Statistics.gammaln(e),o=Math.exp(o),r=o/=n,i=1;i<1e3;i++)if(o*=n+e+i-1,o*=t,o/=n+i,s=r,(r+=o)===s)return r;return Number.NaN}static q_beta(t,n,e){return 1-Statistics.p_beta(t,n,e)}static betainc(t,n,e,i){if("lower"===i)return Statistics.p_beta(t,n,e);if("upper"===i)return Statistics.q_beta(t,n,e);if(3===arguments.length)return Statistics.betainc(t,n,e,"lower");throw"betainc unsupported argument ["+i+"]"}static betapdf(t,n,e){return Math.pow(t,n-1)*Math.pow(1-t,e-1)/Statistics.beta(n,e)}static betacdf(t,n,e){return Statistics.betainc(t,n,e)}static betainv(t,n,e){if(t<0||t>1)return Number.NaN;if(1==t&&n>0&&e>0)return 1;let i;i=0==e?1-1e-14:0==n?1e-14:n/(n+e);let r,o;for(let s=0;s<100&&(o=i-(Statistics.betacdf(i,n,e)-t)/Statistics.betapdf(i,n,e),r=o-i,!(Math.abs(r)<=1e-14));s++)i=o;return i}static factorial(t){const n=Statistics.gamma(t+1);return(0|t)===t?Math.round(n):n}static nchoosek(t,n){return Math.round(Statistics.factorial(t)/(Statistics.factorial(t-n)*Statistics.factorial(n)))}static erf(t){return Statistics.p_gamma(t*t,.5,.5*Math.log(Math.PI))*(t>=0?1:-1)}static erfc(t){return 1-Statistics.erf(t)}static normpdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o=1/Math.sqrt(2*Math.PI*r*r);return o*=Math.exp(-(t-i)*(t-i)/(2*r*r))}static normcdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;return(1+Statistics.erf((t-i)/(r*Math.sqrt(2))))/2}static norminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o,s,a=i;for(let n=0;n<200&&(s=a-(Statistics.normcdf(a,i,r)-t)/Statistics.normpdf(a,i,r),o=s-a,!(Math.abs(o)<=1e-12));n++)a=s;return a}static tpdf(t,n){let e=1/(Math.sqrt(n)*Statistics.beta(.5,.5*n));return e*=Math.pow(1+t*t/n,.5*-(n+1))}static tcdf(t,n){const e=t*t/(n+t*t);return.5*(1+Statistics.betainc(e,.5,.5*n)*(t<0?-1:1))}static tinv(t,n){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;if(t<.5){const e=Statistics.betainv(2*t,.5*n,.5);return-Math.sqrt(n/e-n)}{const e=Statistics.betainv(2*(1-t),.5*n,.5);return Math.sqrt(n/e-n)}}static tdist(t,n,e){return(1-Statistics.tcdf(t,n))*e}static tinv2(t,n){return-Statistics.tinv(.5*t,n)}static chi2pdf(t,n){if(t<=0)return 0;let e=Math.pow(t,n/2-1)*Math.exp(-t/2);return e/=Math.pow(2,n/2)*Statistics.gamma(n/2)}static chi2cdf(t,n){return Statistics.gammainc(t/2,n/2)}static chi2inv(t,n){return Statistics.gaminv(t,n/2,2)}static fpdf(t,n,e){let i=1;return i*=Math.pow(n*t/(n*t+e),n/2),i*=Math.pow(1-n*t/(n*t+e),e/2),i/=t*Statistics.beta(n/2,e/2)}static fcdf(t,n,e){return Statistics.betacdf(n*t/(n*t+e),n/2,e/2)}static finv(t,n,e){return(1/Statistics.betainv(1-t,e/2,n/2)-1)*e/n}}const random_class=new Random,ToComplexFromString=function(t,n){const e=t.replace(/\s/g,"").toLowerCase();if(!/[ij]/.test(e))return n._re=parseFloat(e),void(n._im=0);let i,r=0,o=0;(i=e.match(/[+-]?[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?($|[+-])/))&&(r=parseFloat(i[0])),(i=e.match(/[+-]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]/))&&(i=i[0].substring(0,i[0].length-1),o=/^[-+]$/.test(i)||0===i.length?"-"===i?-1:1:parseFloat(i)),n._re=r,n._im=o};class Complex{constructor(t){if(1!==arguments.length)throw"Complex Many arguments : "+arguments.length;{const n=t;if(n instanceof Complex||n instanceof Object&&n._re&&n._im)this._re=n._re,this._im=n._im;else if("number"==typeof n||n instanceof Number)this._re=n,this._im=0;else if(n instanceof Array&&2===n.length)this._re=n[0],this._im=n[1];else if("string"==typeof n||n instanceof String)ToComplexFromString(n,this);else{if(!(n instanceof Object&&n.toString))throw"Complex Unsupported argument "+arguments;ToComplexFromString(n.toString(),this)}}}clone(){return this}toString(){const t=function(t){let n=t.toPrecision(6);return-1!==n.indexOf(".")&&(n=(n=n.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e")),n};return this.isReal()?t(this._re):0===this._re?t(this._im)+"i":this._im>=0?t(this._re)+" + "+t(this._im)+"i":t(this._re)+" - "+t(-this._im)+"i"}static createConstComplex(t){return t instanceof Complex?t:new Complex(t)}static rand(){return new Complex(random_class.nextDouble())}static randn(){return new Complex(random_class.nextGaussian())}equals(t,n){const e=Complex.createConstComplex(t),i=n||Number.EPSILON;return Math.abs(this._re-e._re)<i&&Math.abs(this._im-e._im)<i}get real(){return this._re}get imag(){return this._im}get norm(){return 0===this._im?Math.abs(this._re):0===this._re?Math.abs(this._im):Math.sqrt(this._re*this._re+this._im*this._im)}get angle(){return 0===this._im?0:0===this._re?Math.PI*(this._im>=0?.5:-.5):Math.atan2(this._im,this._re)}getDecimalPosition(){let t=0,n=this;for(let e=0;e<20&&!n.isComplexInteger();e++)n=n.mul(Complex.TEN),t++;return t}add(t){const n=new Complex(t);return n._re=this._re+n._re,n._im=this._im+n._im,n}sub(t){const n=new Complex(t);return n._re=this._re-n._re,n._im=this._im-n._im,n}mul(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=-this._im*n._im,n._im=0,n;{const t=this._re*n._re-this._im*n._im,e=this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}dot(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=this._im*n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=-this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}div(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re/n._re,n;if(0===this._re&&0===n._re)return n._re=this._im/n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=this._im*n._re-this._re*n._im,i=1/(n._re*n._re+n._im*n._im);return n._re=t*i,n._im=e*i,n}}mod(t){const n=new Complex(t);if(0!==this._im||0!==n._im)throw"calculation method is undefined.";let e=this._re-n._re*(0|this._re/n._re);return e<0&&(e+=n._re),n._re=e,n}inv(){return 0===this._im?new Complex(1/this._re):0===this._re?new Complex([0,-1/this._im]):Complex.ONE.div(this)}sign(){return 0===this._im?new Complex(0===this._re?0:this._re>0?1:-1):this.div(this.norm)}max(t,n){const e=Complex.createConstComplex(t);return this.compareTo(e,n)<=0?this:e}min(t,n){const e=Complex.createConstComplex(t);return this.compareTo(e,n)>=0?this:e}compareTo(t,n){const e=Complex.createConstComplex(t);return this.equals(e,n)?0:this.real+this.imag<e.real+e.imag?1:-1}isInteger(t){const n=t||Number.EPSILON;return this.isReal()&&Math.abs(this._re-(0|this._re))<n}isComplexInteger(t){const n=t||Number.EPSILON;return Math.abs(this._re-(0|this._re))<n&&Math.abs(this._im-(0|this._im))<n}isZero(t){const n=t||Number.EPSILON;return Math.abs(this._re)<n&&Math.abs(this._im)<n}isOne(t){const n=t||Number.EPSILON;return Math.abs(this._re-1)<n&&Math.abs(this._im)<n}isComplex(t){const n=t||Number.EPSILON;return Math.abs(this._im)>=n}isReal(t){const n=t||Number.EPSILON;return Math.abs(this._im)<n}isNaN(){return Math.isNaN(this._re)||Math.isNaN(this._im)}isPositive(){return 0<this._re}isNegative(){return 0>this._re}isNotNegative(){return 0<=this._re}isInfinite(){return this._re===Number.POSITIVE_INFINITY||this._im===Number.POSITIVE_INFINITY||this._re===Number.NEGATIVE_INFINITY||this._im===Number.NEGATIVE_INFINITY}isFinite(){return!this.isNaN()&&!this.isInfinite()}abs(){return new Complex(this.norm)}conj(){return 0===this._im?this:new Complex([this._re,-this._im])}negate(){return new Complex([-this._re,-this._im])}pow(t){const n=new Complex(t);if(this.isReal()&&n.isReal()&&this.isNotNegative())return n._re=Math.pow(this._re,n._re),n;if(n.isReal()){const t=Math.pow(this.norm,n._re),e=this.angle*n._re;return n._re=t*Math.cos(e),n._im=t*Math.sin(e),n}return n.mul(this.log()).exp()}square(){return new Complex(this._re*this._re+this._im*this._im)}sqrt(){if(this.isReal())return new Complex(this.isNotNegative()?Math.sqrt(this._re):[0,Math.sqrt(this._re)]);const t=Math.sqrt(this.norm),n=.5*this.angle;return new Complex([t*Math.cos(n),t*Math.sin(n)])}log(){return new Complex(this.isReal()&&this.isNotNegative()?Math.log(this._re):[Math.log(this.norm),this.angle])}exp(){if(this.isReal())return new Complex(Math.exp(this._re));const t=Math.exp(this._re);return new Complex([t*Math.cos(this._im),t*Math.sin(this._im)])}sin(){if(this.isReal())return new Complex(Math.sin(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.sub(n).div([0,2])}cos(){if(this.isReal())return new Complex(Math.cos(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.add(n).div(2)}tan(){return this.isReal()?new Complex(Math.tan(this._re)):this.sin().div(this.cos())}atan(){return this.isReal()?new Complex(Math.atan(this._re)):Complex.I.div(Complex.TWO).mul(Complex.I.add(this).div(Complex.I.sub(this)).log())}atan2(){if(0===arguments.length)return new Complex(this.angle);const t=this,n=new Complex(...arguments);if(t.isReal()&&n.isReal())return new Complex(Math.atan2(t._re,n._re));throw"calculation method is undefined."}sinc(){return new Complex(this.isReal()?0===this._re?1:Math.sin(this._re)/this._re:this.sin().div(this))}floor(){return new Complex([Math.floor(this._re),Math.floor(this._im)])}ceil(){return new Complex([Math.ceil(this._re),Math.ceil(this._im)])}round(){return new Complex([Math.round(this._re),Math.round(this._im)])}fix(){return new Complex([0|this._re,0|this._im])}fract(){return new Complex([this._re-(0|this._re),this._im-(0|this._im)])}gammaln(){if(this.isComplex())throw"gammaln don't support complex numbers.";return new Complex(Statistics.gammaln(this._re))}gamma(){if(this.isComplex())throw"gamma don't support complex numbers.";return new Complex(Statistics.gamma(this._re))}gammainc(t,n){const e=this,i=Complex.createConstComplex(t);if(e.isComplex()||i.isComplex())throw"gammainc don't support complex numbers.";const r=2===arguments.length?n:"lower";return new Complex(Statistics.gammainc(e._re,i._re,r))}gampdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"gampdf don't support complex numbers.";return new Complex(Statistics.gampdf(e._re,i._re,r._re))}gamcdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"gamcdf don't support complex numbers.";return new Complex(Statistics.gamcdf(e._re,i._re,r._re))}gaminv(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"gaminv don't support complex numbers.";return new Complex(Statistics.gaminv(e._re,i._re,r._re))}beta(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"beta don't support complex numbers.";return new Complex(Statistics.beta(n._re,e._re))}betainc(t,n,e){const i=this,r=Complex.createConstComplex(t),o=Complex.createConstComplex(n);if(i.isComplex()||r.isComplex()||o.isComplex())throw"betainc don't support complex numbers.";const s=2===arguments.length?e:"lower";return new Complex(Statistics.betainc(i._re,r._re,o._re,s))}betapdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betapdf don't support complex numbers.";return new Complex(Statistics.betapdf(e._re,i._re,r._re))}betacdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betacdf don't support complex numbers.";return new Complex(Statistics.betacdf(e._re,i._re,r._re))}betainv(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betainv don't support complex numbers.";return new Complex(Statistics.betainv(e._re,i._re,r._re))}factorial(){if(this.isComplex())throw"factorial don't support complex numbers.";return new Complex(Statistics.factorial(this._re))}nchoosek(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"nchoosek don't support complex numbers.";return new Complex(Statistics.nchoosek(n._re,e._re))}erf(){const t=this;if(t.isComplex())throw"erf don't support complex numbers.";return new Complex(Statistics.erf(t._re))}erfc(){const t=this;if(t.isComplex())throw"erfc don't support complex numbers.";return new Complex(Statistics.erfc(t._re))}normpdf(t,n){const e=this,i=arguments.length<=0?Complex.createConstComplex(t):Complex.ZERO,r=arguments.length<=1?Complex.createConstComplex(n):Complex.ONE;if(e.isComplex()||i.isComplex()||r.isComplex())throw"normpdf don't support complex numbers.";return new Complex(Statistics.normpdf(e._re,i._re,r._re))}normcdf(t,n){const e=this,i=arguments.length<=0?Complex.createConstComplex(t):Complex.ZERO,r=arguments.length<=1?Complex.createConstComplex(n):Complex.ONE;if(e.isComplex()||i.isComplex()||r.isComplex())throw"normcdf don't support complex numbers.";return new Complex(Statistics.normcdf(e._re,i._re,r._re))}norminv(t,n){const e=this,i=arguments.length<=0?Complex.createConstComplex(t):Complex.ZERO,r=arguments.length<=1?Complex.createConstComplex(n):Complex.ONE;if(e.isComplex()||i.isComplex()||r.isComplex())throw"norminv don't support complex numbers.";return new Complex(Statistics.norminv(e._re,i._re,r._re))}tcdf(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"tcdf don't support complex numbers.";return new Complex(Statistics.tcdf(n._re,e._re))}tinv(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"tinv don't support complex numbers.";return new Complex(Statistics.tinv(n._re,e._re))}tdist(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"tcdf don't support complex numbers.";return new Complex(Statistics.tdist(e._re,i._re,r._re))}tinv2(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"tinv don't support complex numbers.";return new Complex(Statistics.tinv2(n._re,e._re))}chi2pdf(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"chi2pdf don't support complex numbers.";return new Complex(Statistics.chi2pdf(n._re,e._re))}chi2cdf(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"chi2cdf don't support complex numbers.";return new Complex(Statistics.chi2cdf(n._re,e._re))}chi2inv(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"chi2inv don't support complex numbers.";return new Complex(Statistics.chi2inv(n._re,e._re))}fpdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"fpdf don't support complex numbers.";return new Complex(Statistics.fpdf(e._re,i._re,r._re))}fcdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"fcdf don't support complex numbers.";return new Complex(Statistics.fcdf(e._re,i._re,r._re))}finv(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"finv don't support complex numbers.";return new Complex(Statistics.finv(e._re,i._re,r._re))}}Complex.I=new Complex([0,1]),Complex.PI=new Complex(Math.PI),Complex.ZERO=new Complex(0),Complex.HALF=new Complex(.5),Complex.ONE=new Complex(1),Complex.MINUS=new Complex(-1),Complex.TWO=new Complex(2),Complex.TEN=new Complex(10);class FFT{static bit_reverse_32(t){let n=4294967295&t;return n=(1431655765&n)<<1|n>>1&1431655765,n=(858993459&n)<<2|n>>2&858993459,n=(252645135&n)<<4|n>>4&252645135,n=(16711935&n)<<8|n>>8&16711935,n=(65535&n)<<16|n>>16&65535}static create_bit_reverse_table(t){const n=1<<t,e=[];for(let i=0;i<n;i++)e[i]=FFT.bit_reverse_32(i)>>>32-t;return e}constructor(t){this.size=t,this.inv_size=1/this.size,this.bit_size=Math.round(Math.log(this.size)/Math.log(2)),this.is_fast=1<<this.bit_size===this.size,this.bitrv=null,this.fft_re=new Array(this.size),this.fft_im=new Array(this.size);{const t=-2*Math.PI/this.size;let n=0;for(let e=0,i=0;e<this.size;e++){this.fft_re[e]=Math.cos(i),this.fft_im[e]=Math.sin(i);const r=t+n,o=i+r;n=o-i-r,i=o}}this.is_fast&&(this.bitrv=FFT.create_bit_reverse_table(this.bit_size))}delete(){delete this.size,delete this.inv_size,delete this.bit_size,delete this.is_fast,delete this.bitrv,delete this.fft_re,delete this.fft_im}fft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t=1,n=this.size/2,r=2;for(let o=1<<this.bit_size-1;o>0;o>>=1){for(let s=0;s<n;s++){let n=s*r;for(let r=0,s=0;r<t;r++,n++,s+=o){const r=e[n+t]*this.fft_re[s]-i[n+t]*this.fft_im[s],o=i[n+t]*this.fft_re[s]+e[n+t]*this.fft_im[s];e[n+t]=e[n]-r,i[n+t]=i[n]-o,e[n]+=r,i[n]+=o}}n/=2,r*=2,t*=2}}}else if(Signal.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,s=0;o<this.size;o++,s=o*r%this.size)e[r]+=t[o]*this.fft_re[s]-n[o]*this.fft_im[s],i[r]+=t[o]*this.fft_im[s]+n[o]*this.fft_re[s]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=r*n%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=t[r]*this.fft_im[o]}return{real:e,imag:i}}ifft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t,n,r=1,o=this.size/2,s=2;for(let a=1<<this.bit_size-1;a>0;a>>=1){for(let l=0;l<o;l++){let o=l*s;for(let s=0,l=0;s<r;s++,o++,l+=a)t=e[o+r]*this.fft_re[l]+i[o+r]*this.fft_im[l],n=i[o+r]*this.fft_re[l]-e[o+r]*this.fft_im[l],e[o+r]=e[o]-t,i[o+r]=i[o]-n,e[o]+=t,i[o]+=n}o/=2,s*=2,r*=2}}}else if(Signal.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,s=0;o<this.size;o++,s=r*o%this.size)e[r]+=t[o]*this.fft_re[s]+n[o]*this.fft_im[s],i[r]+=-t[o]*this.fft_im[s]+n[o]*this.fft_re[s]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=n*r%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=-t[r]*this.fft_im[o]}for(let t=0;t<this.size;t++)e[t]*=this.inv_size,i[t]*=this.inv_size;return{real:e,imag:i}}}class Chash{constructor(t,n){this.object=n,this.table_max=t,this.table_size=0,this.table=[]}get(t){for(let n=0;n<this.table_size;n++)if(this.table[n].size===t){const t=this.table.splice(n,1);return this.table.unshift(t),t}const n=new this.object(t);if(this.table_size===this.table_max){const t=this.table.pop();t.delete()}return this.table.unshift(n),n}}const fft_chash=new Chash(4,FFT);class DCT{constructor(t){this.size=t,this.dct_size=2*t,this.dct_re=new Array(this.size),this.dct_im=new Array(this.size);{const t=1/Math.sqrt(this.size),n=t*Math.sqrt(2);for(let e=0;e<this.size;e++){const i=-Math.PI*e/this.dct_size;this.dct_re[e]=Math.cos(i)*(0===e?t:n),this.dct_im[e]=Math.sin(i)*(0===e?t:n)}}}delete(){delete this.size,delete this.dct_size,delete this.dct_re,delete this.dct_im}dct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size);for(let i=0;i<this.dct_size;i++)n[i]=i<this.size?t[i]:0,e[i]=0;const i=fft_chash.get(this.dct_size).fft(n,e);for(let t=0;t<this.size;t++)n[t]=i.real[t]*this.dct_re[t]-i.imag[t]*this.dct_im[t];return n.splice(this.size),n}idct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size),i=2*this.size;for(let r=0;r<this.dct_size;r++)n[r]=r<this.size?i*t[r]*this.dct_re[r]:0,e[r]=r<this.size?i*t[r]*-this.dct_im[r]:0;const r=fft_chash.get(this.dct_size).ifft(n,e);return r.real.splice(this.size),r.real}}const dct_chash=new Chash(4,DCT);class Signal{static isContainsZero(t){for(let n=0;n<t.length;n++)if(0!==t[n])return!0;return!1}static fft(t,n){return fft_chash.get(t.length).fft(t,n)}static ifft(t,n){return fft_chash.get(t.length).ifft(t,n)}static dct(t){return dct_chash.get(t.length).dct(t)}static idct(t){return dct_chash.get(t.length).idct(t)}static powerfft(t,n){const e=t.length,i=Signal.fft(t,n),r=new Array(e);for(let t=0;t<e;t++)r[t]=i.real[t]*i.real[t]+i.imag[t]*i.imag[t];return r}static conv(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}const o=t.length,s=2*o;if(1<<Math.round(Math.log(o)/Math.log(2))===o){if(r){const e=t.length,i=new Array(s),r=new Array(s);for(let o=0;o<s;o++)i[o]=o<e?t[o]:0,r[o]=o<e?n[o]:0;const o=Signal.fft(i,r);for(let t=0;t<s;t++)i[t]=o.real[t]*o.real[t]-o.imag[t]*o.imag[t],r[t]=o.real[t]*o.imag[t]+o.imag[t]*o.real[t];const a=Signal.ifft(i,r);return a.real.splice(s-1),a.imag.splice(s-1),a}if(t.length===e.length){const r=t.length,o=new Array(s),a=new Array(s),l=new Array(s),c=new Array(s);for(let h=0;h<s;h++)o[h]=h<r?t[h]:0,a[h]=h<r?n[h]:0,l[h]=h<r?e[h]:0,c[h]=h<r?i[h]:0;const h=Signal.fft(o,a),u=Signal.fft(l,c),g=new Array(s),f=new Array(s);for(let t=0;t<s;t++)g[t]=h.real[t]*u.real[t]-h.imag[t]*u.imag[t],f[t]=h.real[t]*u.imag[t]+h.imag[t]*u.real[t];const m=Signal.ifft(g,f);return m.real.splice(s-1),m.imag.splice(s-1),m}}let a=!Signal.isContainsZero(n);a&&(a=!Signal.isContainsZero(i));{const r=new Array(t.length+e.length-1),o=new Array(t.length+e.length-1);for(let t=0;t<r.length;t++)r[t]=0,o[t]=0;if(a)for(let n=0;n<e.length;n++)for(let i=0;i<t.length;i++)r[n+i]+=t[i]*e[n];else for(let s=0;s<e.length;s++)for(let a=0;a<t.length;a++)r[s+a]+=t[a]*e[s]-n[a]*i[s],o[s+a]+=t[a]*i[s]+n[a]*e[s];return{real:r,imag:o}}}static xcorr(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}if(t.length===e.length){const o=t.length,s=2*o,a=Math.round(Math.log(o)/Math.log(2)),l=1<<a===o;if(l){let a=null;if(r){const e=new Array(s),i=new Array(s);for(let r=0;r<s;r++)e[r]=r<o?t[r]:0,i[r]=r<o?n[r]:0;const r=Signal.powerfft(e,i);a=Signal.ifft(r,i),e.pop(),i.pop();for(let t=0,n=o+1;t<e.length;t++,n++)s<=n&&(n=0),e[t]=a.real[n],i[t]=a.imag[n];return{real:e,imag:i}}{const r=new Array(s),l=new Array(s),c=new Array(s),h=new Array(s);for(let a=0;a<s;a++)r[a]=a<o?t[a]:0,l[a]=a<o?n[a]:0,c[a]=a<o?e[o-a-1]:0,h[a]=a<o?-i[o-a-1]:0;const u=Signal.fft(r,l),g=Signal.fft(c,h),f=new Array(s),m=new Array(s);for(let t=0;t<s;t++)f[t]=u.real[t]*g.real[t]-u.imag[t]*g.imag[t],m[t]=u.real[t]*g.imag[t]+u.imag[t]*g.real[t];return(a=Signal.ifft(f,m)).real.splice(s-1),a.imag.splice(s-1),a}}}let o=!Signal.isContainsZero(n);if(o&&(o=!Signal.isContainsZero(i)),r){const n=t.length,i=2*n;if(o){const r=new Array(n);for(let i=0;i<n;i++){r[i]=0;const o=n-i;for(let n=0;n<o;n++)r[i]+=t[n]*e[n+i]}const o=new Array(i-1),s=new Array(i-1);for(let t=0,e=n-1;t<n;t++,e--)o[t]=r[e],o[n+t-1]=r[t];for(let t=0;t<s.length;t++)s[t]=0;return{real:o,imag:s}}}{const r=new Array(e.length),o=new Array(e.length);for(let t=0;t<e.length;t++)r[t]=e[e.length-t-1],o[t]=-i[e.length-t-1];return Signal.conv(t,n,r,o)}}static window(t,n,e){const i=t.toLocaleLowerCase(),r=n,o=new Array(r),s=function(t){return e?t/r*(2*Math.PI):t/(r-1)*(2*Math.PI)},a=function(t,n,e,i,a){for(let l=0;l<r;l++)o[l]=t,o[l]-=n*Math.cos(1*s(l)),o[l]+=e*Math.cos(2*s(l)),o[l]-=i*Math.cos(3*s(l)),o[l]+=a*Math.cos(4*s(l))};switch(i){case"rectangle":a(1,0,0,0,0);break;case"hann":a(.5,.5,0,0,0);break;case"hamming":a(.54,.46,0,0,0);break;case"blackman":a(.42,.5,.08,0,0);break;case"blackmanharris":a(.35875,.48829,.14128,.01168,0);break;case"blackmannuttall":a(.3635819,.4891775,.1365995,.0106411,0);break;case"flattop":a(1,1.93,1.29,.388,.032);break;case"lanczos":for(let t=0;t<r;t++)o[t]=function(t){return 0===t?1:Math.sin(t)/t}(s(t)-1);break;case"sin":for(let t=0;t<r;t++)o[t]=Math.sin(.5*s(t));break;case"vorbis":for(let t=0;t<r;t++){const n=Math.sin(.5*s(t));o[t]=Math.sin(.5*Math.PI*n*n)}}return o}static hann(t,n){return Signal.window("hann",t,n)}static hamming(t,n){return Signal.window("hamming",t,n)}}class MatrixTool{static tridiagonalize(t){const n=t.getNumberMatrixArray(),e=function(t,n,e,i){let r=0;const o=e||0,s=i||t.length;for(let e=o;e<s;e++)r+=t[e]*n[e];return r},i=n.length,r=[],o=[];for(let t=0;t<i-2;t++){const s=n[t];r[t]=s[t];{const n=function(t,n,i){const r=n||0,o=i||t.length;let s=Math.sqrt(e(t,t,r,o));const a=[];if(Math.abs(s)>=1e-10){t[r]<0&&(s=-s);let n;for(let e=r,i=0;e<o;e++,i++)e===r?(a[i]=t[e]+s,n=1/Math.sqrt(a[i]*s),a[i]=a[i]*n):a[i]=t[e]*n}return{y1:-s,v:a}}(s,t+1,i);o[t]=n.y1;for(let e=0;e<n.v.length;e++)s[t+1+e]=n.v[e]}if(!(Math.abs(o[t])<1e-10)){for(let e=t+1;e<i;e++){let o=0;for(let i=t+1;i<e;i++)o+=n[i][e]*s[i];for(let t=e;t<i;t++)o+=n[e][t]*s[t];r[e]=o}const o=e(s,r,t+1,i)/2;for(let e=i-1;e>t;e--){const t=s[e],a=r[e]-o*t;r[e]=a;for(let o=e;o<i;o++){const i=t*r[o]+a*s[o];n[e][o]=n[e][o]-i}}}}i>=2&&(r[i-2]=n[i-2][i-2],o[i-2]=n[i-2][i-1]),i>=1&&(r[i-1]=n[i-1][i-1]);for(let t=i-1;t>=0;t--){const r=n[t];if(t<i-2)for(let o=t+1;o<i;o++){const s=n[o],a=e(r,s,t+1,i);for(let n=t+1;n<i;n++)s[n]-=a*r[n]}for(let t=0;t<i;t++)r[t]=0;r[t]=1}const s=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?new Complex(r[t]):1===Math.abs(t-n)?new Complex(o[.5*(t+n)|0]):Complex.ZERO},i,i);return{P:new Matrix(n).T(),H:s}}static eig(t){let n=!1;const e=t.tridiagonalize(),i=e.P.getNumberMatrixArray(),r=e.H.getNumberMatrixArray(),o=t.row_length,s=[],a=[];for(let t=0;t<o;t++)s[t]=r[t][t],a[t]=0===t?0:r[t][t-1];for(let t=o-1;t>0;t--){let e=t;for(e=t;e>=1&&!(Math.abs(a[e])<=1e-10*(Math.abs(s[e-1])+Math.abs(s[e])));e--);if(e!=t){let r=0;for(;;){if(++r>100){n=!0;break}let l=(s[t-1]-s[t])/2,c=a[t]*a[t],h=Math.sqrt(l*l+c);l<0&&(h=-h);let u=s[e]-s[t]+c/(l+h),g=a[e+1];for(let n=e;n<t;n++){let r,h;Math.abs(u)>=Math.abs(g)?h=(c=-g/u)*(r=1/Math.sqrt(c*c+1)):r=(c=-u/g)*(h=1/Math.sqrt(c*c+1)),c=((l=s[n]-s[n+1])*h+2*r*a[n+1])*h,s[n]-=c,s[n+1]+=c,n>e&&(a[n]=r*a[n]-h*g),a[n+1]+=h*(r*l-2*h*a[n+1]);for(let t=0;t<o;t++)u=i[t][n],g=i[t][n+1],i[t][n]=r*u-h*g,i[t][n+1]=h*u+r*g;n<t-1&&(u=a[n+1],g=-h*a[n+2],a[n+2]*=r)}if(Math.abs(a[t])<=1e-10*(Math.abs(s[t-1])+Math.abs(s[t])))break}if(n)break}}return function(t,n){const e=n.length,i=[];for(let t=0;t<e;t++)i[t]={sigma:n[t],index:t};const r=function(t,n){return t===n?0:t<n?-1:1};i.sort(r);const o=Matrix.zeros(e),s=Matrix.zeros(e);for(let t=0;t<e;t++)s.matrix_array[t][t]=new Complex(i[t].sigma),o.matrix_array[t][i[t].index]=Complex.ONE;return{V:t.mul(o),D:s}}(new Matrix(i),s)}}const ConstructorTool={match2:function(t,n){const e=[];let i=t,r=!0;for(let t=0;t<1e3;t++){if(null===(r=i.match(n))){i.length&&e.push([!1,i]);break}r.index>0&&e.push([!1,i.substr(0,r.index)]),e.push([!0,r[0]]),i=i.substr(r.index+r[0].length)}return e},trimBracket:function(t){return/^\[/.test(t)&&/\]$/.test(t)?t.substring(1,t.length-1):null},toMatrixFromStringForArrayJSON:function(t){const n=[];let e=t.match(/\[[^\]]+\]/g);null===e&&(e=[t]);for(let t=0;t<e.length;t++){const i=e[t],r=i.substring(1,i.length-1).split(","),o=[];for(let t=0;t<r.length;t++){const n=r[t];o[t]=new Complex(n)}n[t]=o}return n},InterpolationCalculation:function(t,n,e){const i=e.compareTo(t);if(0===i)return t;if(n.isZero())throw"IllegalArgumentException";if(n.isNegative()&&-1===i)throw"IllegalArgumentException";const r=[];let o=t;r[0]=o;for(let t=1;t<65536&&(o=o.add(n)).compareTo(e)!==i;t++)r[t]=o;return r},toArrayFromString:function(t){if(":"===t.trim())return":";const n=new RegExp("("+/[+-]? *([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]( *[+] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?)?/.source+")|("+/[+-]? *[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?( *[+-] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij])?/.source+")","i"),e=ConstructorTool.match2(t,n),i=[];for(let t=0;t<e.length;t++){const n=e[t];if(n[0])if(t<e.length-2&&!e[t+1][0]&&/:/.test(e[t+1][1])){let r,o,s;t<e.length-4&&!e[t+3][0]&&/:/.test(e[t+3][1])?(r=new Complex(n[1]),o=new Complex(e[t+2][1]),s=new Complex(e[t+4][1]),t+=4):(r=new Complex(n[1]),o=Complex.ONE,s=new Complex(e[t+2][1]),t+=2);const a=ConstructorTool.InterpolationCalculation(r,o,s);for(let t=0;t<a.length;t++)i.push(a[t])}else i.push(new Complex(n[1]))}return i},toMatrixFromStringForArrayETC:function(t){const n=t.split(";"),e=new Array(n.length);for(let t=0;t<n.length;t++)e[t]=ConstructorTool.toArrayFromString(n[t]);return e},toMatrixFromStringForArray:function(t){return/[[\],]/.test(t)?ConstructorTool.toMatrixFromStringForArrayJSON(t):ConstructorTool.toMatrixFromStringForArrayETC(t)},toMatrixFromString:function(t){const n=t.replace(/^\s*|\s*$/g,""),e=ConstructorTool.trimBracket(n);return e?ConstructorTool.toMatrixFromStringForArray(e):[[new Complex(t)]]},isCorrectMatrixArray:function(t){if(0===t.length)return!1;const n=t[0].length;if(0===n)return!1;for(let e=1;e<t.length;e++)if(t[e].length!==n)return!1;return!0}};class Matrix{constructor(t){let n=null,e=!1;if(1!==arguments.length)throw"Matrix : Many arguments ["+arguments.length+"]";{const i=t;if(i instanceof Matrix){n=new Array(i.row_length);for(let t=0;t<i.row_length;t++){n[t]=new Array(i.column_length);for(let e=0;e<i.column_length;e++)n[t][e]=i.matrix_array[t][e]}}else if(i instanceof Complex)n=[[i]];else if(i instanceof Array){n=[];for(let t=0;t<i.length;t++){const e=i[t];if(e instanceof Array){const i=new Array(e.length);for(let t=0;t<e.length;t++){const n=e[t];if(n instanceof Complex)i[t]=n;else if(n instanceof Matrix){if(!n.isScalar())throw"Matrix in matrix";i[t]=n.scalar}else i[t]=new Complex(n)}n[t]=i}else if(0===t&&(n[0]=new Array(i.length)),e instanceof Complex)n[0][t]=e;else if(e instanceof Matrix){if(!e.isScalar())throw"Matrix in matrix";n[0][t]=e.scalar}else n[0][t]=new Complex(e)}}else"string"==typeof i||i instanceof String?(e=!0,n=ConstructorTool.toMatrixFromString(i)):i instanceof Object&&i.toString?(e=!0,n=ConstructorTool.toMatrixFromString(i.toString())):n=[[new Complex(i)]]}if(e)for(let t=0;t<n.length;t++)":"===n[t]&&n.splice(t--,1);if(!ConstructorTool.isCorrectMatrixArray(n))throw"new Matrix IllegalArgumentException";this.matrix_array=n,this.row_length=this.matrix_array.length,this.column_length=this.matrix_array[0].length,this.string_cash=null}clone(){return new Matrix(this.matrix_array)}toString(){if(this.string_cash)return this.string_cash;const t=Math.pow(10,9);let n=!1,e=!1,i=0;this._each(function(r){r.isReal()||(n=!0),Math.abs(r.real)>=t&&(e=!0),Math.abs(r.imag)>=t&&(e=!0),i=Math.max(i,r.getDecimalPosition())}),i>0&&(i=4);let r=0;const o=[],s=function(t){if(!e)return t.toFixed(i);const n=t.toExponential(4).split("e");let r=n[1];return 2===r.length?r=r.substr(0,1)+"00"+r.substr(1):3===r.length&&(r=r.substr(0,1)+"0"+r.substr(1)),n[0]+"e"+r};this._each(function(t){const e={};let i=t.real;if(e.re_sign=i<0?"-":" ",i=Math.abs(i),e.re_str=s(i),r=Math.max(r,e.re_str.length+1),n){let n=t.imag;e.im_sign=n<0?"-":"+",n=Math.abs(n),e.im_str=s(n),r=Math.max(r,e.im_str.length+1)}o.push(e)});const a=function(t,n){return"                                        ".substr(0,n-t.length)+t},l=[],c=this;return this._each(function(t,e,i){const s=o.shift();let h=a(s.re_sign+s.re_str,r);n&&(h+=" "+s.im_sign+a(s.im_str,r)+"i"),l.push(h),l.push(i<c.column_length-1?" ":"\n")}),this.string_cash=l.join(""),this.string_cash}equals(t,n){const e=this,i=Matrix.createConstMatrix(t);if(e.row_length!==i.row_length||e.column_length!==i.column_length)return!1;if(1===e.row_length||1===e.column_length)return e.scalar.equals(i.scalar);const r=e.matrix_array,o=i.matrix_array;for(let t=0;t<this.row_length;t++)for(let e=0;e<this.column_length;e++)if(!r[t][e].equals(o[t][e],n))return!1;return!0}getNumberMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e].real}return t}getComplexMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e]}return t}static createConstMatrix(t){return 1===arguments.length&&t instanceof Matrix?t:new Matrix(t)}_clearCash(){this.string_cash&&delete this.string_cash}_each(t){let n=!1;for(let e=0;e<this.row_length;e++)for(let i=0;i<this.column_length;i++){const r=t(this.matrix_array[e][i],e,i);void 0!==r&&(this.matrix_array[e][i]=r instanceof Complex?r:r instanceof Matrix?r.scalar:new Complex(r),n=!0)}return n&&this._clearCash(),this}static createMatrixDoEachCalculation(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";const i=n,r=e||n,o=new Array(i);for(let n=0;n<i;n++){o[n]=new Array(r);for(let e=0;e<r;e++){const i=t(n,e);void 0!==i&&(o[n][e]=i instanceof Complex?i:i instanceof Matrix?i.scalar:new Complex(i))}}return new Matrix(o)}cloneMatrixDoEachCalculation(t){return this.clone()._each(t)}__column_oriented_1_dimensional_processing(t){if(this.isRow()){const n=new Array(this.row_length);for(let t=0;t<this.column_length;t++)n[t]=this.matrix_array[0][t];return new Matrix(t(n))}{const n=new Matrix(0);n._resize(1,this.column_length);for(let e=0;e<this.column_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++)i[t]=this.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}}__column_oriented_2_dimensional_processing(t){const n=new Matrix(0);n._resize(this.row_length,1);for(let e=0;e<this.row_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.column_length;t++)i[t]=this.matrix_array[0][t];const r=t(i);n._resize(n.row_length,Math.max(n.column_length,r.length));for(let t=0;t<r.length;t++)n.matrix_array[e][t]=r[t]}for(let e=0;e<n.column_length;e++){const i=new Array(n.row_length);for(let t=0;t<n.row_length;t++)i[t]=n.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}getComplex(t,n){let e=null,i=null;e="string"==typeof t||t instanceof String?new Matrix(t):t,2===arguments.length&&(i="string"==typeof n||n instanceof String?new Matrix(n):n);const r=function(n){let e,i=!1;return"number"==typeof t||t instanceof Number?(e=Math.round(n),i=!0):t instanceof Complex?(e=Math.round(n.real),i=!0):t instanceof Matrix&&t.isScalar()&&(e=Math.round(n.scalar.real),i=!0),{number:e,is_scalar:i}};let o=!0,s=null,a=null;if(1===arguments.length?o&=(s=r(e)).is_scalar:2===arguments.length&&(o&=(s=r(e)).is_scalar,o&=(a=r(i)).is_scalar),o)return this.isRow()?this.matrix_array[0][s.number]:this.isColumn()?this.matrix_array[s.number][0]:this.matrix_array[s.number][a.number];throw"getComplex not scalar : "+this}get scalar(){return this.matrix_array[0][0]}get length(){return this.row_length>this.column_length?this.row_length:this.column_length}get norm1(){const t=this.matrix_array;if(this.isRow()){let n=0;for(let e=0;e<this.column_length;e++)n+=t[0][e].norm;return n}if(this.isColumn()){let n=0;for(let e=0;e<this.row_length;e++)n=t[e][0].norm;return n}let n=0;for(let e=0;e<this.column_length;e++){let i=0;for(let n=0;n<this.row_length;n++)i+=t[n][e].norm;n<i&&(n=i)}return n}get norm2(){const t=this.matrix_array;if(this.isRow()){let n=0;for(let e=0;e<this.column_length;e++)n+=t[0][e].square().real;return Math.sqrt(n)}if(this.isColumn()){let n=0;for(let e=0;e<this.row_length;e++)n=t[e][0].square().real;return Math.sqrt(n)}return this.svd().S.diag().max().scalar.real}static eye(t,n){return Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?Complex.ONE:Complex.ZERO},t,n)}static memset(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";if(t instanceof Matrix&&!t.isScalar()){const i=t.matrix_array,r=t.row_length,o=t.column_length;return Matrix.createMatrixDoEachCalculation(function(t,n){return i[t%r][n%o]},n,e)}{let i=0;return i=t instanceof Matrix&&t.isScalar()?t.scalar:Complex.createConstComplex(t),Matrix.createMatrixDoEachCalculation(function(){return i},n,e)}}static zeros(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ZERO,t,n)}static ones(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ONE,t,n)}static rand(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.rand()},t,n)}static randn(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.randn()},t,n)}diag(){if(this.isVector()){const t=this;return Matrix.createMatrixDoEachCalculation(function(n,e){return n===e?t.getComplex(n):Complex.ZERO},this.length)}{const t=Math.min(this.row_length,this.column_length),n=new Array(t);for(let e=0;e<t;e++)n[e]=new Array(1),n[e][0]=this.matrix_array[e][e];return new Matrix(n)}}isScalar(){return 1===this.row_length&&1==this.column_length}isRow(){return 1===this.row_length}isColumn(){return 1===this.column_length}isVector(){return 1===this.row_length||1===this.column_length}isMatrix(){return 1!==this.row_length&&1!==this.column_length}isSquare(){return this.row_length===this.column_length}isReal(t){let n=!0;return this._each(function(e){n&&e.isComplex(t)&&(n=!1)}),n}isComplex(t){let n=!0;return this._each(function(e){n&&e.isReal(t)&&(n=!1)}),n}isZeros(t){let n=!0;const e=t||1e-10;return this._each(function(t){n&&!t.isZero(e)&&(n=!1)}),n}isIdentity(t){if(!this.isDiagonal())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)if(!this.matrix_array[t][t].isOne(n))return!1;return!0}isDiagonal(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i!==r&&!t.isZero(e)&&(n=!1)}),n}isTridiagonal(t){if(!this.isSquare())return!1;let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&Math.abs(i-r)>1&&!t.isZero(e)&&(n=!1)}),n}isRegular(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.rank(1e-10).equals(this.row_length,n)}isOrthogonal(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.transpose()).isIdentity(n)}isUnitary(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.ctranspose()).isIdentity(n)}isSymmetric(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t+1;e<this.column_length;e++)if(!this.matrix_array[t][e].equals(this.matrix_array[e][t],n))return!1;return!0}isHermitian(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t;e<this.column_length;e++)if(t===e){if(!this.matrix_array[t][e].isReal(n))return!1}else if(!this.matrix_array[t][e].equals(this.matrix_array[e][t].conj(),n))return!1;return!0}size(){return new Matrix([[this.row_length,this.column_length]])}compareTo(t,n){const e=this,i=Matrix.createConstMatrix(t);if(e.isScalar()&&i.isScalar())return e.scalar.compareTo(i.scalar,n);const r=e.matrix_array,o=i.matrix_array,s=Math.max(e.row_length,i.row_length),a=Math.max(e.column_length,i.column_length);return Matrix.createMatrixDoEachCalculation(function(t,n){return r[t%e.row_length][n%e.column_length].compareTo(o[t%i.row_length][n%i.column_length])},s,a)}max(t){const n=function(n){let e=n[0];for(let i=1;i<n.length;i++)e.compareTo(n[i],t)>0&&(e=n[i]);return[e]};return this.__column_oriented_1_dimensional_processing(n)}min(t){const n=function(n){let e=n[0];for(let i=1;i<n.length;i++)e.compareTo(n[i],t)<0&&(e=n[i]);return[e]};return this.__column_oriented_1_dimensional_processing(n)}add(t){const n=this,e=Matrix.createConstMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].add(r[t%e.row_length][o%e.column_length])},o,s)}sub(t){const n=this,e=Matrix.createConstMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].sub(r[t%e.row_length][o%e.column_length])},o,s)}mul(t){const n=this,e=Matrix.createConstMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.mul(r.scalar));if(n.isScalar()){const t=new Array(e.row_length);for(let i=0;i<e.row_length;i++){t[i]=new Array(e.column_length);for(let o=0;o<e.column_length;o++)t[i][o]=n.scalar.mul(r[i][o])}return new Matrix(t)}if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].mul(e.scalar)}return new Matrix(t)}if(n.column_length!==e.row_length)throw"Matrix size does not match";{const t=new Array(n.row_length);for(let o=0;o<n.row_length;o++){t[o]=new Array(e.column_length);for(let s=0;s<e.column_length;s++){let e=Complex.ZERO;for(let t=0;t<n.column_length;t++)e=e.add(i[o][t].mul(r[t][s]));t[o][s]=e}}return new Matrix(t)}}inv(){if(this.isScalar())return new Matrix(Complex.ONE.div(this.scalar));if(!this.isSquare())throw"not square";if(this.isDiagonal()){const t=this.T(),n=Math.min(t.row_length,t.column_length);for(let e=0;e<n;e++)t.matrix_array[e][e]=t.matrix_array[e][e].inv();return t}const t=this.column_length,n=new Matrix(this);n._concat_left(Matrix.eye(t));const e=n.matrix_array,i=n.column_length;for(let r=0;r<t;r++){{const t=n._max_row_number(r,r).index;n._exchange_row(r,t)}{const t=e[r][r].inv();for(let n=r,o=r;o<i;o++)e[n][o]=e[n][o].mul(t)}for(let n=0;n<t;n++)if(n!==r){const t=e[n][r];for(let o=r;o<i;o++)e[n][o]=e[n][o].sub(e[r][o].mul(t))}}const r=new Array(t);for(let n=0;n<t;n++){r[n]=new Array(t);for(let i=0;i<t;i++)r[n][i]=e[n][t+i]}return new Matrix(r)}div(t){const n=this,e=Matrix.createConstMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.div(r.scalar));if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].div(e.scalar)}return new Matrix(t)}if(e.row_length===e.column_length)return this.mul(e.inv());if(n.column_length!==e.column_length)throw"Matrix size does not match";throw"warning"}nmul(t){const n=this,e=Matrix.createConstMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].mul(r[t%e.row_length][o%e.column_length])},o,s)}ndiv(t){const n=this,e=Matrix.createConstMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].div(r[t%e.row_length][o%e.column_length])},o,s)}real(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.real)})}imag(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.imag)})}angle(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.angle)})}sign(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.sign())})}testInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isInteger(t)?Complex.ONE:Complex.ZERO})}testComplexInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplexInteger(t)?Complex.ONE:Complex.ZERO})}testZero(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isZero(t)?Complex.ONE:Complex.ZERO})}testOne(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isOne(t)?Complex.ONE:Complex.ZERO})}testComplex(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplex(t)?Complex.ONE:Complex.ZERO})}testReal(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isReal(t)?Complex.ONE:Complex.ZERO})}testNaN(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNaN()?Complex.ONE:Complex.ZERO})}testPositive(){return this.cloneMatrixDoEachCalculation(function(t){return t.isPositive()?Complex.ONE:Complex.ZERO})}testNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNegative()?Complex.ONE:Complex.ZERO})}testNotNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNotNegative()?Complex.ONE:Complex.ZERO})}testInfinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isInfinite()?Complex.ONE:Complex.ZERO})}testFinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isFinite()?Complex.ONE:Complex.ZERO})}abs(){return this.cloneMatrixDoEachCalculation(function(t){return t.abs()})}conj(){return this.cloneMatrixDoEachCalculation(function(t){return t.conj()})}negate(){return this.cloneMatrixDoEachCalculation(function(t){return t.negate()})}sqrt(){return this.cloneMatrixDoEachCalculation(function(t){return t.sqrt()})}pow(t){const n=Matrix.createConstMatrix(t);if(!n.isScalar())throw"not set Scalar";return this.cloneMatrixDoEachCalculation(function(t){return t.pow(n.scalar)})}log(){return this.cloneMatrixDoEachCalculation(function(t){return t.log()})}exp(){return this.cloneMatrixDoEachCalculation(function(t){return t.exp()})}sin(){return this.cloneMatrixDoEachCalculation(function(t){return t.sin()})}cos(){return this.cloneMatrixDoEachCalculation(function(t){return t.cos()})}tan(){return this.cloneMatrixDoEachCalculation(function(t){return t.tan()})}atan(){return this.cloneMatrixDoEachCalculation(function(t){return t.atan()})}atan2(t){const n=Matrix.createConstMatrix(t);if(!n.isScalar)throw"not set Scalar";return this.cloneMatrixDoEachCalculation(function(t){return t.atan2(n.scalar)})}floor(){return this.cloneMatrixDoEachCalculation(function(t){return t.floor()})}ceil(){return this.cloneMatrixDoEachCalculation(function(t){return t.ceil()})}round(){return this.cloneMatrixDoEachCalculation(function(t){return t.round()})}fix(){return this.cloneMatrixDoEachCalculation(function(t){return t.fix()})}fract(){return this.cloneMatrixDoEachCalculation(function(t){return t.fract()})}_rot90(t){let n=1;if(1===arguments.length&&(n=(t%4+4)%4),0===n)return this;const e=new Array(this.row_length);for(let t=0;t<this.row_length;t++){e[t]=new Array(this.column_length);for(let n=0;n<this.column_length;n++)e[t][n]=this.matrix_array[t][n]}const i=this.matrix_array;if(1===n){i.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?i[t].splice(this.row_length):i[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)i[t][n]=e[this.row_length-n-1][t]}}else if(2===n)for(let t=0;t<this.row_length;t++)for(let n=0;n<this.column_length;n++)i[t][n]=e[this.row_length-t-1][this.column_length-n-1];else if(3===n){i.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?i[t].splice(this.row_length):i[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)i[t][n]=e[n][this.column_length-t-1]}}return this.row_length=i.length,this.column_length=i[0].length,this._clearCash(),this}_resize(t,n){if(t===this.row_length&&n===this.column_length)return this;if(t<=0||n<=0)throw"_resize";const e=Math.max(this.row_length,t),i=Math.max(this.column_length,n),r=this.matrix_array;for(let t=0;t<e;t++){t>=this.row_length&&(r[t]=new Array(i));for(let n=0;n<i;n++)(t>=this.row_length||n>=this.column_length)&&(r[t][n]=Complex.ZERO)}if(this.row_length>t&&r.splice(t),this.column_length>n)for(let t=0;t<r.length;t++)r[t].splice(n);return this.row_length=t,this.column_length=n,this._clearCash(),this}_delete_row(t){if(1===this.row_length||this.row_length<=t)throw"_delete_row";return this.matrix_array.splice(t,1),this.row_length--,this._clearCash(),this}_delete_column(t){if(1===this.column_length||this.column_length<=t)throw"_delete_column";for(let n=0;n<this.row_length;n++)this.matrix_array[n].splice(t,1);return this.column_length--,this._clearCash(),this}_exchange_row(t,n){if(1===this.row_length||this.row_length<=t||this.row_length<=n)throw"_exchange_row";if(t===n)return this;const e=this.matrix_array[t];return this.matrix_array[t]=this.matrix_array[n],this.matrix_array[n]=e,this._clearCash(),this}_exchange_column(t,n){if(1===this.column_length||this.column_length<=t||this.column_length<=n)throw"_exchange_column";if(t===n)return this;for(let e=0;e<this.row_length;e++){const i=this.matrix_array[e][t];this.matrix_array[e][t]=this.matrix_array[e][n],this.matrix_array[e][n]=i}return this._clearCash(),this}_concat_left(t){for(let n=0;n<this.row_length;n++)for(let e=0;e<t.column_length;e++)this.matrix_array[n].push(t.matrix_array[n][e]);return this.column_length+=t.column_length,this._clearCash(),this}_concat_bottom(t){for(let n=0;n<t.row_length;n++)this.matrix_array.push(t.matrix_array[n]);return this.row_length+=t.row_length,this._clearCash(),this}_max_row_number(t,n,e){let i=0,r=0,o=n||0;const s=e||this.row_length;for(;o<s;o++){const n=this.matrix_array[o][t].norm;n>r&&(r=n,i=o)}return{index:i,max:r}}_get_linear_dependence_vector(t){const n=new Matrix(this),e=n.matrix_array,i=t||1e-10,r=new Array(this.row_length);for(let t=0;t<this.row_length;t++)r[t]=t;for(let t=0;t<n.column_length;t++){let o=0;{let s=0,a=0;for(const n in r){const i=r[n],l=e[i][t].norm;l>s&&(s=l,a=n,o=i)}if(s<=i)continue;if(r.splice(a,1),t===n.column_length-1)break}for(const i in r){const s=r[i],a=e[s][t].div(e[o][t]);for(let i=t;i<n.column_length;i++)e[s][i]=e[s][i].sub(e[o][i].mul(a))}}return r}static _gram_schmidt_orthonormalization(t){const n=t.column_length,e=t.matrix_array,i=Matrix.zeros(n),r=Matrix.zeros(n),o=i.matrix_array,s=r.matrix_array,a=[],l=new Array(n);for(let t=0;t<n;t++){for(let i=0;i<n;i++)l[i]=e[i][t];if(t>0){for(let i=0;i<t;i++)for(let r=0;r<n;r++)s[i][t]=s[i][t].add(e[r][t].dot(o[r][i]));for(let e=0;e<t;e++)for(let i=0;i<n;i++)l[i]=l[i].sub(s[e][t].mul(o[i][e]))}for(let e=0;e<n;e++)s[t][t]=s[t][t].add(l[e].mul(l[e]));if(s[t][t]=s[t][t].sqrt(),s[t][t].isZero(1e-10)){a.push(t);for(let e=0;e<n;e++)o[e][t]=Complex.ZERO}else for(let e=0;e<n;e++)o[e][t]=l[e].div(s[t][t])}return{Q:i,R:r,non_orthogonalized:a}}_createOrthogonalVector(t){const n=new Matrix(this),e=n.matrix_array,i=t||1e-10,r=n._get_linear_dependence_vector(i);for(let t=r.length-1;t>=0;t--)e.splice(r[t],1),n.row_length--;const o=this.column_length-e.length;if(o<=0)return null;const s=new Random(0);let a=null;for(let t=0;t<100;t++){const t=n.T(),e=Matrix.createMatrixDoEachCalculation(function(){return new Complex(s.nextGaussian())},t.row_length,o);if(t._concat_left(e),0===(a=Matrix._gram_schmidt_orthonormalization(t)).non_orthogonalized.length)break}if(0!==a.non_orthogonalized.length)return console.log("miss"),null;const l=new Array(o),c=a.Q.matrix_array;for(let t=0;t<o;t++){l[t]=new Array(this.column_length);for(let n=0;n<this.column_length;n++)l[t][n]=c[n][this.column_length-o+t]}return new Matrix(l)}norm(t){if(0===arguments.length)return this.norm2;if(1===t)return this.norm1;if(2===t)return this.norm2;if(t===Number.POSITIVE_INFINITY||t===Number.NEGATIVE_INFINITY){const n=this.matrix_array;let e=t===Number.POSITIVE_INFINITY?0:Number.POSITIVE_INFINITY;for(let i=0;i<this.row_length;i++){let r=0;for(let t=0;t<this.column_length;t++)r+=n[i][t].norm;e=t===Number.POSITIVE_INFINITY?Math.max(e,r):Math.min(e,r)}return e}if(this.isVector()){let n=0;for(let e=0;e<this.length;e++)n=Math.pow(this.getComplex(e).norm,t);return Math.pow(n,1/t)}throw"norm"}inner(t,n){const e=this,i=Matrix.createConstMatrix(t),r=e.matrix_array,o=i.matrix_array,s=n||1;if(e.isScalar()&&i.isScalar())return new Matrix(e.scalar.dot(i.scalar));if(e.isVector()&&i.isVector()){let t=Complex.ZERO;for(let n=0;n<e.length;n++)t=t.add(e.getComplex(n).dot(i.getComplex(n)));return new Matrix(t)}if(e.row_length!==i.row_length||e.column_length!==i.column_length)throw"Matrix size does not match";if(1===s){const t=new Array(1);t[0]=new Array(e.column_length);for(let n=0;n<e.column_length;n++){let i=Complex.ZERO;for(let t=0;t<e.row_length;t++)i=i.add(r[t][n].dot(o[t][n]));t[0][n]=i}return new Matrix(t)}if(2===s){const t=new Array(e.row_length);for(let n=0;n<e.row_length;n++){let i=Complex.ZERO;for(let t=0;t<e.column_length;t++)i=i.add(r[n][t].dot(o[n][t]));t[n]=[i]}return new Matrix(t)}throw"dim"}rank(t){return Math.abs(this.row_length,this.column_length)-this._get_linear_dependence_vector(t).length}transpose(){const t=new Array(this.column_length);for(let n=0;n<this.column_length;n++){t[n]=new Array(this.row_length);for(let e=0;e<this.row_length;e++)t[n][e]=this.matrix_array[e][n]}return new Matrix(t)}ctranspose(){return this.transpose().conj()}T(){return this.ctranspose()}det(){if(!this.isSquare())throw"not square";const t=this.matrix_array,n=function(t){if(2===t.length)return t[0][0].mul(t[1][1]).sub(t[0][1].mul(t[1][0]));let e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=[],o=t[i][0];for(let n=0,e=0;n<t.length;n++)if(i!==n){r[e]=[];for(let i=1,o=0;i<t.length;i++,o++)r[e][o]=t[n][i];e++}e=i%2==0?e.add(o.mul(n(r))):e.sub(o.mul(n(r)))}return e};return new Matrix(n(t))}lup(){const t=Matrix.zeros(this.row_length),n=new Matrix(this),e=Matrix.eye(this.row_length),i=t.matrix_array,r=n.matrix_array;for(let o=0;o<this.column_length;o++){let s;{const i=n._max_row_number(o,o);if(s=i.index,0===i.max)continue;o!==s&&(t._exchange_row(o,s),n._exchange_row(o,s),e._exchange_row(o,s))}for(let t=o+1;t<this.row_length;t++){const n=r[t][o].div(r[o][o]);i[t][o]=n;for(let e=o;e<this.column_length;e++)r[t][e]=r[t][e].sub(r[o][e].mul(n))}}return t._resize(this.row_length,Math.min(this.row_length,this.column_length)),n._resize(Math.min(this.row_length,this.column_length),this.column_length),t._each(function(t,n,e){return n===e?Complex.ONE:t}),{L:t,U:n,P:e}}linsolve(t){if(!this.isSquare())throw"Matrix size does not match";const n=this.column_length,e=Matrix.createConstMatrix(t);if(e.row_length!==this.row_length||e.column_length>1)throw"Matrix size does not match";const i=new Matrix(this);i._concat_left(e);const r=i.matrix_array,o=i.column_length;for(let t=0;t<n-1;t++){{const n=i._max_row_number(t,t).index;i._exchange_row(t,n)}{const n=r[t][t].inv();for(let e=t,i=t;i<o;i++)r[e][i]=r[e][i].mul(n)}for(let e=t+1;e<n;e++){const n=r[e][t];for(let i=t;i<o;i++)r[e][i]=r[e][i].sub(r[t][i].mul(n))}}const s=new Array(n);s[n-1]=r[n-1][n].div(r[n-1][n-1]);for(let t=n-2;t>=0;t--){s[t]=r[t][o-1];for(let e=t+1;e<n;e++)s[t]=s[t].sub(r[t][e]*s[e]);s[t]=s[t].div(r[t][t])}const a=new Array(this.row_length);for(let t=0;t<this.row_length;t++)a[t]=[s[t]];return new Matrix(a)}qr(){const t=new Matrix(this),n=this.row_length,e=this.row_length,i=this.row_length,r=this.column_length,o=Math.max(this.row_length,this.column_length);t._resize(o,o);const s=Matrix._gram_schmidt_orthonormalization(t),a=s.Q,l=s.R,c=s.non_orthogonalized;if(0!==c.length){const t={};for(let n=0;n<c.length;n++)t[c[n]]=1;const n=[];for(let e=0;e<o;e++)if(!t[e]){const t=[];for(let n=0;n<o;n++)t[n]=a.matrix_array[n][e];n.push(t)}const e=new Matrix(n)._createOrthogonalVector();for(let t=0;t<c.length;t++){const n=c[t];for(let i=0;i<o;i++)a.matrix_array[i][n]=e.matrix_array[t][i]}}return a._resize(n,e),l._resize(i,r),{Q:a,R:l}}tridiagonalize(){if(!this.isSquare())throw"not square matrix";if(!this.isSymmetric())throw"not Symmetric";if(this.isComplex())throw"not Real Matrix";return MatrixTool.tridiagonalize(this)}eig(){if(!this.isSquare())throw"not square matrix";if(!this.isSymmetric())throw"not Symmetric";if(this.isComplex())throw"not Real Matrix";return MatrixTool.eig(this)}svd(){if(this.isComplex())throw"Unimplemented";const t=this.rank(),n=this.T().mul(this).eig(),e=Matrix.zeros(this.row_length,this.column_length);e._each(function(e,i,r){if(i===r&&i<t)return n.D.getComplex(i,i).sqrt()});const i=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?e.matrix_array[t][t].inv():Complex.ZERO},t),r=new Matrix(n.V)._resize(n.V.row_length,t);return{U:this.mul(r).mul(i).qr().Q,S:e,V:n.V}}pinv(){const t=this.svd(),n=t.U,e=t.S,i=t.V,r=Matrix.createMatrixDoEachCalculation(function(t,n){if(t===n){const n=e.matrix_array[t][t];return n.isZero()?Complex.ZERO:n.inv()}return Complex.ZERO},this.column_length,this.row_length);return i.mul(r).mul(n.T())}gammaln(){return this.cloneMatrixDoEachCalculation(function(t){return t.gammaln()})}gamma(){return this.cloneMatrixDoEachCalculation(function(t){return t.gamma()})}gammainc(t,n){const e=Matrix.createConstMatrix(t).scalar,i=1===arguments.length?n:"lower";return this.cloneMatrixDoEachCalculation(function(t){return t.gammainc(e,i)})}gampdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.gampdf(e,i)})}gamcdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.gamcdf(e,i)})}gaminv(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.gaminv(e,i)})}beta(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.beta(n)})}betainc(t,n,e){const i=Matrix.createConstMatrix(t).scalar,r=Matrix.createConstMatrix(n).scalar,o=2===arguments.length?e:"lower";return this.cloneMatrixDoEachCalculation(function(t){return t.betainc(i,r,o)})}betacdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betacdf(e,i)})}betapdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betapdf(e,i)})}betainv(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betainv(e,i)})}factorial(){return this.cloneMatrixDoEachCalculation(function(t){return t.factorial()})}nchoosek(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.nchoosek(n)})}erf(){return this.cloneMatrixDoEachCalculation(function(t){return t.erf()})}erfc(){return this.cloneMatrixDoEachCalculation(function(t){return t.erfc()})}normpdf(t,n){const e=arguments.length<=0?Complex.createConstMatrix(t).scalar:Complex.ZERO,i=arguments.length<=1?Complex.createConstMatrix(n).scalar:Complex.ONE;return this.cloneMatrixDoEachCalculation(function(t){return t.normpdf(e,i)})}normcdf(t,n){const e=arguments.length<=0?Complex.createConstMatrix(t).scalar:Complex.ZERO,i=arguments.length<=1?Complex.createConstMatrix(n).scalar:Complex.ONE;return this.cloneMatrixDoEachCalculation(function(t){return t.normcdf(e,i)})}norminv(t,n){const e=arguments.length<=0?Complex.createConstMatrix(t).scalar:Complex.ZERO,i=arguments.length<=1?Complex.createConstMatrix(n).scalar:Complex.ONE;return this.cloneMatrixDoEachCalculation(function(t){return t.norminv(e,i)})}tpdf(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.tpdf(n)})}tcdf(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.tcdf(n)})}tinv(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.tinv(n)})}tdist(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.tdist(e,i)})}tinv2(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.tinv2(n)})}chi2pdf(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.chi2pdf(n)})}chi2cdf(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.chi2cdf(n)})}chi2inv(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.chi2inv(n)})}fpdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.fpdf(e,i)})}fcdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.fcdf(e,i)})}finv(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.finv(e,i)})}sum(){const t=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n]};return this.__column_oriented_1_dimensional_processing(t)}mean(){const t=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n.div(t.length)]};return this.__column_oriented_1_dimensional_processing(t)}geomean(){const t=function(t){let n=Complex.ONE;for(let e=0;e<t.length;e++)n=n.mul(t[e]);return[n.sqrt()]};return this.__column_oriented_1_dimensional_processing(t)}var(t){const n=this.mean();let e=0;const i=0===arguments.length?0:Matrix.createConstMatrix(t).scalar.real,r=function(t){let r;r=n.isScalar()?n.scalar:n.getComplex(e++);let o=Complex.ZERO;for(let n=0;n<t.length;n++){const e=t[n].sub(r);o=o.add(e.dot(e))}return 1===t.length?[o.div(t.length)]:[o.div(t.length-1+i)]};return this.__column_oriented_1_dimensional_processing(r)}std(t){const n=0===arguments.length?0:Matrix.createConstMatrix(t).scalar.real,e=this.var(n);return e._each(function(t){return t.sqrt()}),e}cov(t){let n=0===arguments.length?0:Matrix.createConstMatrix(t).scalar.real;if(this.isVector())return this.var(n);n=1===this.row_length?1:n;const e=this.matrix_array,i=this.mean().matrix_array[0],r=new Array(this.column_length);for(let t=0;t<this.column_length;t++){const o=i[t];r[t]=new Array(this.column_length);for(let s=t;s<this.column_length;s++){const a=i[s];let l=Complex.ZERO;for(let n=0;n<this.row_length;n++)l=l.add(e[n][t].sub(o).dot(e[n][s].sub(a)));r[t][s]=l.div(this.row_length-1+n)}}for(let t=1;t<r[0].length;t++)for(let n=0;n<t;n++)r[t][n]=r[n][t];return new Matrix(r)}normalize(){const t=this.sub(this.mean());return t.ndiv(t.std())}corrcoef(){return this.normalize().cov()}sinc(){return this.cloneMatrixDoEachCalculation(function(t){return t.sinc()})}fft(t=!1){const n=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=Signal.fft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return t?this.__column_oriented_2_dimensional_processing(n):this.__column_oriented_1_dimensional_processing(n)}ifft(t=!1){const n=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=Signal.ifft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return t?this.__column_oriented_2_dimensional_processing(n):this.__column_oriented_1_dimensional_processing(n)}powerfft(){const t=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=Signal.powerfft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return this.__column_oriented_1_dimensional_processing(t)}dct(t=!1){if(this.isComplex())throw"dct don't support complex numbers.";const n=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=Signal.dct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return t?this.__column_oriented_2_dimensional_processing(n):this.__column_oriented_1_dimensional_processing(n)}idct(t=!1){if(this.isComplex())throw"idct don't support complex numbers.";const n=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=Signal.idct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return t?this.__column_oriented_2_dimensional_processing(n):this.__column_oriented_1_dimensional_processing(n)}fft2(){return this.fft(!0)}ifft2(){return this.ifft(!0)}dct2(){return this.dct2(!0)}idct2(){return this.idct(!0)}conv(t){const n=this,e=Matrix.createConstMatrix(t);if(n.isMatrix()||e.isMatrix())throw"conv don't support matrix numbers.";const i=new Array(n.length),r=new Array(n.length),o=new Array(e.length),s=new Array(e.length);if(n.isRow())for(let t=0;t<n.column_length;t++)i[t]=n.matrix_array[0][t].real,r[t]=n.matrix_array[0][t].imag;else for(let t=0;t<n.row_length;t++)i[t]=n.matrix_array[t][0].real,r[t]=n.matrix_array[t][0].imag;if(e.isRow())for(let t=0;t<e.column_length;t++)o[t]=e.matrix_array[0][t].real,s[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)o[t]=e.matrix_array[t][0].real,s[t]=e.matrix_array[t][0].imag;const a=Signal.conv(i,r,o,s),l=new Array(a.real.length);for(let t=0;t<a.real.length;t++)l[t]=new Complex([a.real[t],a.imag[t]]);const c=new Matrix([l]);return e.isRow()?c:c.transpose()}xcorr(t){if(!t)return this.xcorr(this);const n=this,e=Matrix.createConstMatrix(t);if(n.isMatrix()||e.isMatrix())throw"conv don't support matrix numbers.";const i=new Array(n.length),r=new Array(n.length),o=new Array(e.length),s=new Array(e.length);if(n.isRow())for(let t=0;t<n.column_length;t++)i[t]=n.matrix_array[0][t].real,r[t]=n.matrix_array[0][t].imag;else for(let t=0;t<n.row_length;t++)i[t]=n.matrix_array[t][0].real,r[t]=n.matrix_array[t][0].imag;if(e.isRow())for(let t=0;t<e.column_length;t++)o[t]=e.matrix_array[0][t].real,s[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)o[t]=e.matrix_array[t][0].real,s[t]=e.matrix_array[t][0].imag;const a=Signal.xcorr(i,r,o,s),l=new Array(a.real.length);for(let t=0;t<a.real.length;t++)l[t]=new Complex([a.real[t],a.imag[t]]);const c=new Matrix([l]);return n.isRow()?c:c.transpose()}static window(t,n,e){const i=Matrix.createConstMatrix(n).scalar.real,r=Signal.window(t,i,e);return new Matrix(r).transpose()}static hann(t,n){return Matrix.window("hann",t,n)}static hamming(t,n){return Matrix.window("hamming",t,n)}}const MathX={BigInteger:BigInteger,BigDecimal:BigDecimal,RoundingMode:BigDecimal.RoundingMode,MathContext:BigDecimal.MathContext,Complex:Complex,Matrix:Matrix,Random:Random},CSVTool={parseCSV:function(t,n){arguments.length<2&&(n=","),t=t.replace(/\r\n?|\n/g,"\n");const e=n.charCodeAt(0),i=[],r=t.length;let o="",s=0,a=0,l=!1,c=!1;for(let n=0;n<r;n++){let h=t.charCodeAt(n);if(34===h&&0===o.length)for(n++;n<r;n++)if(34===(h=t.charCodeAt(n))){if(n+1===r-1)break;if(34!==t.charCodeAt(n+1))break;n++,o+='"'}else o+=t.charAt(n);else{switch(h){case e:l=!0;break;case 13:case 10:c=!0}l?(l=!1,void 0===i[s]&&(i[s]=[]),i[s][a]=o,o="",a+=1):c?(c=!1,""===o&&0===a||(void 0===i[s]&&(i[s]=[]),i[s][a]=o,o="",s+=1,a=0)):o+=t.charAt(n)}n===r-1&&0!==a&&(i[s][a]=o)}return i},makeCSV:function(t,n,e){arguments.length<2&&(n=","),arguments.length<3&&(e="\r\n");let i="";const r=/["\r\n,\t]/;if(void 0!==t)for(let o=0;o<t.length;o++){if(void 0!==t[o])for(let e=0;e<t[o].length;e++){let s=t[o][e];r.test(s)&&(s='"'+(s=s.replace(/"/g,'""'))+'"'),i+=s,e!==t[o].length-1&&(i+=n)}i+=e}return i}};class File{constructor(t){if(this.isHTML="undefined"!=typeof window,this.isNode=!1,1!==arguments.length)throw"IllegalArgumentException";if("string"==typeof t||t instanceof String)this.pathname=t.replace(/\\/g,"/");else{if(!(t instanceof File))throw"IllegalArgumentException";this.pathname=t.getAbsolutePath()}}delete_(){throw"IllegalMethod"}exists(){throw"IllegalMethod"}copy(){throw"IllegalMethod"}move(){throw"IllegalMethod"}toString(){return this.getAbsolutePath()}getName(){if(this.isHTML){if(this.isDirectory())return"";const t=this.pathname.split("/");return t[t.length-1]}if(this.isNode)throw"IllegalMethod"}getParent(){const t=this.getAbsolutePath().match(/.*[\/\\]/)[0];return t.substring(0,t.length-1)}getParentFile(){return new File(this.getParent())}getExtensionName(){if(this.isHTML){const t=this.getName().split(".");return t[t.length-1]}if(this.isNode)throw"IllegalMethod"}isAbsolute(){if(this.isHTML)return this.getAbsolutePath()===this.pathname;if(this.isNode)throw"IllegalMethod"}isDirectory(){if(this.isHTML)return/\/$/.test(this.pathname);if(this.isNode)throw"IllegalMethod"}isFile(){if(this.isHTML)return/[^\/]$/.test(this.pathname);if(this.isNode)throw"IllegalMethod"}isHidden(){if(this.isNode)throw"IllegalMethod"}lastModified(){if(this.isNode)throw"IllegalMethod"}setLastModified(){if(this.isNode)throw"IllegalMethod"}length(){if(this.isNode)throw"IllegalMethod"}getFiles(){if(this.isNode)throw"IllegalMethod"}getSubFolders(){if(this.isNode)throw"IllegalMethod"}getNormalizedPathName(){if(""===this.pathname)return".\\";let t=this.pathname.replace(/\//g,"\\");return"\\"!==t.slice(-1)&&(t+="\\"),t}getAllFiles(){if(this.isNode)throw"IllegalMethod"}list(){if(this.isNode)throw"IllegalMethod"}getAbsolutePath(){if(this.isHTML){let t=null;if(/^http/.test(this.pathname))t=this.pathname;else{let n=window.location.toString();/\/$/.test(n)||(n=n.match(/.*\//)[0]),t=n+this.pathname}const n=t.match(/^http[^\/]+\/\/[^\/]+\//)[0],e=t.substr(n.length);let i=n;const r=e.split("/");let o;for(o=0;o<r.length;o++)""!==r[o]&&"."!==r[o]&&(".."!==r[o]?(i+=r[o],o!==r.length-1&&(i+="/")):i=i.substring(0,i.length-1).match(/.*\//)[0]);return i}if(this.isNode)throw"IllegalMethod"}mkdir(){if(this.isNode)throw"IllegalMethod"}mkdirs(){if(this.isNode)throw"IllegalMethod"}renameTo(){if(this.isNode)throw"IllegalMethod"}run(){if(this.isNode)throw"IllegalMethod"}writeLine(){if(this.isNode)throw"IllegalMethod"}download(t){if(this.isHTML){const n=this.getExtensionName().toLocaleString(),e=this;if("gif"===n||"jpg"===n||"png"===n||"bmp"===n||"svg"===n||"jpeg"===n){const n=new Image;n.onload=function(){e.dataImage=n,t(e)},n.src=this.pathname}else{const n=File.createXMLHttpRequest();if(null===n)return null;const i=function(){if(4===n.readyState){if(200!==n.status)return console.log("error downloadText "+e.pathname),null;e.dataText=n.responseText,t(e)}};n.onreadystatechange=i,n.open("GET",this.pathname,!0),n.send(null)}}else if(this.isNode)throw"IllegalMethod"}getImage(){if(this.isHTML)return this.dataImage}getText(){if(this.isHTML)return this.dataText;if(this.isNode)throw"IllegalMethod"}setText(){if(this.isNode)throw"IllegalMethod"}getCSV(t,n,e){if(this.isHTML)return CSVTool.parseCSV(this.dataText,t,e);if(this.isNode)throw"IllegalMethod"}setCSV(){if(this.isNode)throw"IllegalMethod"}getByte(){if(this.isNode)throw"IllegalMethod"}setByte(){if(this.isNode)throw"IllegalMethod"}static createTempFile(){if("undefined"!=typeof window)throw"not createTempFile"}static getCurrentDirectory(){if("undefined"!=typeof window){const t=new File("./");return t.getParent()}}static setCurrentDirectory(){if("undefined"!=typeof window)throw"not setCurrentDirectory"}static searchFile(){if("undefined"!=typeof window)throw"not searchFile"}static downloadFileList(t,n,e){let i,r=0;for(i=0;i<t.length;i++)t[i].download(function(i){return function(){r++,e&&e.length&&e[i]&&e[i](t[i]),r===t.length&&n&&n(t)}}(i))}static createXMLHttpRequest(){return new XMLHttpRequest}static getCSVTool(){return CSVTool}}class Format{static format(){let t=1;const n=arguments,e=function(t){if(t>=0)return t;{let n=~(t=-t)>>16&65535;const e=65535&~t;return(n*=65536)+e+1}},i=function(i){let r;const o=(r=(i=i.substring(1,i.length)).match(/.$/))[0];if("%"===o)return"%";null!==(r=i.match(/^[0-9]+\$/))&&(r=r[0],i=i.substring(r.length,i.length),r=r.substring(0,r.length-1),t=parseInt(r,10));let s=n[t];t+=1;let a=!1,l=!1,c=!1,h="";null!==(r=i.match(/^[-+ #0]+/))&&(r=r[0],i=i.substring(r.length,i.length),-1!==r.indexOf("#")&&(a=!0),-1!==r.indexOf("-")&&(l=!0),-1!==r.indexOf(" ")&&(h=" "),-1!==r.indexOf("+")&&(h="+"),-1!==r.indexOf("0")&&(c=!0));let u=0;null!==(r=i.match(/^([0-9]+|\*)/))&&(r=r[0],i=i.substring(r.length,i.length),-1!==r.indexOf("*")?(u=s,s=n[t],t+=1):u=parseInt(r,10));let g=!1,f=0;null!==(r=i.match(/^(\.((-?[0-9]+)|\*)|\.)/))&&(r=r[0],i=i.substring(r.length,i.length),g=!0,-1!==r.indexOf("*")?(f=s,s=n[t],t+=1):1===r.length?f=0:(r=r.substring(1,r.length),f=parseInt(r,10))),null!==(r=i.match(/^hh|h|ll|l|L|z|j|t/))&&(i=i.substring(r.length,i.length));let m="",_=!1;switch(o.toLowerCase()){case"d":case"i":case"u":case"b":case"o":case"x":_=!0;case"e":case"f":case"g":{let t,n="",i=0;switch(_?(isNaN(s)&&(s=parseInt(s,10)),"d"===o||"i"===o?(s<0&&(h="-",s=-s),s=Math.floor(s)):s=s>=0?Math.floor(s):Math.ceil(s)):(isNaN(s)&&(s=parseFloat(s)),s<0&&(h="-",s=-s),g||(f=6)),o.toLowerCase()){case"d":case"i":m+=s.toString(10);break;case"u":m+=e(s).toString(10);break;case"b":m+=e(s).toString(2),a&&(n="0b");break;case"o":m+=e(s).toString(8),a&&(n="0");break;case"x":case"X":m+=e(s).toString(16),a&&(n="0x");break;case"e":m+=s.toExponential(f);break;case"f":m+=s.toFixed(f);break;case"g":0===f&&(f=1),m+=s.toPrecision(f),a||-1===m.indexOf(".")||(m=(m=m.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e"))}if(_){if(g){t=f-m.length;for(let n=0;n<t;n++)m="0"+m}}else a&&-1===m.indexOf(".")&&(-1!==m.indexOf("e")?m=m.replace("e",".e"):m+=".");if(-1!==m.indexOf("e")){const t=function(t){const n=t.length;return 3===t.length?t.substring(0,n-1)+"00"+t.substring(n-1,n):t.substring(0,n-2)+"0"+t.substring(n-2,n)};m=m.replace(/e[+-][0-9]{1,2}$/,t)}if(i=m.length+n.length+h.length,t=u-i,l)for(let n=0;n<t;n++)m+=" ";if(c)for(let n=0;n<t;n++)m="0"+m;if(m=n+m,m=h+m,!c&&!l)for(let n=0;n<t;n++)m=" "+m;o.toUpperCase()===o&&(m=m.toUpperCase());break}case"c":isNaN(s)||(s=String.fromCharCode(s));case"s":{isNaN(s)||(s=s.toString(10)),m=s,g&&m.length>f&&(m=m.substring(0,f));const t=m.length,n=u-t;if(l)for(let t=0;t<n;t++)m+=" ";else{const t=c?"0":" ";for(let e=0;e<n;e++)m=t+m}break}case"%":m="%";break;case"p":case"n":m="(変換できません)"}return m};return n[0].replace(/%[^diubBoxXeEfFgGaAcspn%]*[diubBoxXeEfFgGaAcspn%]/g,i)}}const format=Format.format,toStringFromObj=function(t){return"string"==typeof t||t instanceof String?0===t.length?" ":t:void 0===t?typeof t:null===t?"null":"function"==typeof t.toString?t.toString():t instanceof Object?"Object":"null"};class CUIConsole{constructor(){this.output=CUIConsole._getOutput()}static _getOutput(){const t=function(){return"undefined"!=typeof WSH?null:"undefined"!=typeof console?console:"undefined"!=typeof window&&void 0!==window.console?window.console:null};let n=null;if(function(){return"undefined"!=typeof WSH}())n=/cscript\.exe$/i.test(WSH.FullName)?function(t){/\n$/.test(t)?WSH.StdOut.Write(t):WSH.StdOut.Write(t+"\n")}:WScript.Echo;else if(function(){return null!==t()}()){const e=t();n=e.log}else"undefined"!=typeof alert&&(n=alert);return n}getOutput(){return this.output}}class HtmlConsole{constructor(){this.root=null,this.element=null,this.isshow=!1,this.loglength=250,this.linelength=0}_getElement(){if(null!==this.element)return this.element;const t=document.createElement("div");return t.style.backgroundColor="black",t.style.color="white",t.style.display="block",t.style.margin="0px",t.style.padding="5px",t.style.fontFamily="Consolas, Courier New, Courier, Monaco, monospace",t.style.whiteSpace="pre",this.element=t,this.element}_initHTML(){if(null===this.root){let t;if(t=document.getElementById("senko_console")){let n=t.lastChild;for(;n;)t.removeChild(n),n=t.lastChild}else t=document.body;t.style.backgroundColor="black",t.style.margin="0px",t.style.padding="0px",t.style.overflowY="scroll",t.appendChild(this._getElement()),this.root=t}}isShow(){return this.isshow}setShow(t){if("boolean"!=typeof t)throw"not boolean";this._initHTML();const n=this._getElement();this.isshow!==t&&(this.isshow=t,n&&(n.style.display=this.isshow?"block":"none"))}_autoScroll(){if(null!==this.element&&null!==this.root){const t=this.root.clientHeight,n=this.element.clientHeight;n-t-1*t<=this.root.scrollTop&&(this.root.scrollTop=n)}}_addNewLine(){this._initHTML();const t=this._getElement(),n=document.createElement("p");n.innerText="> ",n.style.margin="0.2em 0px 0.2em 0px",n.style.padding="0px",t.appendChild(n),this.linelength++,this._cleaningLog()}_appendText(t){this._initHTML();const n=this._getElement().lastElementChild;n.innerText=n.innerText+t}_cleaningLog(){if(null!==this.element)for(;this.linelength>this.loglength;)this.element.removeChild(this.element.firstElementChild),this.linelength--}setLogLength(t){this.loglength=t}println(t){this._initHTML();const n=this._getElement();n&&(n.lastElementChild||this._addNewLine(),this._appendText(t),this._addNewLine()),this._autoScroll()}}const cui=(new CUIConsole).getOutput();let gui_obj=null,gui=null;(console||window&&window.console)&&(gui_obj=new HtmlConsole,gui=function(t){gui_obj.println(t)});let show_gui=!1,printbuffer="";class Log{static setGUI(){gui&&(show_gui=!0)}static setCUI(){show_gui=!1}static println(t){const n=printbuffer+toStringFromObj(t);printbuffer="",show_gui?gui(n):cui(n)}static print(t){printbuffer+=toStringFromObj(t)}static printf(){const t=[];for(let n=0;n<arguments.length;n++)t.push(arguments[n]);Log.print(format.apply(this,t))}}const Senko={};Senko._printbuffer="",Senko.File=File,Senko.format=Format.format,Senko.Log=Log,Senko.MathX=MathX,Senko.BigInteger=MathX.BigInteger,Senko.BigDecimal=MathX.BigDecimal,Senko.RoundingMode=MathX.RoundingMode,Senko.MathContext=MathX.MathContext,Senko.Complex=MathX.Complex,Senko.Matrix=MathX.Matrix,Senko.Random=MathX.Random;export default Senko;
