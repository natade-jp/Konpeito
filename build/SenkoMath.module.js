/*!
 * SenkoJS
 * https://github.com/natade-jp/SenkoJS
 * Copyright 2013-2019 natade
 *
 * The MIT license.
 * https://opensource.org/licenses/MIT
 */
class Random{constructor(){this.x=[];for(let t=0;t<521;t++)this.x[t]=0;if(arguments.length>=1)this.setSeed(arguments[0]);else{const t=(new Date).getTime()+Random.seedUniquifier&4294967295;Random.seedUniquifier=Random.seedUniquifier+1&4294967295,this.setSeed(t)}}static _unsigned32(t){return t<0?2147483648+(2147483647&t):t}_multiplication32(t,n){let e=(65535&t)*(65535&n),i=Random._unsigned32(e);return e=(65535&t)*(n>>>16),i=Random._unsigned32(i+((65535&e)<<16)),e=(t>>>16)*(65535&n),4294967295&(i=Random._unsigned32(i+((65535&e)<<16)))}_rnd521(){const t=this.x;for(let n=0;n<32;n++)t[n]^=t[n+489];for(let n=32;n<521;n++)t[n]^=t[n-32]}setSeed(t){let n=0;const e=this.x;for(let i=0;i<=16;i++){for(let e=0;e<32;e++)n=(n>>>1)+((t=this._multiplication32(t,1566083941)+1)<0?2147483648:0);e[i]=n}for(let t=16;t<521;t++)n=16===t?t:t-17,e[t]=e[n]<<23&4294967295^e[t-16]>>>9^e[t-1];for(let t=0;t<4;t++)this._rnd521();this.xi=0,this.haveNextNextGaussian=!1,this.nextNextGaussian=0}genrand_int32(){521===this.xi&&(this._rnd521(),this.xi=0);const t=Random._unsigned32(this.x[this.xi]);return this.xi=this.xi+1,t}next(t){return 0===t?0:32===t?this.genrand_int32():t<32?this.genrand_int32()>>>32-t:63===t?2147483648*this.next(32)+this.next(32):64===t?4294967296*this.next(32)+this.next(32):t<64?this.genrand_int32()*(1<<t-32)+(this.genrand_int32()>>>64-t):void 0}nextBytes(t){for(let n=0;n<t.length;n++)t[n]=this.next(8)}nextInt(){if(1===arguments.length){let t,n;const e=arguments[0];do{n=(t=Random._unsigned32(this.genrand_int32()))%e}while(t-n+e>4294967296);return n}return 4294967295&this.next(32)}nextLong(){return this.next(64)}nextBoolean(){return 0!==this.next(1)}nextFloat(){return this.next(24)/16777216}nextDouble(){return(134217728*this.next(26)+this.next(27))/9007199254740992}nextGaussian(){if(this.haveNextNextGaussian)return this.haveNextNextGaussian=!1,this.nextNextGaussian;const t=Math.sqrt(-2*Math.log(this.nextDouble())),n=2*Math.PI*this.nextDouble(),e=t*Math.sin(n);return this.nextNextGaussian=t*Math.cos(n),this.haveNextNextGaussian=!0,e}}Random.seedUniquifier=2271560481;class BigInteger{constructor(){if(this.element=[],this.sign=0,2===arguments.length&&void 0!==Random&&arguments[1]instanceof Random){this.sign=1;const t=arguments[0],n=arguments[1],e=1+(t-1>>4);let i;if(0===t)return;for(let t=0,r=0;t<e;t++)0===r?(i=n.nextInt(),this.element[t]=65535&i,r=1):(this.element[t]=i>>>16&65535,r=0);t%16!=0&&(this.element[this.element.length-1]&=(1<<t%16)-1),this._memory_reduction()}else if(3===arguments.length){if(void 0===Random)return;for(;;){const t=new BigInteger(arguments[0],arguments[2]);if(t.isProbablePrime(arguments[1])){this.element=t.element,this.sign=t.sign;break}}}else if(arguments.length>=1){this.sign=1;const t=arguments[0];if(t instanceof BigInteger){for(let t=0;t<arguments[0].element.length;t++)this.element[t]=arguments[0].element[t];this.sign=arguments[0].sign}else if("number"==typeof t||t instanceof Number){let t=arguments[0];t<0&&(this.sign=-1,t=-t),this.element=this._number_to_binary_number(t)}else if("string"==typeof t||t instanceof String){let t=arguments[0].replace(/\s/g,"").toLowerCase(),n=t.match(/^[-+]+/);null!==n&&(n=n[0],t=t.substring(n.length,t.length),-1!==n.indexOf("-")&&(this.sign=-1)),2===arguments.length?this.element=this._string_to_binary_number(t,arguments[1]):/^0x/.test(t)?this.element=this._string_to_binary_number(t.substring(2,t.length),16):/^0b/.test(t)?this.element=this._string_to_binary_number(t.substring(2,t.length),2):/^0/.test(t)?this.element=this._string_to_binary_number(t.substring(1,t.length),8):this.element=this._string_to_binary_number(t,10),1===this.element.length&&0===this.element[0]&&(this.element=[])}}}equals(t){if(t instanceof BigInteger||(t=new BigInteger(t)),this.signum()!==t.signum())return!1;if(this.element.length!==t.element.length)return!1;for(let n=0;n<t.element.length;n++)if(this.element[n]!==t.element[n])return!1;return!0}toString(t){0===arguments.length&&(t=10);const n=Math.floor(Math.log(1073741823)/Math.log(t)),e=Math.round(Math.pow(t,n));let i,r=[];for(i=0;i<n;i++)r[i]="0";r=r.join("");const o=this._binary_number_to_string(this.element,e),s=[];let a="";for(this.signum()<0&&(s[s.length]="-"),i=o.length-1;i>=0;i--)a=o[i].toString(t),i<o.length-1&&(s[s.length]=r.substring(0,n-a.length)),s[s.length]=a;return s.join("")}getShort(t){return t<0||this.element.length<=t?0:this.element[t]}byteValue(){let t=this.getShort(0);return(t&=255)>0&&this.sign<0&&(t=-t),t}shortValue(){let t=this.getShort(0);return(t&=65535)>0&&this.sign<0&&(t=-t),t}intValue(){let t=this.getShort(0)+(this.getShort(1)<<16);return(t&=4294967295)>0&&this.sign<0&&(t=-t),t}longValue(){let t=0;for(let n=3;n>=0;n--)t*=65536,t+=this.getShort(n);return this.sign<0&&(t=-t),t}floatValue(){return parseFloat(this.toString())}doubleValue(){return parseFloat(this.toString())}clone(){const t=new BigInteger;return t.element=this.element.slice(0),t.sign=this.sign,t}getLowestSetBit(){for(let t=0;t<this.element.length;t++)if(0!==this.element[t]){const n=this.element[t];for(let e=0;e<16;e++)if(0!=(n>>>e&1))return 16*t+e}return-1}bitLength(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t]){const n=this.element[t];for(let e=15;e>=0;e--)if(0!=(n>>>e&1))return 16*t+e+1}return 0}bitCount(){let t;const n=(t=this.sign>=0?this:this.add(new BigInteger(1))).bitLength();let e=0,i=0;for(let r=0;e<n;r++){const o=t.element[r];for(let t=0;t<16&&e<n;t++,e++)0!=(o>>>t&1)&&(i+=1)}return i}getTwosComplement(t){const n=this.clone();if(n.sign>=0)return n;{n.sign=1,0===arguments.length&&(t=n.bitLength());const e=n.element;for(let t=0;t<e.length;t++)e[t]^=65535;return t%16!=0&&(e[e.length-1]&=(1<<t%16)-1),n._add(new BigInteger(1)),n}}_and(t){t instanceof BigInteger||(t=new BigInteger(t));let n=this,e=t;const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i&r}return 0===this.bitLength()&&(this.element=[],this.sign=0),1===i||1===r?this.sign=1:-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}and(t){return this.clone()._and(t)}_or(t){t instanceof BigInteger||(t=new BigInteger(t));let n=this,e=t;const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i|r}return this.sign=-1===i||-1===r?-1:Math.max(i,r),-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}or(t){return this.clone()._or(t)}_xor(t){t instanceof BigInteger||(t=new BigInteger(t));let n=this,e=t;const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i^r}return this.sign=0!==i&&i!==r?-1:1,-1===this.sign&&(this.element=this.getTwosComplement(o).element),this}xor(t){return this.clone()._xor(t)}_not(){return this._add(new BigInteger(1))._negate()}not(){return this.clone()._not()}_andNot(t){return t instanceof BigInteger||(t=new BigInteger(t)),this._and(t.not())}andNot(t){return this.clone()._andNot(t)}_number_to_binary_number(t){if(t>4294967295)return this._string_to_binary_number(t.toFixed(),10);const n=[];for(;0!==t;)n[n.length]=1&t,t>>>=1;t=[];for(let e=0;e<n.length;e++)t[e>>>4]|=n[e]<<(15&e);return t}_string_to_binary_number(t,n){const e=Math.floor(Math.log(1073741823)/Math.log(n)),i=Math.round(Math.pow(n,e));let r=[];const o=[],s=Math.ceil(t.length/e);let a=t.length;for(let i=0;i<s;i++)a-=e,r[i]=a>=0?parseInt(t.substring(a,a+e),n):parseInt(t.substring(0,a+e),n);for(n=i;0!==r.length;){let t=0;for(let e=r.length-1;e>=0;e--){const i=r[e]+t*n;r[e]=i>>>1,t=1&i}o[o.length]=t,0===r[r.length-1]&&r.pop()}r=[];for(let t=0;t<o.length;t++)r[t>>>4]|=o[t]<<(15&t);return r}_binary_number_to_string(t,n){const e=function(t,e,i){const r=t.length;let o=0;for(let s=0;s<r;s++)i[s]=t[s]+(e.length>=s+1?e[s]:0)+o,i[s]>=n?(o=1,i[s]-=n):o=0;1===o&&(i[r]=1)},i=[0],r=[1];for(let n=0;n<t.length;n++)for(let o=0;o<16;o++)t[n]>>>o&1&&e(r,i,i),e(r,r,r);return i}_memory_allocation(t){const n=this.element.length<<4;if(n<t){const e=1+((t-n-1&4294967280)>>>4);for(let t=0;t<e;t++)this.element[this.element.length]=0}}_memory_reduction(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t])return void(t<this.element.length-1&&this.element.splice(t+1,this.element.length-t-1));this.sign=0,this.element=[]}gcd(t){t instanceof BigInteger||(t=new BigInteger(t));let n,e=this,i=t;for(;0!==i.signum();)n=e.remainder(i),e=i,i=n;return e}extgcd(t){t instanceof BigInteger||(t=new BigInteger(t));const n=new BigInteger(1),e=new BigInteger(0);let i,r,o,s,a=this,h=t,l=n,c=e,u=e,g=n;for(;0!==h.signum();){const t=a.divideAndRemainder(h);r=t[0],i=t[1],o=l.subtract(r.multiply(c)),s=u.subtract(r.multiply(g)),l=c,c=o,u=g,g=s,a=h,h=i}return[l,u,a]}_abs(){return this.sign*=this.sign,this}abs(){return this.clone()._abs()}_negate(){return this.sign*=-1,this}negate(){return this.clone()._negate()}signum(){return 0===this.element.length?0:this.sign}compareToAbs(t){if(t instanceof BigInteger||(t=new BigInteger(t)),this.element.length<t.element.length)return-1;if(this.element.length>t.element.length)return 1;for(let n=this.element.length-1;n>=0;n--)if(this.element[n]!==t.element[n]){const e=this.element[n]-t.element[n];return 0===e?0:e>0?1:-1}return 0}compareTo(t){return t instanceof BigInteger||(t=new BigInteger(t)),this.signum()!==t.signum()?this.sign>t.sign?1:-1:0===this.signum()?0:this.compareToAbs(t)*this.sign}max(t){return this.compareTo(t)>=0?this.clone():t.clone()}min(t){return this.compareTo(t)>=0?t.clone():this.clone()}_shift(t){if(0===t)return this;const n=this.element;if(1===t){let t=n.length-1;for(0!=(32768&n[t])&&(n[n.length]=1);t>=0;t--)n[t]<<=1,n[t]&=65535,t>0&&0!=(32768&n[t-1])&&(n[t]+=1)}else if(-1===t){for(let t=0;t<n.length;t++)n[t]>>>=1,t<n.length-1&&0!=(1&n[t+1])&&(n[t]|=32768);0===n[n.length-1]&&n.pop()}else{if(t>=16){const e=t>>>4;for(let t=n.length-1;t>=0;t--)n[t+e]=n[t];for(let t=e-1;t>=0;t--)n[t]=0;t&=15}else if(t<=-16){const e=-t>>>4;n.splice(0,e),t+=e<<4}if(0!==t)if(0<t){let e=0;for(let i=0;i<n.length;i++)n[i]=(n[i]<<t)+e,n[i]>65535?(e=n[i]>>>16,n[i]&=65535):e=0;0!==e&&(n[n.length]=e)}else{t=-t;for(let e=0;e<n.length;e++)e!==n.length-1?(n[e]+=n[e+1]<<16,n[e]>>>=t,n[e]&=65535):n[e]>>>=t;0===n[n.length-1]&&n.pop()}}return this}shift(t){return this.clone()._shift(t)}shiftLeft(t){return this.shift(t)}shiftRight(t){return this.shift(-t)}_add(t){t instanceof BigInteger||(t=new BigInteger(t));const n=this,e=t;let i=n.element,r=e.element;if(n.sign===e.sign){this._memory_allocation(r.length<<4);let t=0;for(let n=0;n<i.length;n++)i[n]+=(r.length>=n+1?r[n]:0)+t,i[n]>65535?(t=1,i[n]&=65535):t=0;0!==t&&(i[i.length]=t)}else{const t=n.compareToAbs(e);if(0===t)return this.element=[],this.sign=1,this;if(-1===t){this.sign=e.sign;const t=i;i=r.slice(0),r=t}let o=0;for(let t=0;t<i.length;t++)i[t]-=(r.length>=t+1?r[t]:0)+o,i[t]<0?(i[t]+=65536,o=1):o=0;this.element=i,this._memory_reduction()}return this}add(t){return this.clone()._add(t)}_subtract(t){t instanceof BigInteger||(t=new BigInteger(t));const n=t.sign,e=this._add(t._negate());return t.sign=n,e}subtract(t){return this.clone()._subtract(t)}_multiply(t){const n=this.multiply(t);return this.element=n.element,this.sign=n.sign,this}multiply(t){t instanceof BigInteger||(t=new BigInteger(t));const n=new BigInteger,e=new BigInteger,i=t,r=this.element,o=i.element,s=n.element;for(let t=0;t<r.length;t++){e.element=[];const i=e.element;let a=0;for(let n=0;n<o.length;n++)i[n]=r[t]*o[n]+a,i[n]>65535?(a=i[n]>>>16,i[n]&=65535):a=0;0!==a&&(i[i.length]=a);for(let n=i.length-1;n>=0;n--)i[n+t]=i[n];for(let n=t-1;n>=0;n--)i[n]=0;a=0,n._memory_allocation(i.length<<4);for(let n=t;n<s.length;n++)s[n]+=(i.length>=n+1?i[n]:0)+a,s[n]>65535?(a=1,s[n]&=65535):a=0;0!==a&&(s[s.length]=a)}return n.sign=this.sign*t.sign,n}_divideAndRemainder(t){t instanceof BigInteger||(t=new BigInteger(t));const n=[];if(0===t.signum())return n[0]=1/0,n[1]=NaN,n;const e=this.compareToAbs(t);if(e<0)return n[0]=new BigInteger(0),n[1]=this.clone(),n;if(0===e)return n[0]=new BigInteger(1),n[0].sign=this.sign*t.sign,n[1]=new BigInteger(0),n;const i=new BigInteger(1),r=this.bitLength()-t.bitLength(),o=this.clone()._abs(),s=t.shift(r)._abs(),a=new BigInteger;for(let t=0;t<=r&&(o.compareToAbs(s)>=0&&(o._subtract(s),a._add(i)),t!==r);t++)s._shift(-1),a._shift(1);return n[0]=a,n[0].sign=this.sign*t.sign,n[1]=o,n[1].sign=this.sign,n}divideAndRemainder(t){return this.clone()._divideAndRemainder(t)}_divide(t){return this._divideAndRemainder(t)[0]}divide(t){return this.clone()._divide(t)}_remainder(t){return this._divideAndRemainder(t)[1]}remainder(t){return this.clone()._remainder(t)}_mod(t){if(t instanceof BigInteger||(t=new BigInteger(t)),t.signum()<0)return null;const n=this._divideAndRemainder(t);return n[1]instanceof BigInteger?n[1].signum()>=0?n[1]:n[1]._add(t):null}mod(t){return this.clone()._mod(t)}_setBit(t){return this._memory_allocation(t+1),this.element[t>>>4]|=1<<(15&t),this}setBit(t){return this.clone()._setBit(t)}_flipBit(t){return this._memory_allocation(t+1),this.element[t>>>4]^=1<<(15&t),this}flipBit(t){return this.clone()._flipBit(t)}clearBit(t){const n=this.clone();return n.element[t>>>4]&=~(1<<(15&t)),n._memory_reduction(),n}testBit(t){return this.element[t>>>4]>>>(15&t)&1}pow(t){let n,e;for(n=new BigInteger(this),e=new BigInteger(1);0!==t;)0!=(1&t)&&(e=e.multiply(n)),n=n.multiply(n),t>>>=1;return e}modPow(t,n){n=new BigInteger(n);let e=new BigInteger(this),i=new BigInteger(1);const r=new BigInteger(t);for(;0!==r.element.length;)0!=(1&r.element[0])&&(i=i.multiply(e).mod(n)),e=e.multiply(e).mod(n),r._shift(-1);return i}modInverse(t){t=new BigInteger(t);const n=this.extgcd(t),e=new BigInteger(1);return 0!==n[2].compareTo(e)?null:n[0]._add(t)._mod(t)}isProbablePrime(t){const n=this.element;if(0===n.length||1===n.length&&n[0]<=2)return!0;if(0==(1&n[0])||t<=0)return!1;if(void 0===Random)return!1;t>>=1;const e=new BigInteger(0),i=new BigInteger(1),r=this,o=r.bitLength(),s=r.subtract(i),a=s.getLowestSetBit(),h=s.shift(-a),l=new Random;let c,u;for(let n=0;n<t;n++){do{c=new BigInteger(o,l)}while(0===c.compareTo(e)||-1!==c.compareTo(r));if(0!==(c=c.modPow(h,r)).compareTo(i)){u=!0;for(let t=0;t<=a;t++){if(0===c.compareTo(s)){u=!1;break}t<a&&(c=c.multiply(c)._mod(r))}if(u)return!1}}return!0}nextProbablePrime(){if(void 0===Random)return new BigInteger(0);const t=this.clone(),n=new BigInteger(1);for(;;)if(t._add(n),t.isProbablePrime(100))break;return t}static valueOf(t){return new BigInteger(t)}static probablePrime(t,n){return new BigInteger(t,100,n)}}BigInteger.ONE=new BigInteger(1),BigInteger.TEN=new BigInteger(10),BigInteger.ZERO=new BigInteger(0);class BigDecimal{constructor(){this.integer=0,this._scale=0;let t=0,n=0,e=null;if(arguments.length>=1&&(t=arguments[0]),arguments.length>=2&&(n=arguments[1]),arguments.length>=3&&(e=arguments[2]),n instanceof MathContext&&(e=n),t instanceof BigDecimal)this.integer=t.integer.clone(),this._scale=t._scale,this.int_string=t.int_string;else if(t instanceof BigInteger)this.integer=t.clone(),this._scale=n;else if("number"==typeof t)if(t===Math.floor(t))this.integer=new BigInteger(t),this._scale=0;else{for(this._scale=0;;)if(t*=10,this._scale=this._scale+1,t===Math.floor(t))break;this.integer=new BigInteger(t)}else if("string"==typeof t){this._scale=0;let n,e=t.replace(/\s/g,"").toLowerCase(),i="";null!==(n=e.match(/^[+-]+/))&&(n=n[0],e=e.substr(n.length),-1!==n.indexOf("-")&&(i+="-")),null!==(n=e.match(/^[0-9]+/))&&(n=n[0],e=e.substr(n.length),i+=n),null!==(n=e.match(/^\.[0-9]+/))&&(n=n[0],e=e.substr(n.length),n=n.substr(1),this._scale=this._scale+n.length,i+=n),null!==(n=e.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),this._scale=this._scale-parseInt(n,10)),this.integer=new BigInteger(i,10)}if(e instanceof MathContext){const t=this.round(e);this.integer=t.integer,this._scale=t._scale}}_getUnsignedIntegerString(){return void 0===this.int_string&&(this.int_string=this.integer.toString(10).replace(/^-/,"")),this.int_string}clone(){return new BigDecimal(this)}scale(){return this._scale}signum(){return this.integer.signum()}precision(){return this._getUnsignedIntegerString().length}unscaledValue(){return new BigInteger(this.integer)}toScientificNotation(t){const n=this._getUnsignedIntegerString();let e=this.scale();const i=[];let r,o;if(-1===this.signum()&&(i[i.length]="-"),(e=-t-e)>=0)for(i[i.length]=n,r=0;r<e;r++)i[i.length]="0";else if(0<(o=this.precision()+e))i[i.length]=n.substring(0,o),i[i.length]=".",i[i.length]=n.substring(o,n.length);else{for(o=-o,i[i.length]="0.",r=0;r<o;r++)i[i.length]="0";i[i.length]=n}return i[i.length]="E",t>=0&&(i[i.length]="+"),i[i.length]=t,i.join("")}toString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(t)}toEngineeringString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(3*Math.floor(t/3))}toPlainString(){return 0===this.scale()?this.signum()<0?"-"+this._getUnsignedIntegerString():this._getUnsignedIntegerString():this.toScientificNotation(0).match(/^[^E]*/)[0]}ulp(){return new BigDecimal(BigInteger.ONE,this.scale())}setScale(t,n){if(this.scale()===t)return this.clone();n=1===arguments.length?RoundingMode.UNNECESSARY:RoundingMode.getRoundingMode(n);let e=this._getUnsignedIntegerString();const i=this.signum(),r=i>=0?"":"-",o=t-this.scale();if(0<=o){let n;for(n=0;n<o;n++)e+="0";return new BigDecimal(new BigInteger(r+e),t)}const s=e.length+o,a=s+1;if(s<=0){const e=(i+n.getAddNumber(i))/10;return new BigDecimal(new BigInteger(e),t)}{const i=e.match(/0+$/),a=null!==i?i[0].length:0;if(a+o>=0||n===RoundingMode.DOWN)return new BigDecimal(new BigInteger(r+e.substring(0,s)),t)}{const o=(e=e.substring(0,a)).length>1?2:1,s=parseInt(e.substring(e.length-o,e.length))*i,h=new BigInteger(r+e),l=new BigInteger(n.getAddNumber(s));return e=h.add(l).toString(),new BigDecimal(new BigInteger(e.substring(0,e.length-1)),t)}}round(t){if(!(t instanceof MathContext))throw"not MathContext";const n=t.getPrecision(),e=n-this.precision();if(0===e||0===n)return this.clone();const i=this.setScale(this.scale()+e,t.getRoundingMode());if(e>0)return i;if(i.precision()===t.getPrecision())return i;const r=i.integer.signum()>=0?"":"-",o=i._getUnsignedIntegerString(),s=r+o.substring(0,o.length-1);return new BigDecimal(new BigInteger(s),i.scale()-1)}abs(t){const n=this.clone();if(n.integer=n.integer.abs(),1===arguments.length)return n;if(!(t instanceof MathContext))throw"not MathContext";return n.round(t)}plus(t){const n=this.clone();if(1===arguments.length)return n;if(!(t instanceof MathContext))throw"not MathContext";return n.round(t)}negate(t){const n=this.clone();if(n.integer=n.integer.negate(),1===arguments.length)return n;if(!(t instanceof MathContext))throw"not MathContext";return n.round(t)}compareTo(t){if(!(t instanceof BigDecimal))throw"not BigDecimal";const n=this,e=t;{const t=n.signum(),i=e.signum();if(0===t&&t===i)return 0;if(0===t)return-i;if(0===i)return t}if(n._scale===e._scale)return n.integer.compareTo(e.integer);if(n._scale>e._scale){const t=e.setScale(n._scale);return n.integer.compareTo(t.integer)}{const t=n.setScale(e._scale);return t.integer.compareTo(e.integer)}}equals(t){if(!(t instanceof BigDecimal))throw"not BigDecimal";return this._scale===t._scale&&this.integer.equals(t.integer)}min(t){if(!(t instanceof BigDecimal))throw"not BigDecimal";return this.compareTo(t)<=0?this.clone():t.clone()}max(t){if(!(t instanceof BigDecimal))throw"not BigDecimal";return this.compareTo(t)>=0?this.clone():t.clone()}movePointLeft(t){let n=this.scaleByPowerOfTen(-t);return n=n.setScale(Math.max(this.scale()+t,0))}movePointRight(t){let n=this.scaleByPowerOfTen(t);return n=n.setScale(Math.max(this.scale()-t,0))}scaleByPowerOfTen(t){const n=this.clone();return n._scale=this.scale()-t,n}stripTrailingZeros(){const t=this.signum()>=0?"":"-",n=this.integer.toString(10).replace(/^-/,""),e=n.match(/0+$/);let i=null!==e?e[0].length:0;i===n.length&&(i=n.length-1);const r=this.scale()-i;return new BigDecimal(new BigInteger(t+n.substring(0,n.length-i)),r)}add(t,n){if(1===arguments.length&&(n=MathContext.UNLIMITED),!(t instanceof BigDecimal))throw"not BigDecimal";if(!(n instanceof MathContext))throw"not MathContext";const e=this,i=t,r=Math.max(e._scale,i._scale);if(e._scale===i._scale)return new BigDecimal(e.integer.add(i.integer),r,n);if(e._scale>i._scale){const t=i.setScale(e._scale);return new BigDecimal(e.integer.add(t.integer),r,n)}{const t=e.setScale(i._scale);return new BigDecimal(t.integer.add(i.integer),r,n)}}subtract(t,n){if(1===arguments.length&&(n=MathContext.UNLIMITED),!(t instanceof BigDecimal))throw"not BigDecimal";if(!(n instanceof MathContext))throw"not MathContext";const e=this,i=t,r=Math.max(e._scale,i._scale);if(e._scale===i._scale)return new BigDecimal(e.integer.subtract(i.integer),r,n);if(e._scale>i._scale){const t=i.setScale(e._scale);return new BigDecimal(e.integer.subtract(t.integer),r,n)}{const t=e.setScale(i._scale);return new BigDecimal(t.integer.subtract(i.integer),r,n)}}multiply(t,n){if(1===arguments.length&&(n=MathContext.UNLIMITED),!(t instanceof BigDecimal))throw"not BigDecimal";if(!(n instanceof MathContext))throw"not MathContext";const e=this,i=t,r=e.integer.multiply(i.integer),o=e._scale+i._scale;return new BigDecimal(r,o,n)}divideToIntegralValue(t,n){if(1===arguments.length&&(n=MathContext.UNLIMITED),!(t instanceof BigDecimal))throw"not BigDecimal";if(!(n instanceof MathContext))throw"not MathContext";const e=function(t){let n,e="1";for(n=0;n<t;n++)e+="0";return new BigInteger(e)};if(0===t.compareTo(BigDecimal.ZERO))throw"ArithmeticException";const i=this,r=t;let o=i.integer,s=r.integer;const a=i._scale-r._scale;i._scale>r._scale?s=s.multiply(e(a)):i._scale<r._scale&&(o=o.multiply(e(-a)));const h=o.divide(s),l=h.signum();if(0!==l){const t=h.toString(10).replace(/^-/,"");if(0!==n.getPrecision()&&t.length>n.getPrecision())throw"ArithmeticException";if(t.length<=-a){const n=t.match(/0+$/),e=null!==n?n[0].length:0,i=l>=0?"":"-";return new BigDecimal(new BigInteger(i+t.substring(0,t.length-e)),-e)}}let c=new BigDecimal(h);return c=c.setScale(a,RoundingMode.UP),c=c.round(n)}divideAndRemainder(t,n){if(1===arguments.length&&(n=MathContext.UNLIMITED),!(t instanceof BigDecimal))throw"not BigDecimal";if(!(n instanceof MathContext))throw"not MathContext";const e=this.divideToIntegralValue(t,n);return[e,this.subtract(e.multiply(t,n),n)]}divide(t,n,e){if(!(t instanceof BigDecimal))throw"not BigDecimal";const i=this,r=t;let o,s=null,a=MathContext.UNLIMITED,h=0,l=!1;if(1===arguments.length)h=i.scale()-r.scale(),l=!0;else if(2===arguments.length)o=n,h=i.scale(),l=!0,s=o instanceof MathContext?(a=o).getRoundingMode():RoundingMode.getRoundingMode(arguments[0]);else{if(3!==arguments.length)throw"The argument is over.";if(!("number"==typeof n||n instanceof Number))throw"scale is not Integer";h=n,s=(o=e)instanceof MathContext?(a=o).getRoundingMode():RoundingMode.getRoundingMode(arguments[0])}if(0===r.compareTo(BigDecimal.ZERO))throw"ArithmeticException";let c,u=i;const g=[];let m,f,_,x;x=BigDecimal.ZERO;const M=a.getPrecision(),w=0!==M?M+8:262143;for(c=0;c<w&&(m=u.divideAndRemainder(r,MathContext.UNLIMITED),f=m[0],_=m[1],x=x.add(f.scaleByPowerOfTen(-c),MathContext.UNLIMITED),0!==_.compareTo(BigDecimal.ZERO));c++){if(0===M){if(g[_._getUnsignedIntegerString()])throw"ArithmeticException "+x+"["+_._getUnsignedIntegerString()+"]";g[_._getUnsignedIntegerString()]=!0}u=_.scaleByPowerOfTen(1)}if(l)try{x=x.setScale(h,s)}catch(t){}else x=x.setScale(h,s);return x=x.round(a)}toBigInteger(){const t=this.toPlainString().replace(/\.\d*$/,"");return new BigInteger(t.toPlainString())}toBigIntegerExact(){const t=this.setScale(0,RoundingMode.UNNECESSARY);return new BigInteger(t.toPlainString())}longValue(){let t=this.toBigInteger();return t=t.longValue()}longValueExact(){let t=this.toBigIntegerExact();return t=t.longValue()}intValue(){let t=this.toBigInteger();return 4294967295&(t=t.intValue())}intValueExact(){let t=this.toBigIntegerExact();if((t=t.longValue())<-2147483648||2147483647<t)throw"ArithmeticException";return t}floatValue(){const t=this.precision();return MathContext.DECIMAL32.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}doubleValue(){const t=this.precision();return MathContext.DECIMAL64.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}pow(t,n){if(Math.abs(t)>999999999)throw"ArithmeticException";if(1===arguments.length&&(n=MathContext.UNLIMITED),!(n instanceof MathContext))throw"not MathContext";if(0===n.getPrecision()&&t<0)throw"ArithmeticException";if(n.getPrecision()>0&&t>n.getPrecision())throw"ArithmeticException";let e,i;for(e=this.clone(),i=BigDecimal.ONE;0!==t;)0!=(1&t)&&(i=i.multiply(e,MathContext.UNLIMITED)),e=e.multiply(e,MathContext.UNLIMITED),t>>>=1;return i.round(n)}static valueOf(t,n){if(1===arguments.length)return new BigDecimal(t);if(2===arguments.length){if("number"==typeof t&&t===Math.floor(t))return new BigDecimal(new BigInteger(t),n);throw"IllegalArgumentException"}throw"IllegalArgumentException"}}const RoundingMode={UP:{toString:function(){return"UP"},getAddNumber:function(t){return t%=10,0===t?0:t>0?10-t:-(10+t)}},DOWN:{toString:function(){return"DOWN"},getAddNumber:function(t){return-(t%=10)}},CEILING:{toString:function(){return"CEILING"},getAddNumber:function(t){return t%=10,0===t?0:t>0?10-t:-t}},FLOOR:{toString:function(){return"FLOOR"},getAddNumber:function(t){return t%=10,0===t?0:t>0?-t:-(10+t)}},HALF_UP:{toString:function(){return"HALF_UP"},getAddNumber:function(t){const n=(t%=10)>=0?1:-1;return Math.abs(t)<5?-1*t:n*(10-Math.abs(t))}},HALF_DOWN:{toString:function(){return"HALF_DOWN"},getAddNumber:function(t){const n=(t%=10)>=0?1:-1;return Math.abs(t)<6?-1*t:n*(10-Math.abs(t))}},HALF_EVEN:{toString:function(){return"HALF_EVEN"},getAddNumber:function(t){let n,e;(t%=100)<0?(n=-1,e=1&Math.ceil(t/10)):(n=1,e=1&Math.floor(t/10));let i;return i=1===e?5:6,t%=10,Math.abs(t)<i?-1*t:n*(10-Math.abs(t))}},UNNECESSARY:{toString:function(){return"UNNECESSARY"},getAddNumber:function(t){if(0===(t%=10))return 0;throw"ArithmeticException"}},valueOf:function(t){if(null===t)throw"NullPointerException";const n=RoundingMode.values;for(let e=0;e<n.length;e++)if(n[e].toString()===t)return n[e];throw"IllegalArgumentException"},getRoundingMode:function(t){let n;switch(t){case RoundingMode.CEILING:case RoundingMode.DOWN:case RoundingMode.FLOOR:case RoundingMode.HALF_DOWN:case RoundingMode.HALF_EVEN:case RoundingMode.HALF_UP:case RoundingMode.UNNECESSARY:case RoundingMode.UP:n=t;break;default:"number"==typeof t||t instanceof Number?n=RoundingMode.values[t]:("string"==typeof t||t instanceof String)&&(n=RoundingMode.valueOf(t))}if(!n)throw"Not RoundingMode";return n}};RoundingMode.values={0:RoundingMode.CEILING,1:RoundingMode.DOWN,2:RoundingMode.FLOOR,3:RoundingMode.HALF_DOWN,4:RoundingMode.HALF_EVEN,5:RoundingMode.HALF_UP,6:RoundingMode.UNNECESSARY,7:RoundingMode.UP};class MathContext{constructor(){this.precision=0,this.roundingMode=RoundingMode.HALF_UP;let t,n=0,e=0;if(arguments.length>=1&&(n=arguments[0]),arguments.length>=2&&(e=arguments[1]),"string"==typeof n||n instanceof String?(null!==(t=n.match(/precision=\d+/))&&(t=t[0].substring("precision=".length,t[0].length),this.precision=parseInt(t,10)),null!==(t=n.match(/roundingMode=\w+/))&&(t=t[0].substring("roundingMode=".length,t[0].length),this.roundingMode=RoundingMode.valueOf(t))):1===arguments.length?this.precision=n:2===arguments.length&&(this.precision=n,this.roundingMode=e),this.precision<0)throw"IllegalArgumentException"}getPrecision(){return this.precision}getRoundingMode(){return this.roundingMode}equals(t){return t instanceof MathContext&&t.toString()===this.toString()}toString(){return"precision="+this.precision+" roundingMode="+this.roundingMode.toString()}}MathContext.UNLIMITED=new MathContext(0,RoundingMode.HALF_UP),MathContext.DECIMAL32=new MathContext(7,RoundingMode.HALF_EVEN),MathContext.DECIMAL64=new MathContext(16,RoundingMode.HALF_EVEN),MathContext.DECIMAL128=new MathContext(34,RoundingMode.HALF_EVEN),BigDecimal.RoundingMode=RoundingMode,BigDecimal.MathContext=MathContext,BigDecimal.ZERO=new BigDecimal(0),BigDecimal.ONE=new BigDecimal(1),BigDecimal.TEN=new BigDecimal(10),BigDecimal.ROUND_CEILING=RoundingMode.CEILING,BigDecimal.ROUND_DOWN=RoundingMode.DOWN,BigDecimal.ROUND_FLOOR=RoundingMode.FLOOR,BigDecimal.ROUND_HALF_DOWN=RoundingMode.HALF_DOWN,BigDecimal.ROUND_HALF_EVEN=RoundingMode.HALF_EVEN,BigDecimal.ROUND_HALF_UP=RoundingMode.HALF_UP,BigDecimal.ROUND_UNNECESSARY=RoundingMode.UNNECESSARY,BigDecimal.ROUND_UP=RoundingMode.UP;class Statistics{static gammaln(t){const n=Math.log(2*Math.PI);let e,i;for(e=1;t<16;)e*=t,t++;const r=1/(t*t);return i=-15238221.539407417,i*=r,i=691472.268851313,i*=r,i=-36108.77125372499,i*=r,i=8553103/6/650,i*=r,i=-156.84828462600203,i*=r,i=854513/138/462,i*=r,i=-174611/330/380,i*=r,i=43867/798/306,i*=r,i=-3617/510/240,i*=r,i+=7/6/182,i*=r,i+=-691/2730/132,i*=r,i+=5/66/90,i*=r,i+=-1/30/56,i*=r,i+=1/42/30,i*=r,i+=-1/30/12,i*=r,i+=1/6/2,i/=t,i+=.5*n,i+=-Math.log(e)-t+(t-.5)*Math.log(t)}static gamma(t){return t<0?Math.PI/(Math.sin(Math.PI*t)*Math.exp(Statistics.gammaln(1-t))):Math.exp(Statistics.gammaln(t))}static beta(t,n){return Math.exp(Statistics.gammaln(t)+Statistics.gammaln(n)-Statistics.gammaln(t+n))}static factorial(t){const n=Statistics.gamma(t+1);return(0|t)===t?Math.round(n):n}static nchoosek(t,n){return Math.round(Statistics.factorial(t)/(Statistics.factorial(t-n)*Statistics.factorial(n)))}static p_beta(t,n,e){let i,r,o,s;if(n<=0)return Number.POSITIVE_INFINITY;if(e<=0)return t<1?0:1===t?1:Number.POSITIVE_INFINITY;if(t>(n+1)/(n+e+2))return 1-Statistics.p_beta(1-t,e,n);if(t<=0)return 0;for(o=n*Math.log(t),o+=e*Math.log(1-t),o+=Statistics.gammaln(n+e),o-=Statistics.gammaln(n)+Statistics.gammaln(e),o=Math.exp(o),r=o/=n,i=1;i<1e3;i++)if(o*=n+e+i-1,o*=t,o/=n+i,s=r,(r+=o)===s)return r;return Number.NaN}static q_beta(t,n,e){return 1-Statistics.p_beta(t,n,e)}static betainc(t,n,e,i){if("lower"===i)return Statistics.p_beta(t,n,e);if("upper"===i)return Statistics.q_beta(t,n,e);if(3===arguments.length)return Statistics.betainc(t,n,e,"lower");throw"betainc unsupported argument ["+i+"]"}static betacdf(t,n,e){return Statistics.betainc(t,n,e)}static betapdf(t,n,e){return Math.pow(t,n-1)*Math.pow(1-t,e-1)/Statistics.beta(n,e)}static betainv(t,n,e){if(t<0||t>1)return Number.NaN;if(1==t&&n>0&&e>0)return 1;let i;i=0==e?1-1e-14:0==n?1e-14:n/(n+e);let r,o=1;for(let s=0;s<1e4||Math.abs(o)>1e-14;s++)(r=i-(o=(Statistics.betacdf(i,n,e)-t)/Statistics.betapdf(i,n,e)))<1e-14?r=.1*i:r>1-1e-14&&(r=1-.1*(1-i)),i=r;return i}static p_gamma(t,n,e){let i,r,o,s;if(t>=1+n)return 1-Statistics.q_gamma(t,n,e);if(0===t)return 0;for(r=o=Math.exp(n*Math.log(t)-t-e)/n,i=1;i<1e3;i++)if(o*=t/(n+i),s=r,(r+=o)==s)return r;return Number.NaN}static q_gamma(t,n,e){let i,r,o,s,a,h=1,l=1+t-n;if(t<1+n)return 1-Statistics.p_gamma(t,n,e);for(r=(o=Math.exp(n*Math.log(t)-t-e))/l,i=2;i<1e3;i++)if(s=((i-1-n)*(l-h)+(i+t)*l)/i,h=l,l=s,o*=(i-1-n)/i,s=o/(h*l),a=r,(r+=s)==a)return r;return Number.NaN}static gammainc(t,n,e){if("lower"===e)return Statistics.p_gamma(t,n,Statistics.gammaln(n));if("upper"===e)return Statistics.q_gamma(t,n,Statistics.gammaln(n));if(2===arguments.length)return Statistics.gammainc(t,n,"lower");throw"gammainc unsupported argument ["+e+"]"}static erf(t){return t>=0?Statistics.p_gamma(t*t,.5,.5*Math.log(Math.PI)):-Statistics.p_gamma(t*t,.5,.5*Math.log(Math.PI))}}const random_class=new Random,ToComplexFromString=function(t,n){const e=t.replace(/\s/g,"").toLowerCase();if(!/[ij]/.test(e))return n._re=parseFloat(e),void(n._im=0);let i,r=0,o=0;(i=e.match(/[+-]?[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?($|[+-])/))&&(r=parseFloat(i[0])),(i=e.match(/[+-]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]/))&&(i=i[0].substring(0,i[0].length-1),o=/^[-+]$/.test(i)||0===i.length?"-"===i?-1:1:parseFloat(i)),n._re=r,n._im=o};class Complex{constructor(t){if(1!==arguments.length)throw"Many arguments : "+arguments.length;{const n=t;if(n instanceof Complex||n instanceof Object&&n._re&&n._im)this._re=n._re,this._im=n._im;else if("number"==typeof n||n instanceof Number)this._re=n,this._im=0;else if(n instanceof Array&&2===n.length)this._re=n[0],this._im=n[1];else if("string"==typeof n||n instanceof String)ToComplexFromString(n,this);else{if(!(n instanceof Object&&n.toString))throw"Unsupported argument";ToComplexFromString(n.toString(),this)}}}clone(){return this}toString(){const t=function(t){let n=t.toPrecision(6);return-1!==n.indexOf(".")&&(n=(n=n.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e")),n};return this.isReal()?t(this._re):0===this._re?t(this._im)+"i":this._im>=0?t(this._re)+" + "+t(this._im)+"i":t(this._re)+" - "+t(-this._im)+"i"}static createConstComplex(t){return t instanceof Complex?t:new Complex(t)}static rand(){return new Complex(random_class.nextDouble())}static randn(){return new Complex(random_class.nextGaussian())}equals(t,n){const e=Complex.createConstComplex(t),i=n||Number.EPSILON;return Math.abs(this._re-e._re)<i&&Math.abs(this._im-e._im)<i}get real(){return this._re}get imag(){return this._im}get norm(){return 0===this._im?Math.abs(this._re):0===this._re?Math.abs(this._im):Math.sqrt(this._re*this._re+this._im*this._im)}get angle(){return 0===this._im?0:0===this._re?Math.PI*(this._im>=0?.5:-.5):Math.atan2(this._im,this._re)}getDecimalPosition(){let t=0,n=this;for(let e=0;e<20&&!n.isComplexInteger();e++)n=n.mul(Complex.TEN),t++;return t}add(t){const n=new Complex(t);return n._re=this._re+n._re,n._im=this._im+n._im,n}sub(t){const n=new Complex(t);return n._re=this._re-n._re,n._im=this._im-n._im,n}mul(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=-this._im*n._im,n._im=0,n;{const t=this._re*n._re-this._im*n._im,e=this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}dot(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=this._im*n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=-this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}div(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re/n._re,n;if(0===this._re&&0===n._re)return n._re=this._im/n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=this._im*n._re-this._re*n._im,i=1/(n._re*n._re+n._im*n._im);return n._re=t*i,n._im=e*i,n}}mod(t){const n=new Complex(t);if(0!==this._im||0!==n._im)throw"calculation method is undefined.";let e=this._re-n._re*(0|this._re/n._re);return e<0&&(e+=n._re),n._re=e,n}inv(){return 0===this._im?new Complex(1/this._re):0===this._re?new Complex([0,-1/this._im]):Complex.ONE.div(this)}sign(){return 0===this._im?new Complex(0===this._re?0:this._re>0?1:-1):this.div(this.norm)}max(t,n){const e=Complex.createConstComplex(t);return this.compareTo(e,n)<=0?this:e}min(t,n){const e=Complex.createConstComplex(t);return this.compareTo(e,n)>=0?this:e}compareTo(t,n){const e=Complex.createConstComplex(t);return this.equals(e,n)?0:this.real+this.imag<e.real+e.imag?1:-1}isInteger(t){const n=t||Number.EPSILON;return this.isReal()&&Math.abs(this._re-(0|this._re))<n}isComplexInteger(t){const n=t||Number.EPSILON;return Math.abs(this._re-(0|this._re))<n&&Math.abs(this._im-(0|this._im))<n}isZero(t){const n=t||Number.EPSILON;return Math.abs(this._re)<n&&Math.abs(this._im)<n}isOne(t){const n=t||Number.EPSILON;return Math.abs(this._re-1)<n&&Math.abs(this._im)<n}isComplex(t){const n=t||Number.EPSILON;return Math.abs(this._im)>=n}isReal(t){const n=t||Number.EPSILON;return Math.abs(this._im)<n}isNaN(){return Math.isNaN(this._re)||Math.isNaN(this._im)}isPositive(){return 0<this._re}isNegative(){return 0>this._re}isNotNegative(){return 0<=this._re}isInfinite(){return this._re===Number.POSITIVE_INFINITY||this._im===Number.POSITIVE_INFINITY||this._re===Number.NEGATIVE_INFINITY||this._im===Number.NEGATIVE_INFINITY}isFinite(){return!this.isNaN()&&!this.isInfinite()}abs(){return new Complex(this.norm)}conj(){return 0===this._im?this:new Complex([this._re,-this._im])}negate(){return new Complex([-this._re,-this._im])}pow(t){const n=new Complex(t);if(this.isReal()&&n.isReal()&&this.isNotNegative())return n._re=Math.pow(this._re,n._re),n;if(n.isReal()){const t=Math.pow(this.norm,n._re),e=this.angle*n._re;return n._re=t*Math.cos(e),n._im=t*Math.sin(e),n}return n.mul(this.log()).exp()}square(){return new Complex(this._re*this._re+this._im*this._im)}sqrt(){if(this.isReal())return new Complex(this.isNotNegative()?Math.sqrt(this._re):[0,Math.sqrt(this._re)]);const t=Math.sqrt(this.norm),n=.5*this.angle;return new Complex([t*Math.cos(n),t*Math.sin(n)])}log(){return new Complex(this.isReal()&&this.isNotNegative()?Math.log(this._re):[Math.log(this.norm),this.angle])}exp(){if(this.isReal())return new Complex(Math.exp(this._re));const t=Math.exp(this._re);return new Complex([t*Math.cos(this._im),t*Math.sin(this._im)])}sin(){if(this.isReal())return new Complex(Math.sin(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.sub(n).div([0,2])}cos(){if(this.isReal())return new Complex(Math.cos(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.add(n).div(2)}tan(){return this.isReal()?new Complex(Math.tan(this._re)):this.sin().div(this.cos())}atan(){return this.isReal()?new Complex(Math.atan(this._re)):Complex.I.div(Complex.TWO).mul(Complex.I.add(this).div(Complex.I.sub(this)).log())}atan2(){if(0===arguments.length)return new Complex(this.angle);const t=this,n=new Complex(...arguments);if(t.isReal()&&n.isReal())return new Complex(Math.atan2(t._re,n._re));throw"calculation method is undefined."}floor(){return new Complex([Math.floor(this._re),Math.floor(this._im)])}ceil(){return new Complex([Math.ceil(this._re),Math.ceil(this._im)])}round(){return new Complex([Math.round(this._re),Math.round(this._im)])}fix(){return new Complex([0|this._re,0|this._im])}fract(){return new Complex([this._re-(0|this._re),this._im-(0|this._im)])}gammaln(){if(this.isComplex())throw"gammaln don't support complex numbers.";return new Complex(Statistics.gammaln(this._re))}gamma(){if(this.isComplex())throw"gamma don't support complex numbers.";return new Complex(Statistics.gamma(this._re))}beta(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"beta don't support complex numbers.";return new Complex(Statistics.beta(n._re,e._re))}factorial(){if(this.isComplex())throw"factorial don't support complex numbers.";return new Complex(Statistics.factorial(this._re))}nchoosek(t){const n=this,e=Complex.createConstComplex(t);if(n.isComplex()||e.isComplex())throw"nchoosek don't support complex numbers.";return new Complex(Statistics.nchoosek(n._re,e._re))}betainc(t,n,e){const i=this,r=Complex.createConstComplex(t),o=Complex.createConstComplex(n);if(i.isComplex()||r.isComplex()||o.isComplex())throw"betainc don't support complex numbers.";const s=2===arguments.length?e:"lower";return new Complex(Statistics.betainc(i._re,r._re,o._re,s))}betacdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betacdf don't support complex numbers.";return new Complex(Statistics.betacdf(e._re,i._re,r._re))}betapdf(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betapdf don't support complex numbers.";return new Complex(Statistics.betapdf(e._re,i._re,r._re))}betainv(t,n){const e=this,i=Complex.createConstComplex(t),r=Complex.createConstComplex(n);if(e.isComplex()||i.isComplex()||r.isComplex())throw"betainv don't support complex numbers.";return new Complex(Statistics.betainv(e._re,i._re,r._re))}gammainc(t,n){const e=this,i=Complex.createConstComplex(t);if(e.isComplex()||i.isComplex())throw"gammainc don't support complex numbers.";const r=2===arguments.length?n:"lower";return new Complex(Statistics.gammainc(e._re,i._re,r))}erf(){const t=this;if(t.isComplex())throw"erf don't support complex numbers.";return new Complex(Statistics.erf(t._re))}}Complex.I=new Complex([0,1]),Complex.PI=new Complex(Math.PI),Complex.ZERO=new Complex(0),Complex.HALF=new Complex(.5),Complex.ONE=new Complex(1),Complex.MINUS=new Complex(-1),Complex.TWO=new Complex(2),Complex.TEN=new Complex(10);class MatrixTool{static tridiagonalize(t){const n=t.getNumberMatrixArray(),e=function(t,n,e,i){let r=0;const o=e||0,s=i||t.length;for(let e=o;e<s;e++)r+=t[e]*n[e];return r},i=n.length,r=[],o=[];for(let t=0;t<i-2;t++){const s=n[t];r[t]=s[t];{const n=function(t,n,i){const r=n||0,o=i||t.length;let s=Math.sqrt(e(t,t,r,o));const a=[];if(Math.abs(s)>=1e-10){t[r]<0&&(s=-s);let n;for(let e=r,i=0;e<o;e++,i++)e===r?(a[i]=t[e]+s,n=1/Math.sqrt(a[i]*s),a[i]=a[i]*n):a[i]=t[e]*n}return{y1:-s,v:a}}(s,t+1,i);o[t]=n.y1;for(let e=0;e<n.v.length;e++)s[t+1+e]=n.v[e]}if(!(Math.abs(o[t])<1e-10)){for(let e=t+1;e<i;e++){let o=0;for(let i=t+1;i<e;i++)o+=n[i][e]*s[i];for(let t=e;t<i;t++)o+=n[e][t]*s[t];r[e]=o}const o=e(s,r,t+1,i)/2;for(let e=i-1;e>t;e--){const t=s[e],a=r[e]-o*t;r[e]=a;for(let o=e;o<i;o++){const i=t*r[o]+a*s[o];n[e][o]=n[e][o]-i}}}}i>=2&&(r[i-2]=n[i-2][i-2],o[i-2]=n[i-2][i-1]),i>=1&&(r[i-1]=n[i-1][i-1]);for(let t=i-1;t>=0;t--){const r=n[t];if(t<i-2)for(let o=t+1;o<i;o++){const s=n[o],a=e(r,s,t+1,i);for(let n=t+1;n<i;n++)s[n]-=a*r[n]}for(let t=0;t<i;t++)r[t]=0;r[t]=1}const s=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?new Complex(r[t]):1===Math.abs(t-n)?new Complex(o[.5*(t+n)|0]):Complex.ZERO},i,i);return{P:new Matrix(n).T(),H:s}}static eig(t){let n=!1;const e=t.tridiagonalize(),i=e.P.getNumberMatrixArray(),r=e.H.getNumberMatrixArray(),o=t.row_length,s=[],a=[];for(let t=0;t<o;t++)s[t]=r[t][t],a[t]=0===t?0:r[t][t-1];for(let t=o-1;t>0;t--){let e=t;for(e=t;e>=1&&!(Math.abs(a[e])<=1e-10*(Math.abs(s[e-1])+Math.abs(s[e])));e--);if(e!=t){let r=0;for(;;){if(++r>100){n=!0;break}let h=(s[t-1]-s[t])/2,l=a[t]*a[t],c=Math.sqrt(h*h+l);h<0&&(c=-c);let u=s[e]-s[t]+l/(h+c),g=a[e+1];for(let n=e;n<t;n++){let r,c;Math.abs(u)>=Math.abs(g)?c=(l=-g/u)*(r=1/Math.sqrt(l*l+1)):r=(l=-u/g)*(c=1/Math.sqrt(l*l+1)),l=((h=s[n]-s[n+1])*c+2*r*a[n+1])*c,s[n]-=l,s[n+1]+=l,n>e&&(a[n]=r*a[n]-c*g),a[n+1]+=c*(r*h-2*c*a[n+1]);for(let t=0;t<o;t++)u=i[t][n],g=i[t][n+1],i[t][n]=r*u-c*g,i[t][n+1]=c*u+r*g;n<t-1&&(u=a[n+1],g=-c*a[n+2],a[n+2]*=r)}if(Math.abs(a[t])<=1e-10*(Math.abs(s[t-1])+Math.abs(s[t])))break}if(n)break}}return function(t,n){const e=n.length,i=[];for(let t=0;t<e;t++)i[t]={sigma:n[t],index:t};const r=function(t,n){return t===n?0:t<n?-1:1};i.sort(r);const o=Matrix.zeros(e),s=Matrix.zeros(e);for(let t=0;t<e;t++)s.matrix_array[t][t]=new Complex(i[t].sigma),o.matrix_array[t][i[t].index]=Complex.ONE;return{V:t.mul(o),D:s}}(new Matrix(i),s)}}const ConstructorTool={match2:function(t,n){const e=[];let i=t,r=!0;for(let t=0;t<1e3;t++){if(null===(r=i.match(n))){i.length&&e.push([!1,i]);break}r.index>0&&e.push([!1,i.substr(0,r.index)]),e.push([!0,r[0]]),i=i.substr(r.index+r[0].length)}return e},trimBracket:function(t){return/^\[/.test(t)&&/\]$/.test(t)?t.substring(1,t.length-1):null},toMatrixFromStringForArrayJSON:function(t){const n=[];let e=t.match(/\[[^\]]+\]/g);null===e&&(e=[t]);for(let t=0;t<e.length;t++){const i=e[t],r=i.substring(1,i.length-1).split(","),o=[];for(let t=0;t<r.length;t++){const n=r[t];o[t]=new Complex(n)}n[t]=o}return n},InterpolationCalculation:function(t,n,e){const i=e.compareTo(t);if(0===i)return t;if(n.isZero())throw"IllegalArgumentException";if(n.isNegative()&&-1===i)throw"IllegalArgumentException";const r=[];let o=t;r[0]=o;for(let t=1;t<65536&&(o=o.add(n)).compareTo(e)!==i;t++)r[t]=o;return r},toArrayFromString:function(t){if(":"===t.trim())return":";const n=new RegExp("("+/[+-]? *([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]( *[+] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?)?/.source+")|("+/[+-]? *[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?( *[+-] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij])?/.source+")","i"),e=ConstructorTool.match2(t,n),i=[];for(let t=0;t<e.length;t++){const n=e[t];if(n[0])if(t<e.length-2&&!e[t+1][0]&&/:/.test(e[t+1][1])){let r,o,s;t<e.length-4&&!e[t+3][0]&&/:/.test(e[t+3][1])?(r=new Complex(n[1]),o=new Complex(e[t+2][1]),s=new Complex(e[t+4][1]),t+=4):(r=new Complex(n[1]),o=Complex.ONE,s=new Complex(e[t+2][1]),t+=2);const a=ConstructorTool.InterpolationCalculation(r,o,s);for(let t=0;t<a.length;t++)i.push(a[t])}else i.push(new Complex(n[1]))}return i},toMatrixFromStringForArrayETC:function(t){const n=[],e=t.split(";");for(let t=0;t<e.length;t++)n[t]=ConstructorTool.toArrayFromString(e[t]);return n},toMatrixFromStringForArray:function(t){return/[[\],]/.test(t)?ConstructorTool.toMatrixFromStringForArrayJSON(t):ConstructorTool.toMatrixFromStringForArrayETC(t)},toMatrixFromString:function(t){const n=t.replace(/^\s*|\s*$/g,""),e=ConstructorTool.trimBracket(n);return e?ConstructorTool.toMatrixFromStringForArray(e):[[new Complex(t)]]},isCorrectMatrixArray:function(t){if(0===t.length)return!1;const n=t[0].length;if(0===n)return!1;for(let e=1;e<t.length;e++)if(t[e].length!==n)return!1;return!0}};class Matrix{constructor(t){let n=null,e=!1;if(1!==arguments.length)throw"Many arguments : "+arguments.length;{const i=t;if(i instanceof Matrix){n=[];for(let t=0;t<i.row_length;t++){n[t]=[];for(let e=0;e<i.column_length;e++)n[t][e]=i.matrix_array[t][e]}}else if(i instanceof Complex)n=[[i]];else if(i instanceof Array){n=[];for(let t=0;t<i.length;t++){const e=i[t];if(e instanceof Array){const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(n instanceof Complex)i[t]=n;else if(n instanceof Matrix){if(!n.isScalar())throw"Matrix in matrix";i[t]=n.scalar}else i[t]=new Complex(n)}n[t]=i}else if(0===t&&(n[0]=[]),e instanceof Complex)n[0][t]=e;else if(e instanceof Matrix){if(!e.isScalar())throw"Matrix in matrix";n[0][t]=e.scalar}else n[0][t]=new Complex(e)}}else"string"==typeof i||i instanceof String?(e=!0,n=ConstructorTool.toMatrixFromString(i)):i instanceof Object&&i.toString?(e=!0,n=ConstructorTool.toMatrixFromString(i.toString())):n=[[new Complex(i)]]}if(e)for(let t=0;t<n.length;t++)":"===n[t]&&n.splice(t--,1);if(!ConstructorTool.isCorrectMatrixArray(n))throw"new Matrix IllegalArgumentException";this.matrix_array=n,this.row_length=this.matrix_array.length,this.column_length=this.matrix_array[0].length,this.string_cash=null}clone(){return new Matrix(this.matrix_array)}toString(){if(this.string_cash)return this.string_cash;const t=Math.pow(10,9);let n=!1,e=!1,i=0;this._each(function(r){r.isReal()||(n=!0),Math.abs(r.real)>=t&&(e=!0),Math.abs(r.imag)>=t&&(e=!0),i=Math.max(i,r.getDecimalPosition())}),i>0&&(i=4);let r=0;const o=[],s=function(t){if(!e)return t.toFixed(i);const n=t.toExponential(4).split("e");let r=n[1];return 2===r.length?r=r.substr(0,1)+"00"+r.substr(1):3===r.length&&(r=r.substr(0,1)+"0"+r.substr(1)),n[0]+"e"+r};this._each(function(t){const e={};let i=t.real;if(e.re_sign=i<0?"-":" ",i=Math.abs(i),e.re_str=s(i),r=Math.max(r,e.re_str.length+1),n){let n=t.imag;e.im_sign=n<0?"-":"+",n=Math.abs(n),e.im_str=s(n),r=Math.max(r,e.im_str.length+1)}o.push(e)});const a=function(t,n){return"                                        ".substr(0,n-t.length)+t},h=[],l=this;return this._each(function(t,e,i){const s=o.shift();let c=a(s.re_sign+s.re_str,r);n&&(c+=" "+s.im_sign+a(s.im_str,r)+"i"),h.push(c),h.push(i<l.column_length-1?" ":"\n")}),this.string_cash=h.join(""),this.string_cash}equals(t,n){const e=this,i=Matrix.createConstMatrix(t);if(e.row_length!==i.row_length||e.column_length!==i.column_length)return!1;if(1===e.row_length||1===e.column_length)return e.scalar.equals(i.scalar);const r=e.matrix_array,o=i.matrix_array;for(let t=0;t<this.row_length;t++)for(let e=0;e<this.column_length;e++)if(!r[t][e].equals(o[t][e],n))return!1;return!0}getNumberMatrixArray(){const t=[];for(let n=0;n<this.row_length;n++){t[n]=[];for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e].real}return t}static createConstMatrix(t){return 1===arguments.length&&t instanceof Matrix?t:new Matrix(t)}_clearCash(){this.string_cash&&delete this.string_cash}_each(t){let n=!1;for(let e=0;e<this.row_length;e++)for(let i=0;i<this.column_length;i++){const r=t(this.matrix_array[e][i],e,i);void 0!==r&&(this.matrix_array[e][i]=r instanceof Complex?r:r instanceof Matrix?r.scalar:new Complex(r),n=!0)}return n&&this._clearCash(),this}static createMatrixDoEachCalculation(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";const i=[],r=n,o=e||n;for(let n=0;n<r;n++){i[n]=[];for(let e=0;e<o;e++){const r=t(n,e);void 0!==r&&(i[n][e]=r instanceof Complex?r:r instanceof Matrix?r.scalar:new Complex(r))}}return new Matrix(i)}cloneMatrixDoEachCalculation(t){return this.clone()._each(t)}get scalar(){return this.matrix_array[0][0]}get length(){return this.row_length>this.column_length?this.row_length:this.column_length}get norm1(){const t=this.matrix_array;if(this.isRow()){let n=0;for(let e=0;e<this.column_length;e++)n+=t[0][e].norm;return n}if(this.isColumn()){let n=0;for(let e=0;e<this.row_length;e++)n=t[e][0].norm;return n}let n=0;for(let e=0;e<this.column_length;e++){let i=0;for(let n=0;n<this.row_length;n++)i+=t[n][e].norm;n<i&&(n=i)}return n}get norm2(){const t=this.matrix_array;if(this.isRow()){let n=0;for(let e=0;e<this.column_length;e++)n+=t[0][e].square().real;return Math.sqrt(n)}if(this.isColumn()){let n=0;for(let e=0;e<this.row_length;e++)n=t[e][0].square().real;return Math.sqrt(n)}throw"norm2"}get(t,n){let e=null,i=null;e="string"==typeof t||t instanceof String?new Matrix(t):t,2===arguments.length&&(i="string"==typeof n||n instanceof String?new Matrix(n):n);const r=function(n){let e,i=!1;return"number"==typeof t||t instanceof Number?(e=Math.round(n),i=!0):t instanceof Complex?(e=Math.round(n.real),i=!0):t instanceof Matrix&&t.isScalar()&&(e=Math.round(n.scalar.real),i=!0),{number:e,is_scalar:i}};let o=!0,s=null,a=null;return 1===arguments.length?o&=(s=r(e)).is_scalar:2===arguments.length&&(o&=(s=r(e)).is_scalar,o&=(a=r(i)).is_scalar),o?this.isRow()?this.matrix_array[0][s.number]:this.isColumn()?this.matrix_array[s.number][0]:this.matrix_array[s.number][a.number]:null}static eye(t,n){return Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?Complex.ONE:Complex.ZERO},t,n)}static memset(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";if(t instanceof Matrix&&!t.isScalar()){const i=t.matrix_array,r=t.row_length,o=t.column_length;return Matrix.createMatrixDoEachCalculation(function(t,n){return i[t%r][n%o]},n,e)}{let i=0;return i=t instanceof Matrix&&t.isScalar()?t.scalar:Complex.createConstComplex(t),Matrix.createMatrixDoEachCalculation(function(){return i},n,e)}}static zeros(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ZERO,t,n)}static ones(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ONE,t,n)}static rand(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.rand()},t,n)}static randn(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.randn()},t,n)}isScalar(){return 1===this.row_length&&1==this.column_length}isRow(){return 1===this.row_length}isColumn(){return 1===this.column_length}isVector(){return 1===this.row_length||1===this.column_length}isMatrix(){return 1!==this.row_length&&1!==this.column_length}isSquare(){return this.row_length===this.column_length}isReal(t){let n=!0;return this._each(function(e){n&&e.isComplex(t)&&(n=!1)}),n}isComplex(t){let n=!0;return this._each(function(e){n&&e.isReal(t)&&(n=!1)}),n}isZero(t){let n=!0;const e=t||1e-10;return this._each(function(t){n&&!t.isZero(e)&&(n=!1)}),n}isIdentity(t){if(!this.isDiagonal())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)if(!this.matrix_array[t][t].isOne(n))return!1;return!0}isDiagonal(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i!==r&&!t.isZero(e)&&(n=!1)}),n}isTridiagonal(t){if(!this.isSquare())return!1;let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&Math.abs(i-r)>1&&!t.isZero(e)&&(n=!1)}),n}isRegular(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.rank(1e-10).equals(this.row_length,n)}isOrthogonal(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.transpose()).isIdentity(n)}isUnitary(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.ctranspose()).isIdentity(n)}isSymmetric(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t+1;e<this.column_length;e++)if(!this.matrix_array[t][e].equals(this.matrix_array[e][t],n))return!1;return!0}isHermitian(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t;e<this.column_length;e++)if(t===e){if(!this.matrix_array[t][e].isReal(n))return!1}else if(!this.matrix_array[t][e].equals(this.matrix_array[e][t].conj(),n))return!1;return!0}size(){return new Matrix([[this.row_length,this.column_length]])}max(t){if(this.isRow()){let n=this.matrix_array[0][0];for(let e=1;e<this.column_length;e++)n.compareTo(this.matrix_array[0][e],t)>0&&(n=this.matrix_array[0][e]);return new Matrix(n)}{const n=[];n[0]=[];for(let e=0;e<this.column_length;e++){n[0][e]=this.matrix_array[0][e];for(let i=1;i<this.row_length;i++)n[0][e].compareTo(this.matrix_array[i][e],t)>0&&(n[0][e]=this.matrix_array[i][e])}return new Matrix(n)}}min(t){if(this.isRow()){let n=this.matrix_array[0][0];for(let e=1;e<this.column_length;e++)n.compareTo(this.matrix_array[0][e],t)<0&&(n=this.matrix_array[0][e]);return new Matrix(n)}{const n=[];n[0]=[];for(let e=0;e<this.column_length;e++){n[0][e]=this.matrix_array[0][e];for(let i=1;i<this.row_length;i++)n[0][e].compareTo(this.matrix_array[i][e],t)<0&&(n[0][e]=this.matrix_array[i][e])}return new Matrix(n)}}add(t){const n=this,e=Matrix.createConstMatrix(t);if(!(n.row_length%e.row_length!=0&&e.row_length%n.row_length!=0||n.column_length%e.column_length!=0&&e.column_length%n.column_length!=0))throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].add(r[t%e.row_length][o%e.column_length])},o,s)}sub(t){const n=this,e=Matrix.createConstMatrix(t);if(!(n.row_length%e.row_length!=0&&e.row_length%n.row_length!=0||n.column_length%e.column_length!=0&&e.column_length%n.column_length!=0))throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].sub(r[t%e.row_length][o%e.column_length])},o,s)}mul(t){const n=this,e=Matrix.createConstMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.mul(r.scalar));const o=[];if(n.isScalar()){for(let t=0;t<e.row_length;t++){o[t]=[];for(let i=0;i<e.column_length;i++)o[t][i]=n.scalar.mul(r[t][i])}return new Matrix(o)}if(e.isScalar()){for(let t=0;t<n.row_length;t++){o[t]=[];for(let r=0;r<n.column_length;r++)o[t][r]=i[t][r].mul(e.scalar)}return new Matrix(o)}if(n.column_length!==e.row_length)throw"Matrix size does not match";for(let t=0;t<n.row_length;t++){o[t]=[];for(let s=0;s<e.column_length;s++){let e=Complex.ZERO;for(let o=0;o<n.column_length;o++)e=e.add(i[t][o].mul(r[o][s]));o[t][s]=e}}return new Matrix(o)}inv(){if(this.isScalar())return new Matrix(Complex.ONE.div(this.scalar));if(!this.isSquare())throw"not square";if(this.isDiagonal()){const t=this.T(),n=Math.min(t.row_length,t.column_length);for(let e=0;e<n;e++)t.matrix_array[e][e]=t.matrix_array[e][e].inv();return t}const t=this.column_length,n=new Matrix(this);n._concat_left(Matrix.eye(t));const e=n.matrix_array,i=n.column_length;for(let r=0;r<t;r++){{const t=n._max_row_number(r,r).index;n._exchange_row(r,t)}{const t=e[r][r].inv();for(let n=r,o=r;o<i;o++)e[n][o]=e[n][o].mul(t)}for(let n=0;n<t;n++)if(n!==r){const t=e[n][r];for(let o=r;o<i;o++)e[n][o]=e[n][o].sub(e[r][o].mul(t))}}const r=[];for(let n=0;n<t;n++){r[n]=[];for(let i=0;i<t;i++)r[n][i]=e[n][t+i]}return new Matrix(r)}div(t){const n=this,e=Matrix.createConstMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.div(r.scalar));const o=[];if(e.isScalar()){for(let t=0;t<n.row_length;t++){o[t]=[];for(let r=0;r<n.column_length;r++)o[t][r]=i[t][r].div(e.scalar)}return new Matrix(o)}if(e.row_length===e.column_length)return this.mul(e.inv());if(n.column_length!==e.column_length)throw"Matrix size does not match";throw"warning"}nmul(t){const n=this,e=Matrix.createConstMatrix(t);if(!(n.row_length%e.row_length!=0&&e.row_length%n.row_length!=0||n.column_length%e.column_length!=0&&e.column_length%n.column_length!=0))throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].mul(r[t%e.row_length][o%e.column_length])},o,s)}ndiv(t){const n=this,e=Matrix.createConstMatrix(t);if(!(n.row_length%e.row_length!=0&&e.row_length%n.row_length!=0||n.column_length%e.column_length!=0&&e.column_length%n.column_length!=0))throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].div(r[t%e.row_length][o%e.column_length])},o,s)}real(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.real)})}imag(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.imag)})}angle(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.angle)})}sign(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.sign())})}testInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isInteger(t)?Complex.ONE:Complex.ZERO})}testComplexInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplexInteger(t)?Complex.ONE:Complex.ZERO})}testZero(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isZero(t)?Complex.ONE:Complex.ZERO})}testOne(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isOne(t)?Complex.ONE:Complex.ZERO})}testComplex(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplex(t)?Complex.ONE:Complex.ZERO})}testReal(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isReal(t)?Complex.ONE:Complex.ZERO})}testNaN(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNaN()?Complex.ONE:Complex.ZERO})}testPositive(){return this.cloneMatrixDoEachCalculation(function(t){return t.isPositive()?Complex.ONE:Complex.ZERO})}testNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNegative()?Complex.ONE:Complex.ZERO})}testNotNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNotNegative()?Complex.ONE:Complex.ZERO})}testInfinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isInfinite()?Complex.ONE:Complex.ZERO})}testFinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isFinite()?Complex.ONE:Complex.ZERO})}abs(){return this.cloneMatrixDoEachCalculation(function(t){return t.abs()})}conj(){return this.cloneMatrixDoEachCalculation(function(t){return t.conj()})}negate(){return this.cloneMatrixDoEachCalculation(function(t){return t.negate()})}sqrt(){return this.cloneMatrixDoEachCalculation(function(t){return t.sqrt()})}pow(t){const n=Matrix.createConstMatrix(t);if(!n.isScalar())throw"not set Scalar";return this.cloneMatrixDoEachCalculation(function(t){return t.pow(n.scalar)})}log(){return this.cloneMatrixDoEachCalculation(function(t){return t.log()})}exp(){return this.cloneMatrixDoEachCalculation(function(t){return t.exp()})}sin(){return this.cloneMatrixDoEachCalculation(function(t){return t.sin()})}cos(){return this.cloneMatrixDoEachCalculation(function(t){return t.cos()})}tan(){return this.cloneMatrixDoEachCalculation(function(t){return t.tan()})}atan(){return this.cloneMatrixDoEachCalculation(function(t){return t.atan()})}atan2(t){const n=Matrix.createConstMatrix(t);if(!n.isScalar)throw"not set Scalar";return this.cloneMatrixDoEachCalculation(function(t){return t.atan2(n.scalar)})}floor(){return this.cloneMatrixDoEachCalculation(function(t){return t.floor()})}ceil(){return this.cloneMatrixDoEachCalculation(function(t){return t.ceil()})}round(){return this.cloneMatrixDoEachCalculation(function(t){return t.round()})}fix(){return this.cloneMatrixDoEachCalculation(function(t){return t.fix()})}fract(){return this.cloneMatrixDoEachCalculation(function(t){return t.fract()})}_rot90(t){let n=1;if(1===arguments.length&&(n=(t%4+4)%4),0===n)return this;const e=[];for(let t=0;t<this.row_length;t++){e[t]=[];for(let n=0;n<this.column_length;n++)e[t][n]=this.matrix_array[t][n]}const i=this.matrix_array;if(1===n){i.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?i[t].splice(this.row_length):i[t]=[];for(let n=0;n<this.row_length;n++)i[t][n]=e[this.row_length-n-1][t]}}else if(2===n)for(let t=0;t<this.row_length;t++)for(let n=0;n<this.column_length;n++)i[t][n]=e[this.row_length-t-1][this.column_length-n-1];else if(3===n){i.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?i[t].splice(this.row_length):i[t]=[];for(let n=0;n<this.row_length;n++)i[t][n]=e[n][this.column_length-t-1]}}return this.row_length=i.length,this.column_length=i[0].length,this._clearCash(),this}_resize(t,n){if(t===this.row_length&&n===this.column_length)return this;if(t<=0||n<=0)throw"_resize";const e=Math.max(this.row_length,t),i=Math.max(this.column_length,n),r=this.matrix_array;for(let t=0;t<e;t++){t>=this.row_length&&(r[t]=[]);for(let n=0;n<i;n++)(t>=this.row_length||n>=this.column_length)&&(r[t][n]=Complex.ZERO)}if(this.row_length>t&&r.splice(t),this.column_length>n)for(let t=0;t<r.length;t++)r[t].splice(n);return this.row_length=t,this.column_length=n,this._clearCash(),this}_delete_row(t){if(1===this.row_length||this.row_length<=t)throw"_delete_row";return this.matrix_array.splice(t,1),this.row_length--,this._clearCash(),this}_delete_column(t){if(1===this.column_length||this.column_length<=t)throw"_delete_column";for(let n=0;n<this.row_length;n++)this.matrix_array[n].splice(t,1);return this.column_length--,this._clearCash(),this}_exchange_row(t,n){if(1===this.row_length||this.row_length<=t||this.row_length<=n)throw"_exchange_row";if(t===n)return this;const e=this.matrix_array[t];return this.matrix_array[t]=this.matrix_array[n],this.matrix_array[n]=e,this._clearCash(),this}_exchange_column(t,n){if(1===this.column_length||this.column_length<=t||this.column_length<=n)throw"_exchange_column";if(t===n)return this;for(let e=0;e<this.row_length;e++){const i=this.matrix_array[e][t];this.matrix_array[e][t]=this.matrix_array[e][n],this.matrix_array[e][n]=i}return this._clearCash(),this}_concat_left(t){for(let n=0;n<this.row_length;n++)for(let e=0;e<t.column_length;e++)this.matrix_array[n].push(t.matrix_array[n][e]);return this.column_length+=t.column_length,this._clearCash(),this}_concat_bottom(t){for(let n=0;n<t.row_length;n++)this.matrix_array.push(t.matrix_array[n]);return this.row_length+=t.row_length,this._clearCash(),this}_max_row_number(t,n,e){let i=0,r=0,o=n||0;const s=e||this.row_length;for(;o<s;o++){const n=this.matrix_array[o][t].norm;n>r&&(r=n,i=o)}return{index:i,max:r}}_get_linear_dependence_vector(t){const n=new Matrix(this),e=n.matrix_array,i=t||1e-10,r=[];for(let t=0;t<this.row_length;t++)r[t]=t;for(let t=0;t<n.column_length;t++){let o=0;{let s=0,a=0;for(const n in r){const i=r[n],h=e[i][t].norm;h>s&&(s=h,a=n,o=i)}if(s<=i)continue;if(r.splice(a,1),t===n.column_length-1)break}for(const i in r){const s=r[i],a=e[s][t].div(e[o][t]);for(let i=t;i<n.column_length;i++)e[s][i]=e[s][i].sub(e[o][i].mul(a))}}return r}static _gram_schmidt_orthonormalization(t){const n=t.column_length,e=t.matrix_array,i=Matrix.zeros(n),r=Matrix.zeros(n),o=i.matrix_array,s=r.matrix_array,a=[],h=[];for(let t=0;t<n;t++){for(let i=0;i<n;i++)h[i]=e[i][t];if(t>0){for(let i=0;i<t;i++)for(let r=0;r<n;r++)s[i][t]=s[i][t].add(e[r][t].dot(o[r][i]));for(let e=0;e<t;e++)for(let i=0;i<n;i++)h[i]=h[i].sub(s[e][t].mul(o[i][e]))}for(let e=0;e<n;e++)s[t][t]=s[t][t].add(h[e].mul(h[e]));if(s[t][t]=s[t][t].sqrt(),s[t][t].isZero(1e-10)){a.push(t);for(let e=0;e<n;e++)o[e][t]=Complex.ZERO}else for(let e=0;e<n;e++)o[e][t]=h[e].div(s[t][t])}return{Q:i,R:r,non_orthogonalized:a}}_createOrthogonalVector(t){const n=new Matrix(this),e=n.matrix_array,i=t||1e-10,r=n._get_linear_dependence_vector(i);for(let t=r.length-1;t>=0;t--)e.splice(r[t],1),n.row_length--;const o=this.column_length-e.length;if(o<=0)return null;const s=new Random(0);let a=null;for(let t=0;t<100;t++){const t=n.T(),e=Matrix.createMatrixDoEachCalculation(function(){return new Complex(s.nextGaussian())},t.row_length,o);if(t._concat_left(e),0===(a=Matrix._gram_schmidt_orthonormalization(t)).non_orthogonalized.length)break}if(0!==a.non_orthogonalized.length)return console.log("miss"),null;const h=[],l=a.Q.matrix_array;for(let t=0;t<o;t++){h[t]=[];for(let n=0;n<this.column_length;n++)h[t][n]=l[n][this.column_length-o+t]}return new Matrix(h)}norm(t){if(0===arguments.length)return this.norm2;if(1===t)return this.norm1;if(2===t)return this.norm2;if(t===Number.POSITIVE_INFINITY||t===Number.NEGATIVE_INFINITY){const n=this.matrix_array;let e=t===Number.POSITIVE_INFINITY?0:Number.POSITIVE_INFINITY;for(let i=0;i<this.row_length;i++){let r=0;for(let t=0;t<this.column_length;t++)r+=n[i][t].norm;e=t===Number.POSITIVE_INFINITY?Math.max(e,r):Math.min(e,r)}return e}if(this.isVector()){let n=0;for(let e=0;e<this.length;e++)n=Math.pow(this.get(e).norm,t);return Math.pow(n,1/t)}throw"norm"}inner(t,n){const e=this,i=Matrix.createConstMatrix(t),r=e.matrix_array,o=i.matrix_array,s=n||1;if(e.isScalar()&&i.isScalar())return new Matrix(e.scalar.dot(i.scalar));if(e.isVector()&&i.isVector()){let t=Complex.ZERO;for(let n=0;n<e.length;n++)t=t.add(e.get(n).dot(i.get(n)));return new Matrix(t)}if(e.row_length!==i.row_length||e.column_length!==i.column_length)throw"Matrix size does not match";if(1===s){const t=[];t[0]=[];for(let n=0;n<e.column_length;n++){let i=Complex.ZERO;for(let t=0;t<e.row_length;t++)i=i.add(r[t][n].dot(o[t][n]));t[0][n]=i}return new Matrix(t)}if(2===s){const t=[];for(let n=0;n<e.row_length;n++){let i=Complex.ZERO;for(let t=0;t<e.column_length;t++)i=i.add(r[n][t].dot(o[n][t]));t[n]=[i]}return new Matrix(t)}throw"dim"}rank(t){return Math.abs(this.row_length,this.column_length)-this._get_linear_dependence_vector(t).length}transpose(){const t=[];for(let n=0;n<this.column_length;n++){t[n]=[];for(let e=0;e<this.row_length;e++)t[n][e]=this.matrix_array[e][n]}return new Matrix(t)}ctranspose(){return this.transpose().conj()}T(){return this.ctranspose()}det(){if(!this.isSquare())throw"not square";const t=this.matrix_array,n=function(t){if(2===t.length)return t[0][0].mul(t[1][1]).sub(t[0][1].mul(t[1][0]));let e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=[],o=t[i][0];for(let n=0,e=0;n<t.length;n++)if(i!==n){r[e]=[];for(let i=1,o=0;i<t.length;i++,o++)r[e][o]=t[n][i];e++}e=i%2==0?e.add(o.mul(n(r))):e.sub(o.mul(n(r)))}return e};return new Matrix(n(t))}lup(){const t=Matrix.zeros(this.row_length),n=new Matrix(this),e=Matrix.eye(this.row_length),i=t.matrix_array,r=n.matrix_array;for(let o=0;o<this.column_length;o++){let s;{const i=n._max_row_number(o,o);if(s=i.index,0===i.max)continue;o!==s&&(t._exchange_row(o,s),n._exchange_row(o,s),e._exchange_row(o,s))}for(let t=o+1;t<this.row_length;t++){const n=r[t][o].div(r[o][o]);i[t][o]=n;for(let e=o;e<this.column_length;e++)r[t][e]=r[t][e].sub(r[o][e].mul(n))}}return t._resize(this.row_length,Math.min(this.row_length,this.column_length)),n._resize(Math.min(this.row_length,this.column_length),this.column_length),t._each(function(t,n,e){return n===e?Complex.ONE:t}),{L:t,U:n,P:e}}linsolve(t){if(!this.isSquare())throw"Matrix size does not match";const n=this.column_length,e=Matrix.createConstMatrix(t);if(e.row_length!==this.row_length||e.column_length>1)throw"Matrix size does not match";const i=new Matrix(this);i._concat_left(e);const r=i.matrix_array,o=i.column_length;for(let t=0;t<n-1;t++){{const n=i._max_row_number(t,t).index;i._exchange_row(t,n)}{const n=r[t][t].inv();for(let e=t,i=t;i<o;i++)r[e][i]=r[e][i].mul(n)}for(let e=t+1;e<n;e++){const n=r[e][t];for(let i=t;i<o;i++)r[e][i]=r[e][i].sub(r[t][i].mul(n))}}const s=[];s[n-1]=r[n-1][n].div(r[n-1][n-1]);for(let t=n-2;t>=0;t--){s[t]=r[t][o-1];for(let e=t+1;e<n;e++)s[t]=s[t].sub(r[t][e]*s[e]);s[t]=s[t].div(r[t][t])}const a=[];for(let t=0;t<this.row_length;t++)a[t]=[s[t]];return new Matrix(a)}qr(){const t=new Matrix(this),n=this.row_length,e=this.row_length,i=this.row_length,r=this.column_length,o=Math.max(this.row_length,this.column_length);t._resize(o,o);const s=Matrix._gram_schmidt_orthonormalization(t),a=s.Q,h=s.R,l=s.non_orthogonalized;if(0!==l.length){const t={};for(let n=0;n<l.length;n++)t[l[n]]=1;const n=[];for(let e=0;e<o;e++)if(!t[e]){const t=[];for(let n=0;n<o;n++)t[n]=a.matrix_array[n][e];n.push(t)}const e=new Matrix(n)._createOrthogonalVector();for(let t=0;t<l.length;t++){const n=l[t];for(let i=0;i<o;i++)a.matrix_array[i][n]=e.matrix_array[t][i]}}return a._resize(n,e),h._resize(i,r),{Q:a,R:h}}tridiagonalize(){if(!this.isSquare())throw"not square matrix";if(!this.isSymmetric())throw"not Symmetric";if(this.isComplex())throw"not Real Matrix";return MatrixTool.tridiagonalize(this)}eig(){if(!this.isSquare())throw"not square matrix";if(!this.isSymmetric())throw"not Symmetric";if(this.isComplex())throw"not Real Matrix";return MatrixTool.eig(this)}svd(){if(this.isComplex())throw"Unimplemented";const t=this.rank(),n=this.T().mul(this).eig(),e=Matrix.zeros(this.row_length,this.column_length);e._each(function(e,i,r){if(i===r&&i<t)return n.D.get(i,i).sqrt()});const i=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?e.matrix_array[t][t].inv():Complex.ZERO},t),r=new Matrix(n.V)._resize(n.V.row_length,t);return{U:this.mul(r).mul(i).qr().Q,S:e,V:n.V}}pinv(){const t=this.svd(),n=t.U,e=t.S,i=t.V,r=Matrix.createMatrixDoEachCalculation(function(t,n){if(t===n){const n=e.matrix_array[t][t];return n.isZero()?Complex.ZERO:n.inv()}return Complex.ZERO},this.column_length,this.row_length);return i.mul(r).mul(n.T())}gammaln(){return this.cloneMatrixDoEachCalculation(function(t){return t.gammaln()})}gamma(){return this.cloneMatrixDoEachCalculation(function(t){return t.gamma()})}beta(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.beta(n)})}factorial(){return this.cloneMatrixDoEachCalculation(function(t){return t.factorial()})}nchoosek(t){const n=Matrix.createConstMatrix(t).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.nchoosek(n)})}betainc(t,n,e){const i=Matrix.createConstMatrix(t).scalar,r=Matrix.createConstMatrix(n).scalar,o=2===arguments.length?e:"lower";return this.cloneMatrixDoEachCalculation(function(t){return t.betainc(i,r,o)})}betacdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betacdf(e,i)})}betapdf(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betapdf(e,i)})}betainv(t,n){const e=Matrix.createConstMatrix(t).scalar,i=Matrix.createConstMatrix(n).scalar;return this.cloneMatrixDoEachCalculation(function(t){return t.betainv(e,i)})}gammainc(t,n){const e=Matrix.createConstMatrix(t).scalar,i=1===arguments.length?n:"lower";return this.cloneMatrixDoEachCalculation(function(t){return t.gammainc(e,i)})}erf(){return this.cloneMatrixDoEachCalculation(function(t){return t.erf()})}}const SMath={Complex:Complex,Matrix:Matrix},MathX={BigDecimal:BigDecimal,BigInteger:BigInteger,Random:Random,SMath:SMath},SenkoMath=MathX;export default SenkoMath;
