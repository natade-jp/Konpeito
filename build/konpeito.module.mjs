/*!
 * konpeito.js
 * https://github.com/natade-jp/konpeito
 * Copyright 2013-2019 natade < https://github.com/natade-jp >
 *
 * The MIT license.
 * https://opensource.org/licenses/MIT
 */
const CSVTool={parseCSV:function(t,n){arguments.length<2&&(n=","),t=t.replace(/\r\n?|\n/g,"\n");const e=n.charCodeAt(0),i=[],r=t.length;let o="",s=0,a=0,l=!1,c=!1;for(let n=0;n<r;n++){let u=t.charCodeAt(n);if(34===u&&0===o.length)for(n++;n<r;n++)if(34===(u=t.charCodeAt(n))){if(n+1===r-1)break;if(34!==t.charCodeAt(n+1))break;n++,o+='"'}else o+=t.charAt(n);else{switch(u){case e:l=!0;break;case 13:case 10:c=!0}l?(l=!1,void 0===i[s]&&(i[s]=[]),i[s][a]=o,o="",a+=1):c?(c=!1,""===o&&0===a||(void 0===i[s]&&(i[s]=[]),i[s][a]=o,o="",s+=1,a=0)):o+=t.charAt(n)}n===r-1&&0!==a&&(i[s][a]=o)}return i},makeCSV:function(t,n,e){arguments.length<2&&(n=","),arguments.length<3&&(e="\r\n");let i="";const r=/["\r\n,\t]/;if(void 0!==t)for(let o=0;o<t.length;o++){if(void 0!==t[o])for(let e=0;e<t[o].length;e++){let s=t[o][e];r.test(s)&&(s='"'+(s=s.replace(/"/g,'""'))+'"'),i+=s,e!==t[o].length-1&&(i+=n)}i+=e}return i}};class File{constructor(t){if(this.isHTML="undefined"!=typeof window,this.isNode=!1,1!==arguments.length)throw"IllegalArgumentException";if("string"==typeof t||t instanceof String)this.pathname=t.replace(/\\/g,"/");else{if(!(t instanceof File))throw"IllegalArgumentException";this.pathname=t.getAbsolutePath()}}delete_(){throw"IllegalMethod"}exists(){throw"IllegalMethod"}copy(){throw"IllegalMethod"}move(){throw"IllegalMethod"}toString(){return this.getAbsolutePath()}getName(){if(this.isHTML){if(this.isDirectory())return"";const t=this.pathname.split("/");return t[t.length-1]}if(this.isNode)throw"IllegalMethod"}getParent(){const t=this.getAbsolutePath().match(/.*[\/\\]/)[0];return t.substring(0,t.length-1)}getParentFile(){return new File(this.getParent())}getExtensionName(){if(this.isHTML){const t=this.getName().split(".");return t[t.length-1]}if(this.isNode)throw"IllegalMethod"}isAbsolute(){if(this.isHTML)return this.getAbsolutePath()===this.pathname;if(this.isNode)throw"IllegalMethod"}isDirectory(){if(this.isHTML)return/\/$/.test(this.pathname);if(this.isNode)throw"IllegalMethod"}isFile(){if(this.isHTML)return/[^\/]$/.test(this.pathname);if(this.isNode)throw"IllegalMethod"}isHidden(){if(this.isNode)throw"IllegalMethod"}lastModified(){if(this.isNode)throw"IllegalMethod"}setLastModified(){if(this.isNode)throw"IllegalMethod"}length(){if(this.isNode)throw"IllegalMethod"}getFiles(){if(this.isNode)throw"IllegalMethod"}getSubFolders(){if(this.isNode)throw"IllegalMethod"}getNormalizedPathName(){if(""===this.pathname)return".\\";let t=this.pathname.replace(/\//g,"\\");return"\\"!==t.slice(-1)&&(t+="\\"),t}getAllFiles(){if(this.isNode)throw"IllegalMethod"}list(){if(this.isNode)throw"IllegalMethod"}getAbsolutePath(){if(this.isHTML){let t=null;if(/^http/.test(this.pathname))t=this.pathname;else{let n=window.location.toString();/\/$/.test(n)||(n=n.match(/.*\//)[0]),t=n+this.pathname}const n=t.match(/^http[^\/]+\/\/[^\/]+\//)[0],e=t.substr(n.length);let i=n;const r=e.split("/");let o;for(o=0;o<r.length;o++)""!==r[o]&&"."!==r[o]&&(".."!==r[o]?(i+=r[o],o!==r.length-1&&(i+="/")):i=i.substring(0,i.length-1).match(/.*\//)[0]);return i}if(this.isNode)throw"IllegalMethod"}mkdir(){if(this.isNode)throw"IllegalMethod"}mkdirs(){if(this.isNode)throw"IllegalMethod"}renameTo(){if(this.isNode)throw"IllegalMethod"}run(){if(this.isNode)throw"IllegalMethod"}writeLine(){if(this.isNode)throw"IllegalMethod"}download(t){if(this.isHTML){const n=this.getExtensionName().toLocaleString(),e=this;if("gif"===n||"jpg"===n||"png"===n||"bmp"===n||"svg"===n||"jpeg"===n){const n=new Image;n.onload=function(){e.dataImage=n,t(e)},n.src=this.pathname}else{const n=File.createXMLHttpRequest();if(null===n)return null;const i=function(){if(4===n.readyState){if(200!==n.status)return console.log("error downloadText "+e.pathname),null;e.dataText=n.responseText,t(e)}};n.onreadystatechange=i,n.open("GET",this.pathname,!0),n.send(null)}}else if(this.isNode)throw"IllegalMethod"}getImage(){if(this.isHTML)return this.dataImage}getText(){if(this.isHTML)return this.dataText;if(this.isNode)throw"IllegalMethod"}setText(){if(this.isNode)throw"IllegalMethod"}getCSV(t,n,e){if(this.isHTML)return CSVTool.parseCSV(this.dataText,t,e);if(this.isNode)throw"IllegalMethod"}setCSV(){if(this.isNode)throw"IllegalMethod"}getByte(){if(this.isNode)throw"IllegalMethod"}setByte(){if(this.isNode)throw"IllegalMethod"}static createTempFile(){if("undefined"!=typeof window)throw"not createTempFile"}static getCurrentDirectory(){if("undefined"!=typeof window){const t=new File("./");return t.getParent()}}static setCurrentDirectory(){if("undefined"!=typeof window)throw"not setCurrentDirectory"}static searchFile(){if("undefined"!=typeof window)throw"not searchFile"}static downloadFileList(t,n,e){let i,r=0;for(i=0;i<t.length;i++)t[i].download(function(i){return function(){r++,e&&e.length&&e[i]&&e[i](t[i]),r===t.length&&n&&n(t)}}(i))}static createXMLHttpRequest(){return new XMLHttpRequest}static getCSVTool(){return CSVTool}}class Format{static format(t,n){let e=1;const i=arguments,r=function(t){if(t>=0)return t;{let n=~(t=-t)>>16&65535;const e=65535&~t;return(n*=65536)+e+1}},o=function(t){let n;const o=(n=(t=t.substring(1,t.length)).match(/.$/))[0];if("%"===o)return"%";null!==(n=t.match(/^[0-9]+\$/))&&(n=n[0],t=t.substring(n.length,t.length),n=n.substring(0,n.length-1),e=parseInt(n,10));let s=i[e];e+=1;let a=!1,l=!1,c=!1,u="";null!==(n=t.match(/^[-+ #0]+/))&&(n=n[0],t=t.substring(n.length,t.length),-1!==n.indexOf("#")&&(a=!0),-1!==n.indexOf("-")&&(l=!0),-1!==n.indexOf(" ")&&(u=" "),-1!==n.indexOf("+")&&(u="+"),-1!==n.indexOf("0")&&(c=!0));let h=0;null!==(n=t.match(/^([0-9]+|\*)/))&&(n=n[0],t=t.substring(n.length,t.length),-1!==n.indexOf("*")?(h=s,s=i[e],e+=1):h=parseInt(n,10));let f=!1,g=0;null!==(n=t.match(/^(\.((-?[0-9]+)|\*)|\.)/))&&(n=n[0],t=t.substring(n.length,t.length),f=!0,-1!==n.indexOf("*")?(g=s,s=i[e],e+=1):1===n.length?g=0:(n=n.substring(1,n.length),g=parseInt(n,10))),null!==(n=t.match(/^hh|h|ll|l|L|z|j|t/))&&(t=t.substring(n.length,t.length));let m="",_=!1;switch(o.toLowerCase()){case"d":case"i":case"u":case"b":case"o":case"x":_=!0;case"e":case"f":case"g":{let t,n="",e=0;switch(_?(isNaN(s)&&(s=parseInt(s,10)),"d"===o||"i"===o?(s<0&&(u="-",s=-s),s=Math.floor(s)):s=s>=0?Math.floor(s):Math.ceil(s)):(isNaN(s)&&(s=parseFloat(s)),s<0&&(u="-",s=-s),f||(g=6)),o.toLowerCase()){case"d":case"i":m+=s.toString(10);break;case"u":m+=r(s).toString(10);break;case"b":m+=r(s).toString(2),a&&(n="0b");break;case"o":m+=r(s).toString(8),a&&(n="0");break;case"x":case"X":m+=r(s).toString(16),a&&(n="0x");break;case"e":m+=s.toExponential(g);break;case"f":m+=s.toFixed(g);break;case"g":0===g&&(g=1),m+=s.toPrecision(g),a||-1===m.indexOf(".")||(m=(m=m.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e"))}if(_){if(f){t=g-m.length;for(let n=0;n<t;n++)m="0"+m}}else a&&-1===m.indexOf(".")&&(-1!==m.indexOf("e")?m=m.replace("e",".e"):m+=".");if(-1!==m.indexOf("e")){const t=function(t){const n=t.length;return 3===t.length?t.substring(0,n-1)+"00"+t.substring(n-1,n):t.substring(0,n-2)+"0"+t.substring(n-2,n)};m=m.replace(/e[+-][0-9]{1,2}$/,t)}if(e=m.length+n.length+u.length,t=h-e,l)for(let n=0;n<t;n++)m+=" ";if(c)for(let n=0;n<t;n++)m="0"+m;if(m=n+m,m=u+m,!c&&!l)for(let n=0;n<t;n++)m=" "+m;o.toUpperCase()===o&&(m=m.toUpperCase());break}case"c":isNaN(s)||(s=String.fromCharCode(s));case"s":{isNaN(s)||(s=s.toString(10)),m=s,f&&m.length>g&&(m=m.substring(0,g));const t=m.length,n=h-t;if(l)for(let t=0;t<n;t++)m+=" ";else{const t=c?"0":" ";for(let e=0;e<n;e++)m=t+m}break}case"%":m="%";break;case"p":case"n":m="(変換できません)"}return m};return i[0].replace(/%[^diubBoxXeEfFgGaAcspn%]*[diubBoxXeEfFgGaAcspn%]/g,o)}}const format=Format.format,toStringFromObj=function(t){return"string"==typeof t||t instanceof String?0===t.length?" ":t:void 0===t?typeof t:null===t?"null":"function"==typeof t.toString?t.toString():t instanceof Object?"Object":"null"};class CUIConsole{constructor(){this.output=CUIConsole._getOutput()}static _getOutput(){const t=function(){return"undefined"!=typeof WSH?null:"undefined"!=typeof console?console:"undefined"!=typeof window&&void 0!==window.console?window.console:null};let n=null;if(function(){return"undefined"!=typeof WSH}())n=/cscript\.exe$/i.test(WSH.FullName)?function(t){/\n$/.test(t)?WSH.StdOut.Write(t):WSH.StdOut.Write(t+"\n")}:WScript.Echo;else if(function(){return null!==t()}()){const e=t();n=e.log}else"undefined"!=typeof alert&&(n=alert);return n}getOutput(){return this.output}}class HtmlConsole{constructor(){this.root=null,this.element=null,this.isshow=!1,this.loglength=250,this.linelength=0}_getElement(){if(null!==this.element)return this.element;const t=document.createElement("div");return t.style.backgroundColor="black",t.style.color="white",t.style.display="block",t.style.margin="0px",t.style.padding="5px",t.style.fontFamily="Consolas, Courier New, Courier, Monaco, monospace",t.style.whiteSpace="pre",this.element=t,this.element}_initHTML(){if(null===this.root){let t;if(t=document.getElementById("senko_console")){let n=t.lastChild;for(;n;)t.removeChild(n),n=t.lastChild}else t=document.body;t.style.backgroundColor="black",t.style.margin="0px",t.style.padding="0px",t.style.overflowY="scroll",t.appendChild(this._getElement()),this.root=t}}isShow(){return this.isshow}setShow(t){if("boolean"!=typeof t)throw"not boolean";this._initHTML();const n=this._getElement();this.isshow!==t&&(this.isshow=t,n&&(n.style.display=this.isshow?"block":"none"))}_autoScroll(){if(null!==this.element&&null!==this.root){const t=this.root.clientHeight,n=this.element.clientHeight;n-t-1*t<=this.root.scrollTop&&(this.root.scrollTop=n)}}_addNewLine(){this._initHTML();const t=this._getElement(),n=document.createElement("p");n.innerText="> ",n.style.margin="0.2em 0px 0.2em 0px",n.style.padding="0px",t.appendChild(n),this.linelength++,this._cleaningLog()}_appendText(t){this._initHTML();const n=this._getElement().lastElementChild;n.innerText=n.innerText+t}_cleaningLog(){if(null!==this.element)for(;this.linelength>this.loglength;)this.element.removeChild(this.element.firstElementChild),this.linelength--}setLogLength(t){this.loglength=t}println(t){this._initHTML();const n=this._getElement();n&&(n.lastElementChild||this._addNewLine(),this._appendText(t),this._addNewLine()),this._autoScroll()}}const cui=(new CUIConsole).getOutput();let gui_obj=null,gui=null;(console||window&&window.console)&&(gui_obj=new HtmlConsole,gui=function(t){gui_obj.println(t)});let show_gui=!1,printbuffer="";class Log{static setGUI(){gui&&(show_gui=!0)}static setCUI(){show_gui=!1}static println(t){const n=printbuffer+toStringFromObj(t);printbuffer="",show_gui?gui(n):cui(n)}static print(t){printbuffer+=toStringFromObj(t)}static printf(){const t=[];for(let n=0;n<arguments.length;n++)t.push(arguments[n]);Log.print(format.apply(this,t))}}class RandomTool{static unsigned32(t){return t<0?2147483648+(2147483647&t):t}static multiplication32(t,n){let e=(65535&t)*(65535&n),i=RandomTool.unsigned32(e);return e=(65535&t)*(n>>>16),i=RandomTool.unsigned32(i+((65535&e)<<16)),e=(t>>>16)*(65535&n),4294967295&(i=RandomTool.unsigned32(i+((65535&e)<<16)))}}class Random{constructor(t){this.x=[];for(let t=0;t<521;t++)this.x[t]=0;if(arguments.length>=1)this.setSeed(t);else{const t=(new Date).getTime()+Random.seedUniquifier&4294967295;Random.seedUniquifier=Random.seedUniquifier+1&4294967295,this.setSeed(t)}}_rnd521(){const t=this.x;for(let n=0;n<32;n++)t[n]^=t[n+489];for(let n=32;n<521;n++)t[n]^=t[n-32]}setSeed(t){let n=0;const e=this.x;let i=t;for(let t=0;t<=16;t++){for(let t=0;t<32;t++)n=(n>>>1)+((i=RandomTool.multiplication32(i,1566083941)+1)<0?2147483648:0);e[t]=n}for(let t=16;t<521;t++)n=16===t?t:t-17,e[t]=e[n]<<23&4294967295^e[t-16]>>>9^e[t-1];for(let t=0;t<4;t++)this._rnd521();this.xi=0,this.haveNextNextGaussian=!1,this.nextNextGaussian=0}genrand_int32(){521===this.xi&&(this._rnd521(),this.xi=0);const t=RandomTool.unsigned32(this.x[this.xi]);return this.xi=this.xi+1,t}next(t){return 0===t?0:32===t?this.genrand_int32():t<32?this.genrand_int32()>>>32-t:63===t?2147483648*this.next(32)+this.next(32):64===t?4294967296*this.next(32)+this.next(32):t<64?this.genrand_int32()*(1<<t-32)+(this.genrand_int32()>>>64-t):void 0}nextBytes(t){const n=new Array(t);for(let t=0;t<n.length;t++)n[t]=this.next(8);return n}nextInt(){if(1===arguments.length){let t,n;const e=arguments[0];do{n=(t=RandomTool.unsigned32(this.genrand_int32()))%e}while(t-n+e>4294967296);return n}return 4294967295&this.next(32)}nextLong(){return this.next(64)}nextBoolean(){return 0!==this.next(1)}nextFloat(){return this.next(24)/16777216}nextDouble(){return(134217728*this.next(26)+this.next(27))/9007199254740992}nextGaussian(){if(this.haveNextNextGaussian)return this.haveNextNextGaussian=!1,this.nextNextGaussian;const t=Math.sqrt(-2*Math.log(this.nextDouble())),n=2*Math.PI*this.nextDouble(),e=t*Math.sin(n);return this.nextNextGaussian=t*Math.cos(n),this.haveNextNextGaussian=!0,e}}Random.seedUniquifier=2271560481;class RoundingModeEntity{static toString(){return"NONE"}static getAddNumber(t){return 0}}class RoundingMode_UP extends RoundingModeEntity{static toString(){return"UP"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?10-n:-(10+n)}}class RoundingMode_DOWN extends RoundingModeEntity{static toString(){return"DOWN"}static getAddNumber(t){return-t%10}}class RoundingMode_CEILING extends RoundingModeEntity{static toString(){return"CEILING"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?10-n:-n}}class RoundingMode_FLOOR extends RoundingModeEntity{static toString(){return"FLOOR"}static getAddNumber(t){const n=t%10;return 0===n?0:n>0?-n:-(10+n)}}class RoundingMode_HALF_UP extends RoundingModeEntity{static toString(){return"HALF_UP"}static getAddNumber(t){const n=t%10,e=n>=0?1:-1;return Math.abs(n)<5?-1*n:e*(10-Math.abs(n))}}class RoundingMode_HALF_DOWN extends RoundingModeEntity{static toString(){return"HALF_DOWN"}static getAddNumber(t){const n=t%10,e=n>=0?1:-1;return Math.abs(n)<6?-1*n:e*(10-Math.abs(n))}}class RoundingMode_HALF_EVEN extends RoundingModeEntity{static toString(){return"HALF_EVEN"}static getAddNumber(t){let n,e,i=t%100;i<0?(n=-1,e=1&Math.ceil(i/10)):(n=1,e=1&Math.floor(i/10));let r;return r=1===e?5:6,i%=10,Math.abs(i)<r?-1*i:n*(10-Math.abs(i))}}class RoundingMode_UNNECESSARY extends RoundingModeEntity{static toString(){return"UNNECESSARY"}static getAddNumber(t){if(0===t%10)return 0;throw"ArithmeticException"}}class RoundingMode{static valueOf(t){if(null===t)throw"NullPointerException";if(t instanceof RoundingModeEntity)return t;const n={RoundingMode_UP:RoundingMode_UP,RoundingMode_DOWN:RoundingMode_DOWN,RoundingMode_FLOOR:RoundingMode_FLOOR,RoundingMode_CEILING:RoundingMode_CEILING,RoundingMode_HALF_UP:RoundingMode_HALF_UP,RoundingMode_HALF_DOWN:RoundingMode_HALF_DOWN,RoundingMode_HALF_EVEN:RoundingMode_HALF_EVEN,RoundingMode_UNNECESSARY:RoundingMode_UNNECESSARY},e=t.toUpperCase();for(let t=0;t<n.length;t++)if(n[t].toString()===e)return n[t];throw"IllegalArgumentException : "+t}static get UP(){return RoundingMode_UP}static get DOWN(){return RoundingMode_DOWN}static get CEILING(){return RoundingMode_CEILING}static get FLOOR(){return RoundingMode_FLOOR}static get HALF_UP(){return RoundingMode_HALF_UP}static get HALF_DOWN(){return RoundingMode_HALF_DOWN}static get HALF_EVEN(){return RoundingMode_HALF_EVEN}static get UNNECESSARY(){return RoundingMode_UNNECESSARY}}class MathContext{constructor(t,n){if(this.precision=t,this.roundingMode=void 0===n?RoundingMode.HALF_UP:n,"string"==typeof t||t instanceof String){let n=t.match(/precision=\d+/);null!==n&&(n=n[0].substring("precision=".length,n[0].length),this.precision=parseInt(n,10)),null!==(n=t.match(/roundingMode=\w+/))&&(n=n[0].substring("roundingMode=".length,n[0].length),this.roundingMode=RoundingMode.valueOf(n))}if(this.precision<0)throw"IllegalArgumentException"}getPrecision(){return this.precision}getRoundingMode(){return this.roundingMode}equals(t){return t instanceof MathContext&&t.toString()===this.toString()}toString(){return"precision="+this.precision+" roundingMode="+this.roundingMode.toString()}static get UNLIMITED(){return DEFINE.UNLIMITED}static get DECIMAL32(){return DEFINE.DECIMAL32}static get DECIMAL64(){return DEFINE.DECIMAL64}static get DECIMAL128(){return DEFINE.DECIMAL128}}const DEFINE={UNLIMITED:new MathContext(0,RoundingMode.HALF_UP),DECIMAL32:new MathContext(7,RoundingMode.HALF_EVEN),DECIMAL64:new MathContext(16,RoundingMode.HALF_EVEN),DECIMAL128:new MathContext(34,RoundingMode.HALF_EVEN)},DEFAULT_RANDOM=new Random;class IntegerTool{static string_to_binary_number(t,n){const e=Math.floor(Math.log(1073741823)/Math.log(n));let i=[];const r=[],o=Math.ceil(t.length/e);let s=t.length;for(let r=0;r<o;r++)s-=e,i[r]=s>=0?parseInt(t.substring(s,s+e),n):parseInt(t.substring(0,s+e),n);const a=Math.round(Math.pow(n,e));for(;0!==i.length;){let t=0;for(let n=i.length-1;n>=0;n--){const e=i[n]+t*a;i[n]=e>>>1,t=1&e}r[r.length]=t,0===i[i.length-1]&&i.pop()}i=[];for(let t=0;t<r.length;t++)i[t>>>4]|=r[t]<<(15&t);return i}static number_to_binary_number(t){if(t>4294967295)return IntegerTool.string_to_binary_number(t.toFixed(),10);let n=t;const e=[];for(;0!==n;)e[e.length]=1&n,n>>>=1;const i=[];for(let t=0;t<e.length;t++)i[t>>>4]|=e[t]<<(15&t);return i}static binary_number_to_string(t,n){const e=function(t,e,i){const r=t.length;let o=0;for(let s=0;s<r;s++)i[s]=t[s]+(e.length>=s+1?e[s]:0)+o,i[s]>=n?(o=1,i[s]-=n):o=0;1===o&&(i[r]=1)},i=[0],r=[1];for(let n=0;n<t.length;n++)for(let o=0;o<16;o++)t[n]>>>o&1&&e(r,i,i),e(r,r,r);return i}static ToBigIntegerFromString(t,n){let e=t.replace(/\s/g,"").toLowerCase(),i=e.match(/^[-+]+/),r=[],o=1;return null!==i&&(i=i[0],e=e.substring(i.length,e.length),-1!==i.indexOf("-")&&(o=-1)),1===(r=n?IntegerTool.string_to_binary_number(e,n):/^0x/.test(e)?IntegerTool.string_to_binary_number(e.substring(2,e.length),16):/^0b/.test(e)?IntegerTool.string_to_binary_number(e.substring(2,e.length),2):/^0/.test(e)?IntegerTool.string_to_binary_number(e.substring(1,e.length),8):IntegerTool.string_to_binary_number(e,10)).length&&0===r[0]&&(r=[],o=0),{element:r,_sign:o}}}class BigInteger{constructor(t){if(this.element=[],this._sign=0,0===arguments.length)this.element=[],this._sign=0;else{if(1!==arguments.length)throw"BigInteger Unsupported argument "+t;if(this._sign=1,t instanceof BigInteger){for(let n=0;n<t.element.length;n++)this.element[n]=t.element[n];this._sign=arguments[0]._sign}else if("number"==typeof t||t instanceof Number){let n=t;n<0&&(this._sign=-1,n=-n),this.element=IntegerTool.number_to_binary_number(n)}else if("string"==typeof t||t instanceof String){const n=IntegerTool.ToBigIntegerFromString(t);this.element=n.element,this._sign=n._sign}else if(t instanceof Array){const n=IntegerTool.ToBigIntegerFromString(t[0],t[1]);this.element=n.element,this._sign=n._sign}else{if(!(t instanceof Object&&t.toString))throw"BigInteger Unsupported argument "+t;{const n=IntegerTool.ToBigIntegerFromString(t.toString());this.element=n.element,this._sign=n._sign}}}}static create(t){return t instanceof BigInteger?t:new BigInteger(t)}static valueOf(t){return BigInteger.create(t)}static _toBigInteger(t){return t instanceof BigInteger?t:new BigInteger(t)}static _toFloat(t){return"number"==typeof t||t instanceof Number?t:t instanceof BigInteger?t.doubleValue:new BigInteger(t).doubleValue}static _toInteger(t){return"number"==typeof t||t instanceof Number?0|t:t instanceof BigInteger?t.intValue:new BigInteger(t).intValue}static createRandomBigInteger(t,n){const e=n&&n instanceof Random?n:DEFAULT_RANDOM,i=new BigInteger;i._sign=1;const r=BigInteger._toInteger(t),o=1+(r-1>>4);let s;if(0===r)return BigInteger.ZERO;for(let t=0,n=0;t<o;t++)0===n?(s=e.nextInt(),i.element[t]=65535&s,n=1):(i.element[t]=s>>>16&65535,n=0);return r%16!=0&&(i.element[i.element.length-1]&=(1<<r%16)-1),i._memory_reduction(),i}static probablePrime(t,n,e=100){for(;;){const i=BigInteger.createRandomBigInteger(t,n);if(i.isProbablePrime(e))return i}}equals(t){const n=BigInteger._toBigInteger(t);if(this.signum()!==n.signum())return!1;if(this.element.length!==n.element.length)return!1;for(let t=0;t<n.element.length;t++)if(this.element[t]!==n.element[t])return!1;return!0}toString(t=10){const n=Math.floor(Math.log(1073741823)/Math.log(t)),e=Math.round(Math.pow(t,n));let i,r=[];for(i=0;i<n;i++)r[i]="0";r=r.join("");const o=IntegerTool.binary_number_to_string(this.element,e),s=[];let a="";for(this.signum()<0&&(s[s.length]="-"),i=o.length-1;i>=0;i--)a=o[i].toString(t),i<o.length-1&&(s[s.length]=r.substring(0,n-a.length)),s[s.length]=a;return s.join("")}getShort(t){const n=BigInteger._toInteger(t);return n<0||this.element.length<=n?0:this.element[n]}get intValue(){let t=this.getShort(0)+(this.getShort(1)<<16);return(t&=4294967295)>0&&this._sign<0&&(t=-t),t}get longValue(){let t=0;for(let n=3;n>=0;n--)t*=65536,t+=this.getShort(n);return this._sign<0&&(t=-t),t}get doubleValue(){return parseFloat(this.toString())}clone(){const t=new BigInteger;return t.element=this.element.slice(0),t._sign=this._sign,t}isNegative(){return this._sign<0}isZero(){return this._memory_reduction(),0===this._sign}isPositive(){return this._sign>0}getLowestSetBit(){for(let t=0;t<this.element.length;t++)if(0!==this.element[t]){const n=this.element[t];for(let e=0;e<16;e++)if(0!=(n>>>e&1))return 16*t+e}return-1}bitLength(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t]){const n=this.element[t];for(let e=15;e>=0;e--)if(0!=(n>>>e&1))return 16*t+e+1}return 0}bitCount(){let t;const n=(t=this._sign>=0?this:this.add(new BigInteger(1))).bitLength();let e=0,i=0;for(let r=0;e<n;r++){const o=t.element[r];for(let t=0;t<16&&e<n;t++,e++)0!=(o>>>t&1)&&(i+=1)}return i}getTwosComplement(t){const n=this.clone();if(n._sign>=0)return n;{n._sign=1;const e=0!==arguments.length?t:n.bitLength(),i=n.element;for(let t=0;t<i.length;t++)i[t]^=65535;return e%16!=0&&(i[i.length-1]&=(1<<e%16)-1),n._add(new BigInteger(1)),n}}_and(t){let n=this,e=BigInteger._toBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i&r}return 0===this.bitLength()&&(this.element=[],this._sign=0),1===i||1===r?this._sign=1:-1===this._sign&&(this.element=this.getTwosComplement(o).element),this}and(t){return this.clone()._and(t)}_or(t){let n=this,e=BigInteger._toBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i|r}return this._sign=-1===i||-1===r?-1:Math.max(i,r),-1===this._sign&&(this.element=this.getTwosComplement(o).element),this}or(t){return this.clone()._or(t)}_xor(t){let n=this,e=BigInteger._toBigInteger(t);const i=n.signum(),r=e.signum(),o=Math.max(n.bitLength(),e.bitLength());n=n.getTwosComplement(o).element,e=e.getTwosComplement(o).element;const s=Math.max(n.length,e.length);this.element=[];for(let t=0;t<s;t++){const i=t>=n.length?0:n[t],r=t>=e.length?0:e[t];this.element[t]=i^r}return this._sign=0!==i&&i!==r?-1:1,-1===this._sign&&(this.element=this.getTwosComplement(o).element),this}xor(t){return this.clone()._xor(t)}_not(){return this._add(new BigInteger(1))._negate()}not(){return this.clone()._not()}_andNot(t){const n=BigInteger._toBigInteger(t);return this._and(n.not())}andNot(t){return this.clone()._andNot(t)}_memory_allocation(t){const n=BigInteger._toInteger(t),e=this.element.length<<4;if(e<n){const t=1+((n-e-1&4294967280)>>>4);for(let n=0;n<t;n++)this.element[this.element.length]=0}}_memory_reduction(){for(let t=this.element.length-1;t>=0;t--)if(0!==this.element[t])return void(t<this.element.length-1&&this.element.splice(t+1,this.element.length-t-1));this._sign=0,this.element=[]}gcd(t){let n,e=this,i=BigInteger._toBigInteger(t);for(;0!==i.signum();)n=e.remainder(i),e=i,i=n;return e}extgcd(t){const n=BigInteger._toBigInteger(t),e=new BigInteger(1),i=new BigInteger(0);let r,o,s,a,l=this,c=n,u=e,h=i,f=i,g=e;for(;0!==c.signum();){const t=l.divideAndRemainder(c);o=t[0],r=t[1],s=u.subtract(o.multiply(h)),a=f.subtract(o.multiply(g)),u=h,h=s,f=g,g=a,l=c,c=r}return[u,f,l]}_abs(){return this._sign*=this._sign,this}abs(){return this.clone()._abs()}_negate(){return this._sign*=-1,this}negate(){return this.clone()._negate()}signum(){return 0===this.element.length?0:this._sign}sign(){return this.signum()}compareToAbs(t){const n=BigInteger._toBigInteger(t);if(this.element.length<n.element.length)return-1;if(this.element.length>n.element.length)return 1;for(let t=this.element.length-1;t>=0;t--)if(this.element[t]!==n.element[t]){const e=this.element[t]-n.element[t];return 0===e?0:e>0?1:-1}return 0}compareTo(t){const n=BigInteger._toBigInteger(t);return this.signum()!==n.signum()?this._sign>n._sign?1:-1:0===this.signum()?0:this.compareToAbs(n)*this._sign}max(t){const n=BigInteger._toBigInteger(t);return this.compareTo(n)>=0?this.clone():n.clone()}min(t){const n=BigInteger._toBigInteger(t);return this.compareTo(n)>=0?n.clone():this.clone()}_shift(t){let n=BigInteger._toInteger(t);if(0===n)return this;const e=this.element;if(1===n){let t=e.length-1;for(0!=(32768&e[t])&&(e[e.length]=1);t>=0;t--)e[t]<<=1,e[t]&=65535,t>0&&0!=(32768&e[t-1])&&(e[t]+=1)}else if(-1===n){for(let t=0;t<e.length;t++)e[t]>>>=1,t<e.length-1&&0!=(1&e[t+1])&&(e[t]|=32768);0===e[e.length-1]&&e.pop()}else{if(n>=16){const t=n>>>4;for(let n=e.length-1;n>=0;n--)e[n+t]=e[n];for(let n=t-1;n>=0;n--)e[n]=0;n&=15}else if(n<=-16){const t=-n>>>4;e.splice(0,t),n+=t<<4}if(0!==n)if(0<n){let t=0;for(let i=0;i<e.length;i++)e[i]=(e[i]<<n)+t,e[i]>65535?(t=e[i]>>>16,e[i]&=65535):t=0;0!==t&&(e[e.length]=t)}else{n=-n;for(let t=0;t<e.length;t++)t!==e.length-1?(e[t]+=e[t+1]<<16,e[t]>>>=n,e[t]&=65535):e[t]>>>=n;0===e[e.length-1]&&e.pop()}}return this}shift(t){return this.clone()._shift(t)}shiftLeft(t){return this.shift(t)}shiftRight(t){return this.shift(-t)}_add(t){const n=this,e=BigInteger._toBigInteger(t);let i=n.element,r=e.element;if(n._sign===e._sign){this._memory_allocation(r.length<<4);let t=0;for(let n=0;n<i.length;n++)i[n]+=(r.length>=n+1?r[n]:0)+t,i[n]>65535?(t=1,i[n]&=65535):t=0;0!==t&&(i[i.length]=t)}else{const t=n.compareToAbs(e);if(0===t)return this.element=[],this._sign=1,this;if(-1===t){this._sign=e._sign;const t=i;i=r.slice(0),r=t}let o=0;for(let t=0;t<i.length;t++)i[t]-=(r.length>=t+1?r[t]:0)+o,i[t]<0?(i[t]+=65536,o=1):o=0;this.element=i,this._memory_reduction()}return this}add(t){return this.clone()._add(t)}_subtract(t){const n=BigInteger._toBigInteger(t),e=n._sign,i=this._add(n._negate());return n._sign=e,i}subtract(t){return this.clone()._subtract(t)}sub(t){return this.subtract(t)}_multiply(t){const n=this.multiply(t);return this.element=n.element,this._sign=n._sign,this}multiply(t){const n=BigInteger._toBigInteger(t),e=new BigInteger,i=new BigInteger,r=n,o=this.element,s=r.element,a=e.element;for(let t=0;t<o.length;t++){i.element=[];const n=i.element;let r=0;for(let e=0;e<s.length;e++)n[e]=o[t]*s[e]+r,n[e]>65535?(r=n[e]>>>16,n[e]&=65535):r=0;0!==r&&(n[n.length]=r);for(let e=n.length-1;e>=0;e--)n[e+t]=n[e];for(let e=t-1;e>=0;e--)n[e]=0;r=0,e._memory_allocation(n.length<<4);for(let e=t;e<a.length;e++)a[e]+=(n.length>=e+1?n[e]:0)+r,a[e]>65535?(r=1,a[e]&=65535):r=0;0!==r&&(a[a.length]=r)}return e._sign=this._sign*n._sign,e}mul(t){return this.multiply(t)}_divideAndRemainder(t){const n=BigInteger._toBigInteger(t),e=[];if(0===n.signum())return e[0]=1/0,e[1]=NaN,e;const i=this.compareToAbs(n);if(i<0)return e[0]=new BigInteger(0),e[1]=this.clone(),e;if(0===i)return e[0]=new BigInteger(1),e[0]._sign=this._sign*n._sign,e[1]=new BigInteger(0),e;const r=new BigInteger(1),o=this.bitLength()-n.bitLength(),s=this.clone()._abs(),a=n.shift(o)._abs(),l=new BigInteger;for(let t=0;t<=o&&(s.compareToAbs(a)>=0&&(s._subtract(a),l._add(r)),t!==o);t++)a._shift(-1),l._shift(1);return e[0]=l,e[0]._sign=this._sign*n._sign,e[1]=s,e[1]._sign=this._sign,e}divideAndRemainder(t){return this.clone()._divideAndRemainder(t)}_divide(t){return this._divideAndRemainder(t)[0]}divide(t){return this.clone()._divide(t)}div(t){return this.divide(t)}_remainder(t){return this._divideAndRemainder(t)[1]}remainder(t){return this.clone()._remainder(t)}rem(t){return this.remainder(t)}_mod(t){const n=BigInteger._toBigInteger(t);if(n.signum()<0)return null;const e=this._divideAndRemainder(n);return e[1]instanceof BigInteger?e[1].signum()>=0?e[1]:e[1]._add(n):null}mod(t){return this.clone()._mod(t)}_setBit(t){const n=BigInteger._toInteger(t);return this._memory_allocation(n+1),this.element[n>>>4]|=1<<(15&n),this}setBit(t){const n=BigInteger._toInteger(t);return this.clone()._setBit(n)}_flipBit(t){const n=BigInteger._toInteger(t);return this._memory_allocation(n+1),this.element[n>>>4]^=1<<(15&n),this}flipBit(t){const n=BigInteger._toInteger(t);return this.clone()._flipBit(n)}clearBit(t){const n=BigInteger._toInteger(t),e=this.clone();return e.element[n>>>4]&=~(1<<(15&n)),e._memory_reduction(),e}testBit(t){const n=BigInteger._toInteger(t);return 0!=(this.element[n>>>4]>>>(15&n)&1)}pow(t){const n=new BigInteger(t);let e=new BigInteger(this),i=new BigInteger(1);for(;0!==n.element.length;)0!=(1&n.element[0])&&(i=i.multiply(e)),e=e.multiply(e),n._shift(-1);return i}modPow(t,n){const e=BigInteger._toBigInteger(n);let i=new BigInteger(this),r=new BigInteger(1);const o=new BigInteger(t);for(;0!==o.element.length;)0!=(1&o.element[0])&&(r=r.multiply(i).mod(e)),i=i.multiply(i).mod(e),o._shift(-1);return r}modInverse(t){const n=BigInteger._toBigInteger(t),e=this.extgcd(t),i=new BigInteger(1);return 0!==e[2].compareTo(i)?null:e[0]._add(n)._mod(n)}isProbablePrime(t){const n=this.element;if(0===n.length||1===n.length&&n[0]<=2)return!0;if(0==(1&n[0])||t<=0)return!1;const e=t?BigInteger._toInteger(t)>>1:50,i=new BigInteger(0),r=new BigInteger(1),o=this,s=o.bitLength(),a=o.subtract(r),l=a.getLowestSetBit(),c=a.shift(-l);let u,h;for(let t=0;t<e;t++){do{u=BigInteger.createRandomBigInteger(s)}while(0===u.compareTo(i)||-1!==u.compareTo(o));if(0!==(u=u.modPow(c,o)).compareTo(r)){h=!0;for(let t=0;t<=l;t++){if(0===u.compareTo(a)){h=!1;break}t<l&&(u=u.multiply(u)._mod(o))}if(h)return!1}}return!0}nextProbablePrime(){const t=this.clone();for(;;)if(t._add(BigInteger.ONE),t.isProbablePrime(100))break;return t}static get ZERO(){return DEFINE$1.ZERO}static get ONE(){return DEFINE$1.ONE}static get TWO(){return DEFINE$1.TWO}static get TEN(){return DEFINE$1.TEN}}const DEFINE$1={ONE:new BigInteger(1),TWO:new BigInteger(2),TEN:new BigInteger(10),ZERO:new BigInteger(0)};let DEFAULT_CONTEXT=MathContext.DECIMAL128;class DecimalTool{static ToBigDecimalFromString(t){let n,e=0,i=t.replace(/\s/g,"").toLowerCase(),r="";return null!==(n=i.match(/^[+-]+/))&&(n=n[0],i=i.substr(n.length),-1!==n.indexOf("-")&&(r+="-")),null!==(n=i.match(/^[0-9]+/))&&(n=n[0],i=i.substr(n.length),r+=n),null!==(n=i.match(/^\.[0-9]+/))&&(n=n[0],i=i.substr(n.length),e+=(n=n.substr(1)).length,r+=n),null!==(n=i.match(/^e[+-]?[0-9]+/))&&(n=n[0].substr(1),e-=parseInt(n,10)),{scale:e,integer:new BigInteger([r,10])}}}class BigDecimal{constructor(t){this._scale=0,this.default_context=DEFAULT_CONTEXT;let n=null;if(arguments.length>1)throw"BigDecimal Unsupported argument["+arguments.length+"]";if(t instanceof BigDecimal)this.integer=t.integer.clone(),this._scale=t._scale,this.int_string=t.int_string,this.default_context=t.default_context;else if(t instanceof BigInteger)this.integer=t.clone();else if("number"==typeof t||t instanceof Number)if(t===Math.floor(t))this.integer=new BigInteger(t);else{let n=0,e=t;for(let t=0;t<10&&(e*=10,n+=1,e!==Math.floor(e));t++);this._scale=n,this.integer=new BigInteger(e)}else if(t instanceof Array){if(t.length>=1)if("string"==typeof t[0]||t[0]instanceof String){const n=DecimalTool.ToBigDecimalFromString(t[0]);this.integer=n.integer,this._scale=n.scale}else this.integer=new BigInteger(t[0]);t.length>=2&&("number"==typeof t[1]||t[1]instanceof Number?(this._scale=t[1],t.length>=3&&(this.default_context=t[2]),t.length>=4&&(n=t[3])):(t.length>=2&&(this.default_context=t[1]),t.length>=3&&(n=t[2])))}else if("string"==typeof t||t instanceof String){const n=DecimalTool.ToBigDecimalFromString(t);this.integer=n.integer,this._scale=n.scale}else if(t instanceof Object&&void 0!==t.scale&&void 0!==t.default_context)this.integer=new BigInteger(t.integer),t.scale&&(this._scale=t.scale),t.default_context&&(this.default_context=t.default_context),t.context&&(n=t.context);else{if(!(t instanceof Object&&void 0!==t.toString))throw"BigDecimal Unsupported argument "+arguments;{const n=DecimalTool.ToBigDecimalFromString(t.toString());this.integer=n.integer,this._scale=n.scale}}if(n){const t=this.round(n);this.integer=t.integer,this._scale=t._scale,delete this.int_string}if(!(this.integer instanceof BigInteger&&this.default_context instanceof MathContext))throw"BigDecimal Unsupported argument "+arguments}static create(t){return t instanceof BigDecimal?t:new BigDecimal(t)}static valueOf(t,n){return new BigDecimal(1===arguments.length?t:[t,n])}static _toBigDecimal(t){return t instanceof BigDecimal?t:new BigDecimal(t)}static _toBigInteger(t){return t instanceof BigInteger?t:t instanceof BigDecimal?t.toBigInteger():new BigInteger(t)}static _toFloat(t){return"number"==typeof t||t instanceof Number?t:t instanceof BigDecimal?t.doubleValue:new BigDecimal(t).doubleValue}static _toInteger(t){return"number"==typeof t||t instanceof Number?0|t:t instanceof BigInteger?t.intValue:new BigInteger(t).intValue}_getUnsignedIntegerString(){return void 0===this.int_string&&(this.int_string=this.integer.toString(10).replace(/^-/,"")),this.int_string}clone(){return new BigDecimal(this)}scale(){return this._scale}signum(){return this.integer.signum()}sign(){return this.signum()}precision(){return this._getUnsignedIntegerString().length}unscaledValue(){return new BigInteger(this.integer)}toScientificNotation(t){const n=BigDecimal._toInteger(t),e=this._getUnsignedIntegerString();let i=this.scale();const r=[];let o,s;if(-1===this.signum()&&(r[r.length]="-"),(i=-n-i)>=0)for(r[r.length]=e,o=0;o<i;o++)r[r.length]="0";else if(0<(s=this.precision()+i))r[r.length]=e.substring(0,s),r[r.length]=".",r[r.length]=e.substring(s,e.length);else{for(s=-s,r[r.length]="0.",o=0;o<s;o++)r[r.length]="0";r[r.length]=e}return r[r.length]="E",n>=0&&(r[r.length]="+"),r[r.length]=n,r.join("")}toString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(t)}toEngineeringString(){const t=-this.scale()+(this.precision()-1);return this.scale()>=0&&t>=-6?this.toPlainString():this.toScientificNotation(3*Math.floor(t/3))}toPlainString(){return 0===this.scale()?this.signum()<0?"-"+this._getUnsignedIntegerString():this._getUnsignedIntegerString():this.toScientificNotation(0).match(/^[^E]*/)[0]}ulp(){return new BigDecimal([BigInteger.ONE,this.scale(),this.default_context])}setScale(t,n=RoundingMode.UNNECESSARY,e){const i=BigDecimal._toInteger(t);if(this.scale()===i)return this.clone();const r=void 0!==e?e:this.default_context;let o=this._getUnsignedIntegerString();const s=this.signum(),a=s>=0?"":"-",l=i-this.scale();if(0<=l){let t;for(t=0;t<l;t++)o+="0";return new BigDecimal([new BigInteger(a+o),i,r])}const c=o.length+l,u=c+1;if(c<=0){const t=(s+n.getAddNumber(s))/10;return new BigDecimal([new BigInteger(t),i,r])}{const t=o.match(/0+$/),e=null!==t?t[0].length:0;if(e+l>=0||n===RoundingMode.DOWN)return new BigDecimal([new BigInteger(a+o.substring(0,c)),i,r])}{const t=(o=o.substring(0,u)).length>1?2:1,e=parseInt(o.substring(o.length-t,o.length))*s,l=new BigInteger(a+o),c=new BigInteger(n.getAddNumber(e));return o=l.add(c).toString(),new BigDecimal([new BigInteger(o.substring(0,o.length-1)),i,r])}}round(t){if(!(t instanceof MathContext))throw"not MathContext";const n=t.getPrecision(),e=n-this.precision();if(0===e||0===n)return this.clone();const i=this.setScale(this.scale()+e,t.getRoundingMode(),t);if(e>0)return i;if(i.precision()===t.getPrecision())return i;const r=i.integer.signum()>=0?"":"-",o=i._getUnsignedIntegerString(),s=r+o.substring(0,o.length-1);return new BigDecimal([new BigInteger(s),i.scale()-1,t])}abs(t){const n=this.clone();return n.integer=n.integer.abs(),void 0===t?n:n.round(t)}plus(t){const n=this.clone();return void 0===t?n:n.round(t)}negate(t){const n=this.clone();return n.integer=n.integer.negate(),void 0===t?n:n.round(t)}compareTo(t){const n=this,e=BigDecimal._toBigDecimal(t);{const t=n.signum(),i=e.signum();if(0===t&&t===i)return 0;if(0===t)return-i;if(0===i)return t}if(n._scale===e._scale)return n.integer.compareTo(e.integer);if(n._scale>e._scale){const t=e.setScale(n._scale);return n.integer.compareTo(t.integer)}{const t=n.setScale(e._scale);return t.integer.compareTo(e.integer)}}equals(t){if(t instanceof BigDecimal)return this._scale===t._scale&&this.integer.equals(t.integer);if("string"==typeof t||t instanceof String){const n=BigDecimal._toBigDecimal(t);return this._scale===n._scale&&this.integer.equals(n.integer)}return 0===this.compareTo(t)}min(t){const n=BigDecimal._toBigDecimal(t);return this.compareTo(n)<=0?this.clone():n.clone()}max(t){const n=BigDecimal._toBigDecimal(t);return this.compareTo(n)>=0?this.clone():n.clone()}scaleByPowerOfTen(t){const n=BigDecimal._toBigInteger(t),e=this.clone();return e._scale=this.scale()-n,e}movePointLeft(t){const n=BigDecimal._toBigInteger(t);let e=this.scaleByPowerOfTen(-n);return e=e.setScale(Math.max(this.scale()+n,0))}movePointRight(t){const n=BigDecimal._toBigInteger(t);let e=this.scaleByPowerOfTen(n);return e=e.setScale(Math.max(this.scale()-n,0))}stripTrailingZeros(){const t=this.signum()>=0?"":"-",n=this.integer.toString(10).replace(/^-/,""),e=n.match(/0+$/);let i=null!==e?e[0].length:0;i===n.length&&(i=n.length-1);const r=this.scale()-i;return new BigDecimal([new BigInteger(t+n.substring(0,n.length-i)),r,this.default_context])}add(t,n){const e=BigDecimal._toBigDecimal(t),i=n||e.default_context,r=this,o=e,s=Math.max(r._scale,o._scale);if(r._scale===o._scale)return new BigDecimal([r.integer.add(o.integer),s,i,i]);if(r._scale>o._scale){const t=o.setScale(r._scale);return new BigDecimal([r.integer.add(t.integer),s,i,i])}{const t=r.setScale(o._scale);return new BigDecimal([t.integer.add(o.integer),s,i,i])}}subtract(t,n){const e=BigDecimal._toBigDecimal(t),i=n||e.default_context,r=this,o=e,s=Math.max(r._scale,o._scale);if(r._scale===o._scale)return new BigDecimal([r.integer.subtract(o.integer),s,i,i]);if(r._scale>o._scale){const t=o.setScale(r._scale);return new BigDecimal([r.integer.subtract(t.integer),s,i,i])}{const t=r.setScale(o._scale);return new BigDecimal([t.integer.subtract(o.integer),s,i,i])}}sub(t,n){return this.subtract(t,n)}multiply(t,n){const e=BigDecimal._toBigDecimal(t),i=n||e.default_context,r=this,o=e,s=r.integer.multiply(o.integer),a=r._scale+o._scale;return new BigDecimal([s,a,i])}mul(t,n){return this.multiply(t,n)}divideToIntegralValue(t,n){const e=BigDecimal._toBigDecimal(t),i=n||e.default_context,r=function(t){let n,e="1";for(n=0;n<t;n++)e+="0";return new BigInteger(e)};if(0===e.compareTo(BigDecimal.ZERO))throw"ArithmeticException";const o=this,s=e;let a=o.integer,l=s.integer;const c=o._scale-s._scale;o._scale>s._scale?l=l.multiply(r(c)):o._scale<s._scale&&(a=a.multiply(r(-c)));const u=a.divide(l),h=u.signum();if(0!==h){const t=u.toString(10).replace(/^-/,"");if(0!==i.getPrecision()&&t.length>i.getPrecision())throw"ArithmeticException";if(t.length<=-c){const n=t.match(/0+$/),e=null!==n?n[0].length:0,r=h>=0?"":"-";return new BigDecimal([new BigInteger(r+t.substring(0,t.length-e)),-e,i])}}let f=new BigDecimal(u);return f=f.setScale(c,RoundingMode.UP),f=f.round(i),f.default_context=i,f}divideAndRemainder(t,n){const e=BigDecimal._toBigDecimal(t),i=n||e.default_context,r=this.divideToIntegralValue(e,i);return[r,this.subtract(r.multiply(e,i),i)]}rem(t,n){return this.divideAndRemainder(t,n)[1]}mod(t,n){const e=this.rem(t,n);if(e.compareTo(BigDecimal.ZERO)<0)return e.add(t,n)}divide(t,n){const e=this,i=BigDecimal._toBigDecimal(t);let r=null,o=null,s=0,a=!1;if(n&&n.scale?(a=!1,s=n.scale):(a=!0,s=n&&(n.roundingMode||n.context)?e.scale():e.scale()-i.scale()),n&&n.context?(r=n.context.getRoundingMode(),s=n.context.getPrecision(),o=n.context):o=this.default_context,r=n&&n.roundingMode?n.roundingMode:o.getRoundingMode(),0===i.compareTo(BigDecimal.ZERO))throw"ArithmeticException";let l,c=e;const u=[];let h,f,g,m;m=BigDecimal.ZERO;const _=o.getPrecision(),x=0!==_?_+8:262143;for(l=0;l<x&&(h=c.divideAndRemainder(i,MathContext.UNLIMITED),f=h[0],g=h[1],m=m.add(f.scaleByPowerOfTen(-l),MathContext.UNLIMITED),0!==g.compareTo(BigDecimal.ZERO));l++){if(0===_){if(u[g._getUnsignedIntegerString()])throw"ArithmeticException "+m+"["+g._getUnsignedIntegerString()+"]";u[g._getUnsignedIntegerString()]=!0}c=g.scaleByPowerOfTen(1)}if(a)try{m=m.setScale(s,r)}catch(t){}else m=m.setScale(s,r);return m=m.round(o)}div(t,n){return this.divide(t,n)}toBigInteger(){const t=this.toPlainString().replace(/\.\d*$/,"");return new BigInteger(t)}toBigIntegerExact(){const t=this.setScale(0,RoundingMode.UNNECESSARY);return new BigInteger(t.toPlainString())}get intValue(){let t=this.toBigInteger();return 4294967295&(t=t.intValue)}get intValueExact(){let t=this.toBigIntegerExact();if((t=t.intValue)<-2147483648||2147483647<t)throw"ArithmeticException";return t}get floatValue(){const t=this.precision();return MathContext.DECIMAL32.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}get doubleValue(){const t=this.precision();return MathContext.DECIMAL64.getPrecision()<t?this.signum()>=0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:parseFloat(t.toEngineeringString())}pow(t,n){let e=BigDecimal._toInteger(t);const i=n||e.default_context;if(Math.abs(e)>999999999)throw"ArithmeticException";if(0===i.getPrecision()&&e<0)throw"ArithmeticException";if(i.getPrecision()>0&&e>i.getPrecision())throw"ArithmeticException";let r,o;for(r=this.clone(),o=BigDecimal.ONE;0!==e;)0!=(1&e)&&(o=o.multiply(r,MathContext.UNLIMITED)),r=r.multiply(r,MathContext.UNLIMITED),e>>>=1;return o.round(i)}static setDefaultContext(t){DEFAULT_CONTEXT=t||MathContext.DECIMAL128}static getDefaultContext(){return DEFAULT_CONTEXT}static get ZERO(){const t=new BigDecimal(DEFINE$2.ZERO);return t.default_context=DEFAULT_CONTEXT,t}static get ONE(){const t=new BigDecimal(DEFINE$2.ONE);return t.default_context=DEFAULT_CONTEXT,t}static get TWO(){const t=new BigDecimal(DEFINE$2.TWO);return t.default_context=DEFAULT_CONTEXT,t}static get TEN(){const t=new BigDecimal(DEFINE$2.TEN);return t.default_context=DEFAULT_CONTEXT,t}}const DEFINE$2={ZERO:new BigDecimal(0),ONE:new BigDecimal(1),TWO:new BigDecimal(2),TEN:new BigDecimal(10)};BigDecimal.RoundingMode=RoundingMode,BigDecimal.MathContext=MathContext;const random_class=new Random;class ComplexTool{static ToComplexFromString(t){const n=t.replace(/\s/g,"").toLowerCase();if(!/[ij]/.test(n))return{real:parseFloat(n),imag:0};let e,i=0,r=0;return(e=n.match(/[+-]?[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?($|[+-])/))&&(i=parseFloat(e[0])),(e=n.match(/[+-]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]/))&&(e=e[0].substring(0,e[0].length-1),r=/^[-+]$/.test(e)||0===e.length?"-"===e?-1:1:parseFloat(e)),{real:i,imag:r}}}class Complex{constructor(t){if(1!==arguments.length)throw"Complex Many arguments : "+arguments.length;{const n=t;if(n instanceof Complex||n instanceof Object&&n._re&&n._im)this._re=n._re,this._im=n._im;else if("number"==typeof n||n instanceof Number)this._re=n,this._im=0;else if(n instanceof Array&&2===n.length)this._re=n[0],this._im=n[1];else if("string"==typeof n||n instanceof String){const t=ComplexTool.ToComplexFromString(n);this._re=t.real,this._im=t.imag}else{if(!(n instanceof Object&&n.toString))throw"Complex Unsupported argument "+arguments;{const t=ComplexTool.ToComplexFromString(n.toString());this._re=t.real,this._im=t.imag}}}}static create(t){return t instanceof Complex?t:new Complex(t)}static valueOf(t){return Complex.valueOf(t)}static _toComplex(t){return t instanceof Complex?t:new Complex(t)}static _toFloat(t){if("number"==typeof t||t instanceof Number)return t;if((t instanceof Complex?t:new Complex(t)).isReal())return new Complex(t).real;throw"not support complex numbers."}static _toInteger(t){throw 0|Complex._toFloat(t)}clone(){return this}toString(){const t=function(t){let n=t.toPrecision(6);return-1!==n.indexOf(".")&&(n=(n=n.replace(/\.?0+$/,"")).replace(/\.?0+e/,"e")),n};return this.isReal()?t(this._re):0===this._re?t(this._im)+"i":this._im>=0?t(this._re)+" + "+t(this._im)+"i":t(this._re)+" - "+t(-this._im)+"i"}static rand(){return new Complex(random_class.nextDouble())}static randn(){return new Complex(random_class.nextGaussian())}equals(t,n){const e=Complex._toComplex(t),i=n?Complex._toFloat(n):Number.EPSILON;return Math.abs(this._re-e._re)<i&&Math.abs(this._im-e._im)<i}get real(){return this._re}get imag(){return this._im}get norm(){return 0===this._im?Math.abs(this._re):0===this._re?Math.abs(this._im):Math.sqrt(this._re*this._re+this._im*this._im)}get angle(){return 0===this._im?0:0===this._re?Math.PI*(this._im>=0?.5:-.5):Math.atan2(this._im,this._re)}getDecimalPosition(){let t=0,n=this;for(let e=0;e<20&&!n.isComplexInteger();e++)n=n.mul(Complex.TEN),t++;return t}add(t){const n=new Complex(t);return n._re=this._re+n._re,n._im=this._im+n._im,n}sub(t){const n=new Complex(t);return n._re=this._re-n._re,n._im=this._im-n._im,n}mul(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=-this._im*n._im,n._im=0,n;{const t=this._re*n._re-this._im*n._im,e=this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}dot(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re*n._re,n;if(0===this._re&&0===n._re)return n._re=this._im*n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=-this._im*n._re+this._re*n._im;return n._re=t,n._im=e,n}}div(t){const n=new Complex(t);if(0===this._im&&0===n._im)return n._re=this._re/n._re,n;if(0===this._re&&0===n._re)return n._re=this._im/n._im,n._im=0,n;{const t=this._re*n._re+this._im*n._im,e=this._im*n._re-this._re*n._im,i=1/(n._re*n._re+n._im*n._im);return n._re=t*i,n._im=e*i,n}}mod(t){const n=new Complex(t);if(0!==this._im||0!==n._im)throw"calculation method is undefined.";let e=this._re-n._re*(0|this._re/n._re);return e<0&&(e+=n._re),n._re=e,n}inv(){return 0===this._im?new Complex(1/this._re):0===this._re?new Complex([0,-1/this._im]):Complex.ONE.div(this)}sign(){return 0===this._im?new Complex(0===this._re?0:this._re>0?1:-1):this.div(this.norm)}max(t,n){const e=Complex._toComplex(t);return this.compareTo(e,n)>=0?this:e}min(t,n){const e=Complex._toComplex(t);return this.compareTo(e,n)<=0?this:e}compareTo(t,n){const e=Complex._toComplex(t);return this.equals(e,n)?0:this.real+this.imag>e.real+e.imag?1:-1}isInteger(t){const n=t?Complex._toFloat(t):Number.EPSILON;return this.isReal()&&Math.abs(this._re-(0|this._re))<n}isComplexInteger(t){const n=t?Complex._toFloat(t):Number.EPSILON;return Math.abs(this._re-(0|this._re))<n&&Math.abs(this._im-(0|this._im))<n}isZero(t){const n=t?Complex._toFloat(t):Number.EPSILON;return Math.abs(this._re)<n&&Math.abs(this._im)<n}isOne(t){const n=t?Complex._toFloat(t):Number.EPSILON;return Math.abs(this._re-1)<n&&Math.abs(this._im)<n}isComplex(t){const n=t?Complex._toFloat(t):Number.EPSILON;return Math.abs(this._im)>=n}isReal(t){const n=t?Complex._toFloat(t):Number.EPSILON;return Math.abs(this._im)<n}isNaN(){return Math.isNaN(this._re)||Math.isNaN(this._im)}isPositive(){return 0<this._re}isNegative(){return 0>this._re}isNotNegative(){return 0<=this._re}isInfinite(){return this._re===Number.POSITIVE_INFINITY||this._im===Number.POSITIVE_INFINITY||this._re===Number.NEGATIVE_INFINITY||this._im===Number.NEGATIVE_INFINITY}isFinite(){return!this.isNaN()&&!this.isInfinite()}abs(){return new Complex(this.norm)}conj(){return 0===this._im?this:new Complex([this._re,-this._im])}negate(){return new Complex([-this._re,-this._im])}pow(t){const n=new Complex(t);if(this.isReal()&&n.isReal()&&this.isNotNegative())return n._re=Math.pow(this._re,n._re),n;if(n.isReal()){const t=Math.pow(this.norm,n._re),e=this.angle*n._re;return n._re=t*Math.cos(e),n._im=t*Math.sin(e),n}return n.mul(this.log()).exp()}square(){return new Complex(this._re*this._re+this._im*this._im)}sqrt(){if(this.isReal())return new Complex(this.isNotNegative()?Math.sqrt(this._re):[0,Math.sqrt(-this._re)]);const t=Math.sqrt(this.norm),n=.5*this.angle;return new Complex([t*Math.cos(n),t*Math.sin(n)])}log(){return new Complex(this.isReal()&&this.isNotNegative()?Math.log(this._re):[Math.log(this.norm),this.angle])}exp(){if(this.isReal())return new Complex(Math.exp(this._re));const t=Math.exp(this._re);return new Complex([t*Math.cos(this._im),t*Math.sin(this._im)])}sin(){if(this.isReal())return new Complex(Math.sin(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.sub(n).div([0,2])}cos(){if(this.isReal())return new Complex(Math.cos(this._re));const t=this.mul(Complex.I).exp(),n=this.mul(Complex.I.negate()).exp();return t.add(n).div(2)}tan(){return this.isReal()?new Complex(Math.tan(this._re)):this.sin().div(this.cos())}atan(){return this.isReal()?new Complex(Math.atan(this._re)):Complex.I.div(Complex.TWO).mul(Complex.I.add(this).div(Complex.I.sub(this)).log())}atan2(t){if(0===arguments.length)return new Complex(this.angle);const n=this,e=Complex._toComplex(t);if(n.isReal()&&e.isReal())return new Complex(Math.atan2(n._re,e._re));throw"calculation method is undefined."}sinc(){return this.isReal()?0===this._re?Complex.ONE:new Complex(Math.sin(this._re)/this._re):new Complex(this.sin().div(this))}floor(){return new Complex([Math.floor(this._re),Math.floor(this._im)])}ceil(){return new Complex([Math.ceil(this._re),Math.ceil(this._im)])}round(){return new Complex([Math.round(this._re),Math.round(this._im)])}fix(){return new Complex([0|this._re,0|this._im])}fract(){return new Complex([this._re-(0|this._re),this._im-(0|this._im)])}static get ONE(){return DEFINE$3.ONE}static get TWO(){return DEFINE$3.TWO}static get TEN(){return DEFINE$3.TEN}static get ZERO(){return DEFINE$3.ZERO}static get MINUS_ONE(){return DEFINE$3.MINUS_ONE}static get I(){return DEFINE$3.I}static get PI(){return DEFINE$3.PI}static get HALF(){return DEFINE$3.HALF}static get POSITIVE_INFINITY(){return DEFINE$3.POSITIVE_INFINITY}static get NEGATIVE_INFINITY(){return DEFINE$3.NEGATIVE_INFINITY}static get NaN(){return DEFINE$3.NaN}}const DEFINE$3={ZERO:new Complex(0),ONE:new Complex(1),TWO:new Complex(2),TEN:new Complex(10),MINUS_ONE:new Complex(-1),I:new Complex([0,1]),PI:new Complex(Math.PI),HALF:new Complex(.5),POSITIVE_INFINITY:new Complex(Number.POSITIVE_INFINITY),NEGATIVE_INFINITY:new Complex(Number.NEGATIVE_INFINITY),NaN:new Complex(Number.NaN)};class LinearAlgebraTool{static tridiagonalize(t){const n=Matrix._toMatrix(t).getNumberMatrixArray(),e=function(t,n,e,i){let r=0;const o=e||0,s=i||t.length;for(let e=o;e<s;e++)r+=t[e]*n[e];return r},i=n.length,r=[],o=[];for(let t=0;t<i-2;t++){const s=n[t];r[t]=s[t];{const n=function(t,n,i){const r=n||0,o=i||t.length;let s=Math.sqrt(e(t,t,r,o));const a=[];if(Math.abs(s)>=1e-10){t[r]<0&&(s=-s);let n;for(let e=r,i=0;e<o;e++,i++)e===r?(a[i]=t[e]+s,n=1/Math.sqrt(a[i]*s),a[i]=a[i]*n):a[i]=t[e]*n}return{y1:-s,v:a}}(s,t+1,i);o[t]=n.y1;for(let e=0;e<n.v.length;e++)s[t+1+e]=n.v[e]}if(!(Math.abs(o[t])<1e-10)){for(let e=t+1;e<i;e++){let o=0;for(let i=t+1;i<e;i++)o+=n[i][e]*s[i];for(let t=e;t<i;t++)o+=n[e][t]*s[t];r[e]=o}const o=e(s,r,t+1,i)/2;for(let e=i-1;e>t;e--){const t=s[e],a=r[e]-o*t;r[e]=a;for(let o=e;o<i;o++){const i=t*r[o]+a*s[o];n[e][o]=n[e][o]-i}}}}i>=2&&(r[i-2]=n[i-2][i-2],o[i-2]=n[i-2][i-1]),i>=1&&(r[i-1]=n[i-1][i-1]);for(let t=i-1;t>=0;t--){const r=n[t];if(t<i-2)for(let o=t+1;o<i;o++){const s=n[o],a=e(r,s,t+1,i);for(let n=t+1;n<i;n++)s[n]-=a*r[n]}for(let t=0;t<i;t++)r[t]=0;r[t]=1}const s=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?new Complex(r[t]):1===Math.abs(t-n)?new Complex(o[.5*(t+n)|0]):Complex.ZERO},i,i);return{P:new Matrix(n).T(),H:s}}static eig(t){const n=Matrix._toMatrix(t);let e=!1;const i=LinearAlgebraTool.tridiagonalize(n),r=i.P.getNumberMatrixArray(),o=i.H.getNumberMatrixArray(),s=n.row_length,a=[],l=[];for(let t=0;t<s;t++)a[t]=o[t][t],l[t]=0===t?0:o[t][t-1];for(let t=s-1;t>0;t--){let n=t;for(n=t;n>=1&&!(Math.abs(l[n])<=1e-10*(Math.abs(a[n-1])+Math.abs(a[n])));n--);if(n!=t){let i=0;for(;;){if(++i>100){e=!0;break}let o=(a[t-1]-a[t])/2,c=l[t]*l[t],u=Math.sqrt(o*o+c);o<0&&(u=-u);let h=a[n]-a[t]+c/(o+u),f=l[n+1];for(let e=n;e<t;e++){let i,u;Math.abs(h)>=Math.abs(f)?u=(c=-f/h)*(i=1/Math.sqrt(c*c+1)):i=(c=-h/f)*(u=1/Math.sqrt(c*c+1)),c=((o=a[e]-a[e+1])*u+2*i*l[e+1])*u,a[e]-=c,a[e+1]+=c,e>n&&(l[e]=i*l[e]-u*f),l[e+1]+=u*(i*o-2*u*l[e+1]);for(let t=0;t<s;t++)h=r[t][e],f=r[t][e+1],r[t][e]=i*h-u*f,r[t][e+1]=u*h+i*f;e<t-1&&(h=l[e+1],f=-u*l[e+2],l[e+2]*=i)}if(Math.abs(l[t])<=1e-10*(Math.abs(a[t-1])+Math.abs(a[t])))break}if(e)break}}return function(t,n){const e=n.length,i=[];for(let t=0;t<e;t++)i[t]={sigma:n[t],index:t};const r=function(t,n){return t===n?0:t<n?-1:1};i.sort(r);const o=Matrix.zeros(e),s=Matrix.zeros(e);for(let t=0;t<e;t++)s.matrix_array[t][t]=new Complex(i[t].sigma),o.matrix_array[t][i[t].index]=Complex.ONE;return{V:t.mul(o),D:s}}(new Matrix(r),a)}static doGramSchmidtOrthonormalization(t){const n=Matrix._toMatrix(t),e=n.column_length,i=n.matrix_array,r=Matrix.zeros(e),o=Matrix.zeros(e),s=r.matrix_array,a=o.matrix_array,l=[],c=new Array(e);for(let t=0;t<e;t++){for(let n=0;n<e;n++)c[n]=i[n][t];if(t>0){for(let n=0;n<t;n++)for(let r=0;r<e;r++)a[n][t]=a[n][t].add(i[r][t].dot(s[r][n]));for(let n=0;n<t;n++)for(let i=0;i<e;i++)c[i]=c[i].sub(a[n][t].mul(s[i][n]))}for(let n=0;n<e;n++)a[t][t]=a[t][t].add(c[n].mul(c[n]));if(a[t][t]=a[t][t].sqrt(),a[t][t].isZero(1e-10)){l.push(t);for(let n=0;n<e;n++)s[n][t]=Complex.ZERO}else for(let n=0;n<e;n++)s[n][t]=c[n].div(a[t][t])}return{Q:r,R:o,non_orthogonalized:l}}static createOrthogonalVector(t,n){const e=new Matrix(t),i=e.column_length,r=e.matrix_array,o=n||1e-10,s=LinearAlgebraTool.getLinearDependenceVector(e,o);for(let t=s.length-1;t>=0;t--)r.splice(s[t],1),e.row_length--;const a=i-r.length;if(a<=0)return null;const l=new Random(0);let c=null;for(let t=0;t<100;t++){const t=e.T(),n=Matrix.createMatrixDoEachCalculation(function(){return new Complex(l.nextGaussian())},t.row_length,a);if(t._concatLeft(n),0===(c=LinearAlgebraTool.doGramSchmidtOrthonormalization(t)).non_orthogonalized.length)break}if(0!==c.non_orthogonalized.length)return console.log("miss"),null;const u=new Array(a),h=c.Q.matrix_array;for(let t=0;t<a;t++){u[t]=new Array(i);for(let n=0;n<i;n++)u[t][n]=h[n][i-a+t]}return new Matrix(u)}static getMaxRowNumber(t,n,e,i){const r=Matrix._toMatrix(t);let o=0,s=0,a=e||0;const l=i||r.row_length;for(;a<l;a++){const t=r.matrix_array[a][n].norm;t>s&&(s=t,o=a)}return{index:o,max:s}}static getLinearDependenceVector(t,n){const e=new Matrix(t),i=e.matrix_array,r=n?Matrix._toFloat(n):1e-10,o=new Array(t.row_length);for(let n=0;n<t.row_length;n++)o[n]=n;for(let t=0;t<e.column_length;t++){let n=0;{let s=0,a=0;for(const e in o){const r=o[e],l=i[r][t].norm;l>s&&(s=l,a=e,n=r)}if(s<=r)continue;if(o.splice(a,1),t===e.column_length-1)break}for(const r in o){const s=o[r],a=i[s][t].div(i[n][t]);for(let r=t;r<e.column_length;r++)i[s][r]=i[s][r].sub(i[n][r].mul(a))}}return o}}class LinearAlgebra{static inner(t,n,e){const i=Matrix._toMatrix(t),r=Matrix._toMatrix(n),o=i.matrix_array,s=r.matrix_array,a=e?Matrix._toInteger(e):1;if(i.isScalar()&&r.isScalar())return new Matrix(i.scalar.dot(r.scalar));if(i.isVector()&&r.isVector()){let t=Complex.ZERO;for(let n=0;n<i.length;n++)t=t.add(i.getComplex(n).dot(r.getComplex(n)));return new Matrix(t)}if(i.row_length!==r.row_length||i.column_length!==r.column_length)throw"Matrix size does not match";if(1===a){const t=new Array(1);t[0]=new Array(i.column_length);for(let n=0;n<i.column_length;n++){let e=Complex.ZERO;for(let t=0;t<i.row_length;t++)e=e.add(o[t][n].dot(s[t][n]));t[0][n]=e}return new Matrix(t)}if(2===a){const t=new Array(i.row_length);for(let n=0;n<i.row_length;n++){let e=Complex.ZERO;for(let t=0;t<i.column_length;t++)e=e.add(o[n][t].dot(s[n][t]));t[n]=[e]}return new Matrix(t)}throw"dim"}static norm(t,n){if(void 0===n)return LinearAlgebra.norm(t,2);const e=Matrix._toMatrix(t),i=Matrix._toInteger(n);if(1===i){const t=e.matrix_array;if(e.isRow()){let n=0;for(let i=0;i<e.column_length;i++)n+=t[0][i].norm;return n}if(e.isColumn()){let n=0;for(let i=0;i<e.row_length;i++)n=t[i][0].norm;return n}let n=0;for(let i=0;i<e.column_length;i++){let r=0;for(let n=0;n<e.row_length;n++)r+=t[n][i].norm;n<r&&(n=r)}return n}if(2===i){const t=e.matrix_array;if(e.isRow()){let n=0;for(let i=0;i<e.column_length;i++)n+=t[0][i].square().real;return Math.sqrt(n)}if(e.isColumn()){let n=0;for(let i=0;i<e.row_length;i++)n=t[i][0].square().real;return Math.sqrt(n)}return e.svd().S.diag().max().scalar.real}if(n===Number.POSITIVE_INFINITY||n===Number.NEGATIVE_INFINITY){const t=e.matrix_array;let i=n===Number.POSITIVE_INFINITY?0:Number.POSITIVE_INFINITY;for(let r=0;r<e.row_length;r++){let o=0;for(let n=0;n<e.column_length;n++)o+=t[r][n].norm;i=n===Number.POSITIVE_INFINITY?Math.max(i,o):Math.min(i,o)}return i}if(e.isVector()){let t=0;for(let i=0;i<e.length;i++)t=Math.pow(e.getComplex(i).norm,n);return Math.pow(t,1/n)}throw"norm"}static rank(t,n){const e=Matrix._toMatrix(t);return Math.abs(e.row_length,e.column_length)-LinearAlgebraTool.getLinearDependenceVector(e,n).length}static trace(t){const n=Matrix._toMatrix(t),e=Math.min(n.row_length,n.column_length);let i=Complex.ZERO;for(let t=0;t<e;t++)i=i.add(n.matrix_array[t][t]);return i}static det(t){const n=Matrix._toMatrix(t);if(!n.isSquare())throw"not square";const e=function(t){if(2===t.length)return t[0][0].mul(t[1][1]).sub(t[0][1].mul(t[1][0]));let n=Complex.ZERO;for(let i=0;i<t.length;i++){const r=[],o=t[i][0];for(let n=0,e=0;n<t.length;n++)if(i!==n){r[e]=[];for(let i=1,o=0;i<t.length;i++,o++)r[e][o]=t[n][i];e++}n=i%2==0?n.add(o.mul(e(r))):n.sub(o.mul(e(r)))}return n};return new Matrix(e(n.matrix_array))}static lup(t){const n=new Matrix(t),e=Matrix.zeros(n.row_length),i=n,r=Matrix.eye(n.row_length),o=e.matrix_array,s=i.matrix_array;for(let t=0;t<n.column_length;t++){let a;{const n=LinearAlgebraTool.getMaxRowNumber(i,t,t);if(a=n.index,0===n.max)continue;t!==a&&(e._exchangeRow(t,a),i._exchangeRow(t,a),r._exchangeRow(t,a))}for(let e=t+1;e<n.row_length;e++){const i=s[e][t].div(s[t][t]);o[e][t]=i;for(let r=t;r<n.column_length;r++)s[e][r]=s[e][r].sub(s[t][r].mul(i))}}return e._resize(n.row_length,Math.min(n.row_length,n.column_length)),i._resize(Math.min(n.row_length,n.column_length),n.column_length),e._each(function(t,n,e){return n===e?Complex.ONE:t}),{L:e,U:i,P:r}}static linsolve(t,n){const e=Matrix._toMatrix(t),i=Matrix._toMatrix(n);if(!e.isSquare())throw"Matrix size does not match";const r=i;if(i.row_length!==e.row_length||i.column_length>1)throw"Matrix size does not match";const o=new Matrix(e);o._concatLeft(r);const s=o.matrix_array,a=o.column_length,l=e.column_length;for(let t=0;t<l-1;t++){{const n=LinearAlgebraTool.getMaxRowNumber(o,t,t).index;o._exchangeRow(t,n)}{const n=s[t][t].inv();for(let e=t,i=t;i<a;i++)s[e][i]=s[e][i].mul(n)}for(let n=t+1;n<l;n++){const e=s[n][t];for(let i=t;i<a;i++)s[n][i]=s[n][i].sub(s[t][i].mul(e))}}const c=new Array(l);c[l-1]=s[l-1][l].div(s[l-1][l-1]);for(let t=l-2;t>=0;t--){c[t]=s[t][a-1];for(let n=t+1;n<l;n++)c[t]=c[t].sub(s[t][n]*c[n]);c[t]=c[t].div(s[t][t])}const u=new Array(e.row_length);for(let t=0;t<e.row_length;t++)u[t]=[c[t]];return new Matrix(u)}static qr(t){const n=new Matrix(t),e=n.row_length,i=n.row_length,r=n.row_length,o=n.column_length,s=Math.max(n.row_length,n.column_length);n._resize(s,s);const a=LinearAlgebraTool.doGramSchmidtOrthonormalization(n),l=a.Q,c=a.R,u=a.non_orthogonalized;if(0!==u.length){const t={};for(let n=0;n<u.length;n++)t[u[n]]=1;const n=[];for(let e=0;e<s;e++)if(!t[e]){const t=[];for(let n=0;n<s;n++)t[n]=l.matrix_array[n][e];n.push(t)}const e=LinearAlgebraTool.createOrthogonalVector(n);for(let t=0;t<u.length;t++){const n=u[t];for(let i=0;i<s;i++)l.matrix_array[i][n]=e.matrix_array[t][i]}}return l._resize(e,i),c._resize(r,o),{Q:l,R:c}}static tridiagonalize(t){const n=new Matrix(t);if(!n.isSquare())throw"not square matrix";if(!n.isSymmetric())throw"not Symmetric";if(n.isComplex())throw"not Real Matrix";return LinearAlgebraTool.tridiagonalize(n)}static eig(t){const n=new Matrix(t);if(!n.isSquare())throw"not square matrix";if(!n.isSymmetric())throw"not Symmetric";if(n.isComplex())throw"not Real Matrix";return LinearAlgebraTool.eig(n)}static svd(t){const n=new Matrix(t);if(n.isComplex())throw"Unimplemented";const e=LinearAlgebra.rank(n),i=LinearAlgebra.eig(n.T().mul(n)),r=Matrix.zeros(n.row_length,n.column_length);r._each(function(t,n,r){if(n===r&&n<e)return i.D.getComplex(n,n).sqrt()});const o=Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?r.matrix_array[t][t].inv():Complex.ZERO},e),s=new Matrix(i.V)._resize(i.V.row_length,e),a=n.mul(s).mul(o);return{U:LinearAlgebra.qr(a).Q,S:r,V:i.V}}static inv(t){const n=new Matrix(t);if(n.isScalar())return new Matrix(Complex.ONE.div(n.scalar));if(!n.isSquare())throw"not square";if(n.isDiagonal()){const t=n.T(),e=Math.min(t.row_length,t.column_length);for(let n=0;n<e;n++)t.matrix_array[n][n]=t.matrix_array[n][n].inv();return t}const e=n.column_length,i=new Matrix(n);i._concatLeft(Matrix.eye(e));const r=i.matrix_array,o=i.column_length;for(let t=0;t<e;t++){{const n=LinearAlgebraTool.getMaxRowNumber(i,t,t).index;i._exchangeRow(t,n)}{const n=r[t][t].inv();for(let e=t,i=t;i<o;i++)r[e][i]=r[e][i].mul(n)}for(let n=0;n<e;n++)if(n!==t){const e=r[n][t];for(let i=t;i<o;i++)r[n][i]=r[n][i].sub(r[t][i].mul(e))}}const s=new Array(e);for(let t=0;t<e;t++){s[t]=new Array(e);for(let n=0;n<e;n++)s[t][n]=r[t][e+n]}return new Matrix(s)}static pinv(t){const n=new Matrix(t),e=LinearAlgebra.svd(n),i=e.U,r=e.S,o=e.V,s=Matrix.createMatrixDoEachCalculation(function(t,n){if(t===n){const n=r.matrix_array[t][t];return n.isZero()?Complex.ZERO:n.inv()}return Complex.ZERO},n.column_length,n.row_length);return o.mul(s).mul(i.T())}}class StatisticsTool{static gammaln(t){const n=Math.log(2*Math.PI),e=[-15238221.539407417,691472.268851313,-36108.77125372499,8553103/6/650,-156.84828462600203,854513/138/462,-174611/330/380,43867/798/306,-3617/510/240,7/6/182,-691/2730/132,5/66/90,-1/30/56,1/42/30,-1/30/12,1/6/2];let i=1,r=t;for(;r<e.length;)i*=r,r++;const o=1/(r*r);let s=e[0];for(let t=1;t<e.length;t++)s*=o,s+=e[t];return s/=r,s+=.5*n,s+=-Math.log(i)-r+(r-.5)*Math.log(r)}static q_gamma(t,n,e){let i,r,o,s,a,l=1,c=1+t-n;if(t<1+n)return 1-StatisticsTool.p_gamma(t,n,e);for(r=(o=Math.exp(n*Math.log(t)-t-e))/c,i=2;i<1e3;i++)if(s=((i-1-n)*(c-l)+(i+t)*c)/i,l=c,c=s,o*=(i-1-n)/i,s=o/(l*c),a=r,(r+=s)==a)return r;return Number.NaN}static p_gamma(t,n,e){let i,r,o,s;if(t>=1+n)return 1-StatisticsTool.q_gamma(t,n,e);if(0===t)return 0;for(r=o=Math.exp(n*Math.log(t)-t-e)/n,i=1;i<1e3;i++)if(o*=t/(n+i),s=r,(r+=o)==s)return r;return Number.NaN}static gamma(t){return t<0?Math.PI/(Math.sin(Math.PI*t)*Math.exp(StatisticsTool.gammaln(1-t))):Math.exp(StatisticsTool.gammaln(t))}static gammainc(t,n,e){if("lower"===e)return StatisticsTool.p_gamma(t,n,StatisticsTool.gammaln(n));if("upper"===e)return StatisticsTool.q_gamma(t,n,StatisticsTool.gammaln(n));if(2===arguments.length)return StatisticsTool.gammainc(t,n,"lower");throw"gammainc unsupported argument ["+e+"]"}static gampdf(t,n,e){let i=1/(StatisticsTool.gamma(n)*Math.pow(e,n));return i*=Math.pow(t,n-1),i*=Math.exp(-t/e)}static gamcdf(t,n,e){return StatisticsTool.gammainc(t/e,n)}static gaminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return 0;if(1==t)return Number.POSITIVE_INFINITY;let i,r,o=n*e;for(let s=0;s<100&&(r=o-(StatisticsTool.gamcdf(o,n,e)-t)/StatisticsTool.gampdf(o,n,e),i=r-o,!(Math.abs(i)<=1e-12));s++)o=r;return o}static beta(t,n){return Math.exp(StatisticsTool.gammaln(t)+StatisticsTool.gammaln(n)-StatisticsTool.gammaln(t+n))}static p_beta(t,n,e){let i,r,o,s;if(n<=0)return Number.POSITIVE_INFINITY;if(e<=0)return t<1?0:1===t?1:Number.POSITIVE_INFINITY;if(t>(n+1)/(n+e+2))return 1-StatisticsTool.p_beta(1-t,e,n);if(t<=0)return 0;for(o=n*Math.log(t),o+=e*Math.log(1-t),o+=StatisticsTool.gammaln(n+e),o-=StatisticsTool.gammaln(n)+StatisticsTool.gammaln(e),o=Math.exp(o),r=o/=n,i=1;i<1e3;i++)if(o*=n+e+i-1,o*=t,o/=n+i,s=r,(r+=o)===s)return r;return Number.NaN}static q_beta(t,n,e){return 1-StatisticsTool.p_beta(t,n,e)}static betainc(t,n,e,i){if("lower"===i)return StatisticsTool.p_beta(t,n,e);if("upper"===i)return StatisticsTool.q_beta(t,n,e);if(3===arguments.length)return StatisticsTool.betainc(t,n,e,"lower");throw"betainc unsupported argument ["+i+"]"}static betapdf(t,n,e){return Math.pow(t,n-1)*Math.pow(1-t,e-1)/StatisticsTool.beta(n,e)}static betacdf(t,n,e){return StatisticsTool.betainc(t,n,e)}static betainv(t,n,e){if(t<0||t>1)return Number.NaN;if(1==t&&n>0&&e>0)return 1;let i;i=0==e?1-1e-14:0==n?1e-14:n/(n+e);let r,o;for(let s=0;s<100&&(o=i-(StatisticsTool.betacdf(i,n,e)-t)/StatisticsTool.betapdf(i,n,e),r=o-i,!(Math.abs(r)<=1e-14));s++)i=o;return i}static factorial(t){const n=StatisticsTool.gamma(t+1);return(0|t)===t?Math.round(n):n}static nchoosek(t,n){return Math.round(StatisticsTool.factorial(t)/(StatisticsTool.factorial(t-n)*StatisticsTool.factorial(n)))}static erf(t){return StatisticsTool.p_gamma(t*t,.5,.5*Math.log(Math.PI))*(t>=0?1:-1)}static erfc(t){return 1-StatisticsTool.erf(t)}static normpdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o=1/Math.sqrt(2*Math.PI*r*r);return o*=Math.exp(-(t-i)*(t-i)/(2*r*r))}static normcdf(t,n,e){const i="number"==typeof n?n:0,r="number"==typeof e?e:1;return(1+StatisticsTool.erf((t-i)/(r*Math.sqrt(2))))/2}static norminv(t,n,e){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;const i="number"==typeof n?n:0,r="number"==typeof e?e:1;let o,s,a=i;for(let n=0;n<200&&(s=a-(StatisticsTool.normcdf(a,i,r)-t)/StatisticsTool.normpdf(a,i,r),o=s-a,!(Math.abs(o)<=1e-12));n++)a=s;return a}static tpdf(t,n){let e=1/(Math.sqrt(n)*StatisticsTool.beta(.5,.5*n));return e*=Math.pow(1+t*t/n,.5*-(n+1))}static tcdf(t,n){const e=t*t/(n+t*t);return.5*(1+StatisticsTool.betainc(e,.5,.5*n)*(t<0?-1:1))}static tinv(t,n){if(t<0||t>1)return Number.NaN;if(0==t)return Number.NEGATIVE_INFINITY;if(1==t)return Number.POSITIVE_INFINITY;if(t<.5){const e=StatisticsTool.betainv(2*t,.5*n,.5);return-Math.sqrt(n/e-n)}{const e=StatisticsTool.betainv(2*(1-t),.5*n,.5);return Math.sqrt(n/e-n)}}static tdist(t,n,e){return(1-StatisticsTool.tcdf(t,n))*e}static tinv2(t,n){return-StatisticsTool.tinv(.5*t,n)}static chi2pdf(t,n){if(t<=0)return 0;let e=Math.pow(t,n/2-1)*Math.exp(-t/2);return e/=Math.pow(2,n/2)*StatisticsTool.gamma(n/2)}static chi2cdf(t,n){return StatisticsTool.gammainc(t/2,n/2)}static chi2inv(t,n){return StatisticsTool.gaminv(t,n/2,2)}static fpdf(t,n,e){let i=1;return i*=Math.pow(n*t/(n*t+e),n/2),i*=Math.pow(1-n*t/(n*t+e),e/2),i/=t*StatisticsTool.beta(n/2,e/2)}static fcdf(t,n,e){return StatisticsTool.betacdf(n*t/(n*t+e),n/2,e/2)}static finv(t,n,e){return(1/StatisticsTool.betainv(1-t,e/2,n/2)-1)*e/n}}const isStr=function(t){return t&&("string"==typeof t||t instanceof String)};class StatisticsComplex{static gammaln(t){return new Complex(StatisticsTool.gammaln(Complex._toFloat(t)))}static gamma(t){return new Complex(StatisticsTool.gamma(Complex._toFloat(t)))}static gammainc(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=isStr(e)?e:"lower";return new Complex(StatisticsTool.gammainc(i,r,o))}static gampdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.gampdf(i,r,o))}static gamcdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.gamcdf(i,r,o))}static gaminv(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.gaminv(i,r,o))}static beta(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.beta(e,i))}static betainc(t,n,e,i){const r=Complex._toFloat(t),o=Complex._toFloat(n),s=Complex._toFloat(e),a=isStr(i)?i:"lower";return new Complex(StatisticsTool.betainc(r,o,s,a))}static betapdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.betapdf(i,r,o))}static betacdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.betacdf(i,r,o))}static betainv(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.betainv(i,r,o))}static factorial(t){return new Complex(StatisticsTool.factorial(Complex._toFloat(t)))}static nchoosek(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.nchoosek(e,i))}static erf(t){const n=Complex._toFloat(t);return new Complex(StatisticsTool.erf(n))}static erfc(t){const n=Complex._toFloat(t);return new Complex(StatisticsTool.erfc(n))}static normpdf(t,n=0,e=1){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.normpdf(i,r,o))}static normcdf(t,n=0,e=1){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.normcdf(i,r,o))}static norminv(t,n=0,e=1){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.norminv(i,r,o))}static tcdf(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.tcdf(e,i))}static tinv(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.tinv(e,i))}static tdist(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toInteger(e);return new Complex(StatisticsTool.tdist(i,r,o))}static tinv2(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.tinv2(e,i))}static chi2pdf(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.chi2pdf(e,i))}static chi2cdf(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.chi2cdf(e,i))}static chi2inv(t,n){const e=Complex._toFloat(t),i=Complex._toFloat(n);return new Complex(StatisticsTool.chi2inv(e,i))}static fpdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.fpdf(i,r,o))}static fcdf(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.fcdf(i,r,o))}static finv(t,n,e){const i=Complex._toFloat(t),r=Complex._toFloat(n),o=Complex._toFloat(e);return new Complex(StatisticsTool.finv(i,r,o))}}class Statistics{static gammaln(t){return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gammaln(t)})}static gamma(t){return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gamma(t)})}static gammainc(t,n,e){const i=Matrix._toFloat(n),r=isStr(e)?e:"lower";return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gammainc(t,i,r)})}static gampdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gampdf(t,i,r)})}static gamcdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gamcdf(t,i,r)})}static gaminv(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.gaminv(t,i,r)})}static beta(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.beta(t,e)})}static betainc(t,n,e,i){const r=Matrix._toFloat(n),o=Matrix._toFloat(e),s=isStr(i)?i:"lower";return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.betainc(t,r,o,s)})}static betacdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.betacdf(t,i,r)})}static betapdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.betapdf(t,i,r)})}static betainv(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.betainv(t,i,r)})}static factorial(t){return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.factorial(t)})}static nchoosek(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.nchoosek(t,e)})}static erf(t){return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.erf(t)})}static erfc(t){return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.erfc(t)})}static normpdf(t,n=0,e=1){const i=Complex._toFloat(n),r=Complex._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.normpdf(t,i,r)})}static normcdf(t,n=0,e=1){const i=Complex._toFloat(n),r=Complex._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.normcdf(t,i,r)})}static norminv(t,n=0,e=1){const i=Complex._toFloat(n),r=Complex._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.norminv(t,i,r)})}static tpdf(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.tpdf(t,e)})}static tcdf(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.tcdf(t,e)})}static tinv(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.tinv(t,e)})}static tdist(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.tdist(t,i,r)})}static tinv2(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.tinv2(t,e)})}static chi2pdf(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.chi2pdf(t,e)})}static chi2cdf(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.chi2cdf(t,e)})}static chi2inv(t,n){const e=Matrix._toFloat(n);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.chi2inv(t,e)})}static fpdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.fpdf(t,i,r)})}static fcdf(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.fcdf(t,i,r)})}static finv(t,n,e){const i=Matrix._toFloat(n),r=Matrix._toFloat(e);return t.cloneMatrixDoEachCalculation(function(t){return StatisticsComplex.finv(t,i,r)})}static sum(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n]};return t.eachVector(i,e)}static mean(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){let n=Complex.ZERO,e=Complex.ZERO;for(let i=0;i<t.length;i++){const r=t[i].add(e),o=n.add(r);e=o.sub(n).sub(r),n=o}return[n.div(t.length)]};return t.eachVector(i,e)}static geomean(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t){let n=Complex.ONE;for(let e=0;e<t.length;e++)n=n.mul(t[e]);return[n.sqrt()]};return t.eachVector(i,e)}static median(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t,n){return t.compareTo(n)},r=function(t){t.sort(i);let n;if(t.length%2==1)n=t[Math.floor(t.length/2)];else{const e=t[Math.floor(t.length/2)-1],i=t[Math.floor(t.length/2)];n=e.add(i).div(Complex.TWO)}return[n]};return t.eachVector(r,e)}static mode(t,n){const e=n&&n.dimension?n.dimension:"auto",i=function(t,n){return t.compareTo(n)},r=function(t){t.sort(i);const n={};for(let e=0;e<t.length;e++){const i=t[e].real+" "+t[e].imag;n[i]?n[i].value++:n[i]={complex:t[e],value:1}}let e=Complex.ZERO,r=Number.NEGATIVE_INFINITY;for(const t in n){const i=n[t];i.value>r&&(r=i.value,e=i.complex)}return[e]};return t.eachVector(r,e)}static var(t,n){const e=Statistics.mean(t),i=n&&n.correction?Matrix._toFloat(n.correction):0,r=n&&n.dimension?n.dimension:"auto";let o=0;const s=function(t){let n;n=e.isScalar()?e.scalar:e.getComplex(o++);let r=Complex.ZERO;for(let e=0;e<t.length;e++){const i=t[e].sub(n);r=r.add(i.dot(i))}return 1===t.length?[r.div(t.length)]:[r.div(t.length-1+i)]};return t.eachVector(s,r)}static std(t,n){const e=n&&n.correction?Matrix._toFloat(n.correction):0,i=n&&n.dimension?n.dimension:"auto",r=Statistics.var(t,e,i);return r._each(function(t){return t.sqrt()}),r}static cov(t,n){const e=n&&n.correction?Matrix._toFloat(n.correction):0;if(t.isVector())return Statistics.var(t,n);const i=1===t.row_length?1:e,r=t.matrix_array,o=Statistics.mean(t).matrix_array[0],s=new Array(t.column_length);for(let n=0;n<t.column_length;n++){const e=o[n];s[n]=new Array(t.column_length);for(let a=n;a<t.column_length;a++){const l=o[a];let c=Complex.ZERO;for(let i=0;i<t.row_length;i++)c=c.add(r[i][n].sub(e).dot(r[i][a].sub(l)));s[n][a]=c.div(t.row_length-1+i)}}for(let t=1;t<s[0].length;t++)for(let n=0;n<t;n++)s[t][n]=s[n][t];return new Matrix(s)}static normalize(t,n){const e=t.sub(Statistics.mean(t,n));return e.ndiv(Statistics.std(e,n))}static corrcoef(t){return t.normalize().cov()}static sort(t,n){const e=n&&n.dimension?n.dimension:"auto",i=n&&n.order?n.order:"ascend";let r;r="ascend"===i?function(t,n){return t.compareTo(n)}:function(t,n){return t.compareTo(n.negate())};const o=function(t){return t.sort(r),t};return t.eachVector(o,e)}}class FFT{static bit_reverse_32(t){let n=4294967295&t;return n=(1431655765&n)<<1|n>>1&1431655765,n=(858993459&n)<<2|n>>2&858993459,n=(252645135&n)<<4|n>>4&252645135,n=(16711935&n)<<8|n>>8&16711935,n=(65535&n)<<16|n>>16&65535}static create_bit_reverse_table(t){const n=1<<t,e=[];for(let i=0;i<n;i++)e[i]=FFT.bit_reverse_32(i)>>>32-t;return e}constructor(t){this.size=t,this.inv_size=1/this.size,this.bit_size=Math.round(Math.log(this.size)/Math.log(2)),this.is_fast=1<<this.bit_size===this.size,this.bitrv=null,this.fft_re=new Array(this.size),this.fft_im=new Array(this.size);{const t=-2*Math.PI/this.size;let n=0;for(let e=0,i=0;e<this.size;e++){this.fft_re[e]=Math.cos(i),this.fft_im[e]=Math.sin(i);const r=t+n,o=i+r;n=o-i-r,i=o}}this.is_fast&&(this.bitrv=FFT.create_bit_reverse_table(this.bit_size))}delete(){delete this.size,delete this.inv_size,delete this.bit_size,delete this.is_fast,delete this.bitrv,delete this.fft_re,delete this.fft_im}fft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t=1,n=this.size/2,r=2;for(let o=1<<this.bit_size-1;o>0;o>>=1){for(let s=0;s<n;s++){let n=s*r;for(let r=0,s=0;r<t;r++,n++,s+=o){const r=e[n+t]*this.fft_re[s]-i[n+t]*this.fft_im[s],o=i[n+t]*this.fft_re[s]+e[n+t]*this.fft_im[s];e[n+t]=e[n]-r,i[n+t]=i[n]-o,e[n]+=r,i[n]+=o}}n/=2,r*=2,t*=2}}}else if(SignalTool.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,s=0;o<this.size;o++,s=o*r%this.size)e[r]+=t[o]*this.fft_re[s]-n[o]*this.fft_im[s],i[r]+=t[o]*this.fft_im[s]+n[o]*this.fft_re[s]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=r*n%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=t[r]*this.fft_im[o]}return{real:e,imag:i}}ifft(t,n){const e=new Array(this.size),i=new Array(this.size);if(this.is_fast){for(let r=0;r<this.size;r++)e[r]=t[this.bitrv[r]],i[r]=n[this.bitrv[r]];{let t,n,r=1,o=this.size/2,s=2;for(let a=1<<this.bit_size-1;a>0;a>>=1){for(let l=0;l<o;l++){let o=l*s;for(let s=0,l=0;s<r;s++,o++,l+=a)t=e[o+r]*this.fft_re[l]+i[o+r]*this.fft_im[l],n=i[o+r]*this.fft_re[l]-e[o+r]*this.fft_im[l],e[o+r]=e[o]-t,i[o+r]=i[o]-n,e[o]+=t,i[o]+=n}o/=2,s*=2,r*=2}}}else if(SignalTool.isContainsZero(n))for(let r=0;r<this.size;r++){e[r]=0,i[r]=0;for(let o=0,s=0;o<this.size;o++,s=r*o%this.size)e[r]+=t[o]*this.fft_re[s]+n[o]*this.fft_im[s],i[r]+=-t[o]*this.fft_im[s]+n[o]*this.fft_re[s]}else for(let n=0;n<this.size;n++){e[n]=0,i[n]=0;for(let r=0,o=0;r<this.size;r++,o=n*r%this.size)e[n]+=t[r]*this.fft_re[o],i[n]+=-t[r]*this.fft_im[o]}for(let t=0;t<this.size;t++)e[t]*=this.inv_size,i[t]*=this.inv_size;return{real:e,imag:i}}}class Chash{constructor(t,n){this.object=n,this.table_max=t,this.table_size=0,this.table=[]}get(t){for(let n=0;n<this.table_size;n++)if(this.table[n].size===t){const t=this.table.splice(n,1);return this.table.unshift(t),t}const n=new this.object(t);if(this.table_size===this.table_max){const t=this.table.pop();t.delete()}return this.table.unshift(n),n}}const fft_chash=new Chash(4,FFT);class DCT{constructor(t){this.size=t,this.dct_size=2*t,this.dct_re=new Array(this.size),this.dct_im=new Array(this.size);{const t=1/Math.sqrt(this.size),n=t*Math.sqrt(2);for(let e=0;e<this.size;e++){const i=-Math.PI*e/this.dct_size;this.dct_re[e]=Math.cos(i)*(0===e?t:n),this.dct_im[e]=Math.sin(i)*(0===e?t:n)}}}delete(){delete this.size,delete this.dct_size,delete this.dct_re,delete this.dct_im}dct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size);for(let i=0;i<this.dct_size;i++)n[i]=i<this.size?t[i]:0,e[i]=0;const i=fft_chash.get(this.dct_size).fft(n,e);for(let t=0;t<this.size;t++)n[t]=i.real[t]*this.dct_re[t]-i.imag[t]*this.dct_im[t];return n.splice(this.size),n}idct(t){const n=new Array(this.dct_size),e=new Array(this.dct_size),i=2*this.size;for(let r=0;r<this.dct_size;r++)n[r]=r<this.size?i*t[r]*this.dct_re[r]:0,e[r]=r<this.size?i*t[r]*-this.dct_im[r]:0;const r=fft_chash.get(this.dct_size).ifft(n,e);return r.real.splice(this.size),r.real}}const dct_chash=new Chash(4,DCT);class SignalTool{static isContainsZero(t){for(let n=0;n<t.length;n++)if(0!==t[n])return!0;return!1}static fft(t,n){return fft_chash.get(t.length).fft(t,n)}static ifft(t,n){return fft_chash.get(t.length).ifft(t,n)}static dct(t){return dct_chash.get(t.length).dct(t)}static idct(t){return dct_chash.get(t.length).idct(t)}static powerfft(t,n){const e=t.length,i=SignalTool.fft(t,n),r=new Array(e);for(let t=0;t<e;t++)r[t]=i.real[t]*i.real[t]+i.imag[t]*i.imag[t];return r}static conv(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}const o=t.length,s=2*o;if(1<<Math.round(Math.log(o)/Math.log(2))===o){if(r){const e=t.length,i=new Array(s),r=new Array(s);for(let o=0;o<s;o++)i[o]=o<e?t[o]:0,r[o]=o<e?n[o]:0;const o=SignalTool.fft(i,r);for(let t=0;t<s;t++)i[t]=o.real[t]*o.real[t]-o.imag[t]*o.imag[t],r[t]=o.real[t]*o.imag[t]+o.imag[t]*o.real[t];const a=SignalTool.ifft(i,r);return a.real.splice(s-1),a.imag.splice(s-1),a}if(t.length===e.length){const r=t.length,o=new Array(s),a=new Array(s),l=new Array(s),c=new Array(s);for(let u=0;u<s;u++)o[u]=u<r?t[u]:0,a[u]=u<r?n[u]:0,l[u]=u<r?e[u]:0,c[u]=u<r?i[u]:0;const u=SignalTool.fft(o,a),h=SignalTool.fft(l,c),f=new Array(s),g=new Array(s);for(let t=0;t<s;t++)f[t]=u.real[t]*h.real[t]-u.imag[t]*h.imag[t],g[t]=u.real[t]*h.imag[t]+u.imag[t]*h.real[t];const m=SignalTool.ifft(f,g);return m.real.splice(s-1),m.imag.splice(s-1),m}}let a=!SignalTool.isContainsZero(n);a&&(a=!SignalTool.isContainsZero(i));{const r=new Array(t.length+e.length-1),o=new Array(t.length+e.length-1);for(let t=0;t<r.length;t++)r[t]=0,o[t]=0;if(a)for(let n=0;n<e.length;n++)for(let i=0;i<t.length;i++)r[n+i]+=t[i]*e[n];else for(let s=0;s<e.length;s++)for(let a=0;a<t.length;a++)r[s+a]+=t[a]*e[s]-n[a]*i[s],o[s+a]+=t[a]*i[s]+n[a]*e[s];return{real:r,imag:o}}}static xcorr(t,n,e,i){let r=!1;if(t.length===e.length){r=!0;for(let o=0;o<t.length;o++)if(t[o]!==e[o]||n[o]!==i[o]){r=!1;break}}if(t.length===e.length){const o=t.length,s=2*o,a=Math.round(Math.log(o)/Math.log(2)),l=1<<a===o;if(l){let a=null;if(r){const e=new Array(s),i=new Array(s);for(let r=0;r<s;r++)e[r]=r<o?t[r]:0,i[r]=r<o?n[r]:0;const r=SignalTool.powerfft(e,i);a=SignalTool.ifft(r,i),e.pop(),i.pop();for(let t=0,n=o+1;t<e.length;t++,n++)s<=n&&(n=0),e[t]=a.real[n],i[t]=a.imag[n];return{real:e,imag:i}}{const r=new Array(s),l=new Array(s),c=new Array(s),u=new Array(s);for(let a=0;a<s;a++)r[a]=a<o?t[a]:0,l[a]=a<o?n[a]:0,c[a]=a<o?e[o-a-1]:0,u[a]=a<o?-i[o-a-1]:0;const h=SignalTool.fft(r,l),f=SignalTool.fft(c,u),g=new Array(s),m=new Array(s);for(let t=0;t<s;t++)g[t]=h.real[t]*f.real[t]-h.imag[t]*f.imag[t],m[t]=h.real[t]*f.imag[t]+h.imag[t]*f.real[t];return(a=SignalTool.ifft(g,m)).real.splice(s-1),a.imag.splice(s-1),a}}}let o=!SignalTool.isContainsZero(n);if(o&&(o=!SignalTool.isContainsZero(i)),r){const n=t.length,i=2*n;if(o){const r=new Array(n);for(let i=0;i<n;i++){r[i]=0;const o=n-i;for(let n=0;n<o;n++)r[i]+=t[n]*e[n+i]}const o=new Array(i-1),s=new Array(i-1);for(let t=0,e=n-1;t<n;t++,e--)o[t]=r[e],o[n+t-1]=r[t];for(let t=0;t<s.length;t++)s[t]=0;return{real:o,imag:s}}}{const r=new Array(e.length),o=new Array(e.length);for(let t=0;t<e.length;t++)r[t]=e[e.length-t-1],o[t]=-i[e.length-t-1];return SignalTool.conv(t,n,r,o)}}static window(t,n,e){const i=t.toLocaleLowerCase(),r=n,o=new Array(r),s=function(t){return e?t/r*(2*Math.PI):t/(r-1)*(2*Math.PI)},a=function(t,n,e,i,a){for(let l=0;l<r;l++)o[l]=t,o[l]-=n*Math.cos(1*s(l)),o[l]+=e*Math.cos(2*s(l)),o[l]-=i*Math.cos(3*s(l)),o[l]+=a*Math.cos(4*s(l))};switch(i){case"rectangle":a(1,0,0,0,0);break;case"hann":a(.5,.5,0,0,0);break;case"hamming":a(.54,.46,0,0,0);break;case"blackman":a(.42,.5,.08,0,0);break;case"blackmanharris":a(.35875,.48829,.14128,.01168,0);break;case"blackmannuttall":a(.3635819,.4891775,.1365995,.0106411,0);break;case"flattop":a(1,1.93,1.29,.388,.032);break;case"lanczos":for(let t=0;t<r;t++)o[t]=function(t){return 0===t?1:Math.sin(t)/t}(s(t)-1);break;case"sin":for(let t=0;t<r;t++)o[t]=Math.sin(.5*s(t));break;case"vorbis":for(let t=0;t<r;t++){const n=Math.sin(.5*s(t));o[t]=Math.sin(.5*Math.PI*n*n)}}return o}static hann(t,n){return SignalTool.window("hann",t,n)}static hamming(t,n){return SignalTool.window("hamming",t,n)}}class Signal{static fft(t,n=!1){const e=Matrix._toMatrix(t),i=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.fft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return n?e.eachVectorBoth(i):e.eachVectorAuto(i)}static ifft(t,n=!1){const e=Matrix._toMatrix(t),i=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.ifft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return n?e.eachVectorBoth(i):e.eachVectorAuto(i)}static powerfft(t){const n=function(t){const n=new Array(t.length),e=new Array(t.length);for(let i=0;i<t.length;i++)n[i]=t[i].real,e[i]=t[i].imag;const i=SignalTool.powerfft(n,e),r=new Array(t.length);for(let n=0;n<t.length;n++)r[n]=new Complex([i.real[n],i.imag[n]]);return r};return Matrix._toMatrix(t).eachVectorAuto(n)}static dct(t,n=!1){const e=Matrix._toMatrix(t);if(e.isComplex())throw"dct don't support complex numbers.";const i=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=SignalTool.dct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return n?e.eachVectorBoth(i):e.eachVectorAuto(i)}static idct(t,n=!1){const e=Matrix._toMatrix(t);if(e.isComplex())throw"idct don't support complex numbers.";const i=function(t){const n=new Array(t.length);for(let e=0;e<t.length;e++)n[e]=t[e].real;const e=SignalTool.idct(n),i=new Array(t.length);for(let n=0;n<t.length;n++)i[n]=new Complex(e[n]);return i};return n?e.eachVectorBoth(i):e.eachVectorAuto(i)}static fft2(t){return Matrix._toMatrix(t).fft(!0)}static ifft2(t){return Matrix._toMatrix(t).ifft(!0)}static dct2(t){return Matrix._toMatrix(t).dct2(!0)}static idct2(t){return Matrix._toMatrix(t).idct(!0)}static conv(t,n){const e=Matrix._toMatrix(t),i=Matrix._toMatrix(n);if(e.isMatrix()||i.isMatrix())throw"conv don't support matrix numbers.";const r=new Array(e.length),o=new Array(e.length),s=new Array(i.length),a=new Array(i.length);if(e.isRow())for(let t=0;t<e.column_length;t++)r[t]=e.matrix_array[0][t].real,o[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)r[t]=e.matrix_array[t][0].real,o[t]=e.matrix_array[t][0].imag;if(i.isRow())for(let t=0;t<i.column_length;t++)s[t]=i.matrix_array[0][t].real,a[t]=i.matrix_array[0][t].imag;else for(let t=0;t<i.row_length;t++)s[t]=i.matrix_array[t][0].real,a[t]=i.matrix_array[t][0].imag;const l=SignalTool.conv(r,o,s,a),c=new Array(l.real.length);for(let t=0;t<l.real.length;t++)c[t]=new Complex([l.real[t],l.imag[t]]);const u=new Matrix([c]);return i.isRow()?u:u.transpose()}static xcorr(t,n){const e=Matrix._toMatrix(t);if(!n)return e.xcorr(e);const i=Matrix._toMatrix(n);if(e.isMatrix()||i.isMatrix())throw"conv don't support matrix numbers.";const r=new Array(e.length),o=new Array(e.length),s=new Array(i.length),a=new Array(i.length);if(e.isRow())for(let t=0;t<e.column_length;t++)r[t]=e.matrix_array[0][t].real,o[t]=e.matrix_array[0][t].imag;else for(let t=0;t<e.row_length;t++)r[t]=e.matrix_array[t][0].real,o[t]=e.matrix_array[t][0].imag;if(i.isRow())for(let t=0;t<i.column_length;t++)s[t]=i.matrix_array[0][t].real,a[t]=i.matrix_array[0][t].imag;else for(let t=0;t<i.row_length;t++)s[t]=i.matrix_array[t][0].real,a[t]=i.matrix_array[t][0].imag;const l=SignalTool.xcorr(r,o,s,a),c=new Array(l.real.length);for(let t=0;t<l.real.length;t++)c[t]=new Complex([l.real[t],l.imag[t]]);const u=new Matrix([c]);return e.isRow()?u:u.transpose()}static window(t,n,e){const i=Matrix._toInteger(n),r=SignalTool.window(t,i,e);return new Matrix(r).transpose()}static hann(t,n){return SignalTool.window("hann",t,n)}static hamming(t,n){return SignalTool.window("hamming",t,n)}}const ConstructorTool={match2:function(t,n){const e=[];let i=t,r=!0;for(let t=0;t<1e3;t++){if(null===(r=i.match(n))){i.length&&e.push([!1,i]);break}r.index>0&&e.push([!1,i.substr(0,r.index)]),e.push([!0,r[0]]),i=i.substr(r.index+r[0].length)}return e},trimBracket:function(t){return/^\[/.test(t)&&/\]$/.test(t)?t.substring(1,t.length-1):null},toMatrixFromStringForArrayJSON:function(t){const n=[];let e=t.match(/\[[^\]]+\]/g);null===e&&(e=[t]);for(let t=0;t<e.length;t++){const i=e[t],r=i.substring(1,i.length-1).split(","),o=[];for(let t=0;t<r.length;t++){const n=r[t];o[t]=new Complex(n)}n[t]=o}return n},InterpolationCalculation:function(t,n,e){const i=t.compareTo(e);if(0===i)return t;if(n.isZero())throw"IllegalArgumentException";if(n.isNegative()&&-1===i)throw"IllegalArgumentException";const r=[];let o=t;r[0]=o;for(let t=1;t<65536&&(o=o.add(n),e.compareTo(o)!==i);t++)r[t]=o;return r},toArrayFromString:function(t){if(":"===t.trim())return":";const n=new RegExp("("+/[+-]? *([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij]( *[+] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?)?/.source+")|("+/[+-]? *[0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?( *[+-] *[- ]?([0-9]+(\.[0-9]+)?(e[+-]?[0-9]+)?)?[ij])?/.source+")","i"),e=ConstructorTool.match2(t,n),i=[];for(let t=0;t<e.length;t++){const n=e[t];if(n[0])if(t<e.length-2&&!e[t+1][0]&&/:/.test(e[t+1][1])){let r,o,s;t<e.length-4&&!e[t+3][0]&&/:/.test(e[t+3][1])?(r=new Complex(n[1]),o=new Complex(e[t+2][1]),s=new Complex(e[t+4][1]),t+=4):(r=new Complex(n[1]),o=Complex.ONE,s=new Complex(e[t+2][1]),t+=2);const a=ConstructorTool.InterpolationCalculation(r,o,s);for(let t=0;t<a.length;t++)i.push(a[t])}else i.push(new Complex(n[1]))}return i},toMatrixFromStringForArrayETC:function(t){const n=t.split(";"),e=new Array(n.length);for(let t=0;t<n.length;t++)e[t]=ConstructorTool.toArrayFromString(n[t]);return e},toMatrixFromStringForArray:function(t){return/[[\],]/.test(t)?ConstructorTool.toMatrixFromStringForArrayJSON(t):ConstructorTool.toMatrixFromStringForArrayETC(t)},toMatrixFromString:function(t){const n=t.replace(/^\s*|\s*$/g,""),e=ConstructorTool.trimBracket(n);return e?ConstructorTool.toMatrixFromStringForArray(e):[[new Complex(t)]]},isCorrectMatrixArray:function(t){if(0===t.length)return!1;const n=t[0].length;if(0===n)return!1;for(let e=1;e<t.length;e++)if(t[e].length!==n)return!1;return!0}};class Matrix{constructor(t){let n=null,e=!1;if(1!==arguments.length)throw"Matrix : Many arguments ["+arguments.length+"]";{const i=t;if(i instanceof Matrix){n=new Array(i.row_length);for(let t=0;t<i.row_length;t++){n[t]=new Array(i.column_length);for(let e=0;e<i.column_length;e++)n[t][e]=i.matrix_array[t][e]}}else if(i instanceof Complex)n=[[i]];else if(i instanceof Array){n=[];for(let t=0;t<i.length;t++){const e=i[t];if(e instanceof Array){const i=new Array(e.length);for(let t=0;t<e.length;t++){const n=e[t];if(n instanceof Complex)i[t]=n;else if(n instanceof Matrix){if(!n.isScalar())throw"Matrix in matrix";i[t]=n.scalar}else i[t]=new Complex(n)}n[t]=i}else if(0===t&&(n[0]=new Array(i.length)),e instanceof Complex)n[0][t]=e;else if(e instanceof Matrix){if(!e.isScalar())throw"Matrix in matrix";n[0][t]=e.scalar}else n[0][t]=new Complex(e)}}else"string"==typeof i||i instanceof String?(e=!0,n=ConstructorTool.toMatrixFromString(i)):i instanceof Object&&i.toString?(e=!0,n=ConstructorTool.toMatrixFromString(i.toString())):n=[[new Complex(i)]]}if(e)for(let t=0;t<n.length;t++)":"===n[t]&&n.splice(t--,1);if(!ConstructorTool.isCorrectMatrixArray(n))throw"new Matrix IllegalArgumentException";this.matrix_array=n,this.row_length=this.matrix_array.length,this.column_length=this.matrix_array[0].length,this.string_cash=null}static create(t){return 1===arguments.length&&t instanceof Matrix?t:new Matrix(t)}static valueOf(t){return Matrix.valueOf(t)}static _toMatrix(t){return t instanceof Matrix?t:new Matrix(t)}static _toComplex(t){if(t instanceof Complex)return t;const n=Matrix._toMatrix(t);if(n.isScalar())return n.scalar;throw"not scalar."}static _toFloat(t){if("number"==typeof t||t instanceof Number)return t;if(Matrix._toComplex(t).isReal())return new Complex(t).real;throw"not support complex numbers."}static _toInteger(t){return 0|Matrix._toFloat(t)}_clearCash(){this.string_cash&&delete this.string_cash}clone(){return new Matrix(this.matrix_array)}toString(){if(this.string_cash)return this.string_cash;const t=Math.pow(10,9);let n=!1,e=!1,i=0;this._each(function(r){r.isReal()||(n=!0),Math.abs(r.real)>=t&&(e=!0),Math.abs(r.imag)>=t&&(e=!0),i=Math.max(i,r.getDecimalPosition())}),i>0&&(i=4);let r=0;const o=[],s=function(t){if(!e)return t.toFixed(i);const n=t.toExponential(4).split("e");let r=n[1];return 2===r.length?r=r.substr(0,1)+"00"+r.substr(1):3===r.length&&(r=r.substr(0,1)+"0"+r.substr(1)),n[0]+"e"+r};this._each(function(t){const e={};let i=t.real;if(e.re_sign=i<0?"-":" ",i=Math.abs(i),e.re_str=s(i),r=Math.max(r,e.re_str.length+1),n){let n=t.imag;e.im_sign=n<0?"-":"+",n=Math.abs(n),e.im_str=s(n),r=Math.max(r,e.im_str.length+1)}o.push(e)});const a=function(t,n){return"                                        ".substr(0,n-t.length)+t},l=[],c=this;return this._each(function(t,e,i){const s=o.shift();let u=a(s.re_sign+s.re_str,r);n&&(u+=" "+s.im_sign+a(s.im_str,r)+"i"),l.push(u),l.push(i<c.column_length-1?" ":"\n")}),this.string_cash=l.join(""),this.string_cash}equals(t,n){const e=this,i=Matrix._toMatrix(t);if(e.row_length!==i.row_length||e.column_length!==i.column_length)return!1;if(1===e.row_length||1===e.column_length)return e.scalar.equals(i.scalar);const r=e.matrix_array,o=i.matrix_array;for(let t=0;t<this.row_length;t++)for(let e=0;e<this.column_length;e++)if(!r[t][e].equals(o[t][e],n))return!1;return!0}getNumberMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e].real}return t}getComplexMatrixArray(){const t=new Array(this.row_length);for(let n=0;n<this.row_length;n++){t[n]=new Array(this.column_length);for(let e=0;e<this.column_length;e++)t[n][e]=this.matrix_array[n][e]}return t}_each(t){let n=!1;for(let e=0;e<this.row_length;e++)for(let i=0;i<this.column_length;i++){const r=t(this.matrix_array[e][i],e,i);void 0!==r&&(this.matrix_array[e][i]=r instanceof Complex?r:r instanceof Matrix?r.scalar:new Complex(r),n=!0)}return n&&this._clearCash(),this}cloneMatrixDoEachCalculation(t){return this.clone()._each(t)}static createMatrixDoEachCalculation(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";const i=Matrix._toInteger(n),r=e?Matrix._toInteger(e):i,o=new Array(i);for(let n=0;n<i;n++){o[n]=new Array(r);for(let e=0;e<r;e++){const i=t(n,e);o[n][e]=void 0===i?Complex.ZERO:Matrix._toComplex(i)}}return new Matrix(o)}eachVectorAuto(t){if(this.isRow()){const n=new Array(this.row_length);for(let t=0;t<this.column_length;t++)n[t]=this.matrix_array[0][t];return new Matrix(t(n))}{const n=new Matrix(0);n._resize(1,this.column_length);for(let e=0;e<this.column_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++)i[t]=this.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}}eachVectorBoth(t){const n=new Matrix(0);n._resize(this.row_length,1);for(let e=0;e<this.row_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.column_length;t++)i[t]=this.matrix_array[e][t];const r=t(i);n._resize(n.row_length,Math.max(n.column_length,r.length));for(let t=0;t<r.length;t++)n.matrix_array[e][t]=r[t]}for(let e=0;e<n.column_length;e++){const i=new Array(n.row_length);for(let t=0;t<n.row_length;t++)i[t]=n.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}eachVectorRow(t){const n=new Matrix(0);n._resize(this.row_length,1);for(let e=0;e<this.row_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.column_length;t++)i[t]=this.matrix_array[e][t];const r=t(i);n._resize(n.row_length,Math.max(n.column_length,r.length));for(let t=0;t<r.length;t++)n.matrix_array[e][t]=r[t]}return n}eachVectorColumn(t){const n=new Matrix(0);n._resize(1,this.column_length);for(let e=0;e<this.column_length;e++){const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++)i[t]=this.matrix_array[t][e];const r=t(i);n._resize(Math.max(n.row_length,r.length),n.column_length);for(let t=0;t<r.length;t++)n.matrix_array[t][e]=r[t]}return n}eachVector(t,n){let e=void 0!==n?n:"auto";if("string"==typeof e||e instanceof String?e=e.toLocaleLowerCase():"number"==typeof e||e instanceof Number||(e=Matrix._toInteger(e)),"auto"===e||0===e)return this.eachVectorAuto(t);if("row"===e||1===e)return this.eachVectorRow(t);if("column"===e||2===e)return this.eachVectorColumn(t);if("both"===e||3===e)return this.eachVectorBoth(t);throw"eachVector argument "+n}getComplex(t,n){let e=null,i=null;e="string"==typeof t||t instanceof String?new Matrix(t):t,2===arguments.length&&(i="string"==typeof n||n instanceof String?new Matrix(n):n);const r=function(n){let e,i=!1;return"number"==typeof t||t instanceof Number?(e=Math.round(n),i=!0):t instanceof Complex?(e=Math.round(n.real),i=!0):t instanceof Matrix&&t.isScalar()&&(e=Math.round(n.doubleValue),i=!0),{number:e,is_scalar:i}};let o=!0,s=null,a=null;if(1===arguments.length?o&=(s=r(e)).is_scalar:2===arguments.length&&(o&=(s=r(e)).is_scalar,o&=(a=r(i)).is_scalar),o)return this.isRow()?this.matrix_array[0][s.number]:this.isColumn()?this.matrix_array[s.number][0]:this.matrix_array[s.number][a.number];throw"getComplex not scalar : "+this}get intValue(){return 0|this.matrix_array[0][0].real}get doubleValue(){return this.matrix_array[0][0].real}get scalar(){return this.matrix_array[0][0]}get length(){return this.row_length>this.column_length?this.row_length:this.column_length}get norm1(){return LinearAlgebra.norm(this,1)}get norm2(){return LinearAlgebra.norm(this,2)}norm(t){return LinearAlgebra.norm(this,t)}static memset(t,n,e){if(0===arguments.length||arguments.length>3)throw"IllegalArgumentException";if(t instanceof Matrix&&!t.isScalar()){const i=t.matrix_array,r=t.row_length,o=t.column_length;return Matrix.createMatrixDoEachCalculation(function(t,n){return i[t%r][n%o]},n,e)}{const i=Matrix._toComplex(t);return Matrix.createMatrixDoEachCalculation(function(){return i},n,e)}}static eye(t,n){return Matrix.createMatrixDoEachCalculation(function(t,n){return t===n?Complex.ONE:Complex.ZERO},t,n)}static zeros(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ZERO,t,n)}static ones(t,n){if(0===arguments.length||arguments.length>2)throw"IllegalArgumentException";return Matrix.memset(Complex.ONE,t,n)}static rand(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.rand()},t,n)}static randn(t,n){return Matrix.createMatrixDoEachCalculation(function(){return Complex.randn()},t,n)}diag(){if(this.isVector()){const t=this;return Matrix.createMatrixDoEachCalculation(function(n,e){return n===e?t.getComplex(n):Complex.ZERO},this.length)}{const t=Math.min(this.row_length,this.column_length),n=new Array(t);for(let e=0;e<t;e++)n[e]=new Array(1),n[e][0]=this.matrix_array[e][e];return new Matrix(n)}}isScalar(){return 1===this.row_length&&1==this.column_length}isRow(){return 1===this.row_length}isColumn(){return 1===this.column_length}isVector(){return 1===this.row_length||1===this.column_length}isMatrix(){return 1!==this.row_length&&1!==this.column_length}isSquare(){return this.row_length===this.column_length}isReal(t){let n=!0;return this._each(function(e){n&&e.isComplex(t)&&(n=!1)}),n}isComplex(t){let n=!0;return this._each(function(e){n&&e.isReal(t)&&(n=!1)}),n}isZeros(t){let n=!0;const e=t||1e-10;return this._each(function(t){n&&!t.isZero(e)&&(n=!1)}),n}isIdentity(t){if(!this.isDiagonal())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)if(!this.matrix_array[t][t].isOne(n))return!1;return!0}isDiagonal(t){let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&i!==r&&!t.isZero(e)&&(n=!1)}),n}isTridiagonal(t){if(!this.isSquare())return!1;let n=!0;const e=t||1e-10;return this._each(function(t,i,r){n&&Math.abs(i-r)>1&&!t.isZero(e)&&(n=!1)}),n}isRegular(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.rank(1e-10).equals(this.row_length,n)}isOrthogonal(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.transpose()).isIdentity(n)}isUnitary(t){if(!this.isSquare())return!1;const n=t||1e-10;return this.mul(this.ctranspose()).isIdentity(n)}isSymmetric(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t+1;e<this.column_length;e++)if(!this.matrix_array[t][e].equals(this.matrix_array[e][t],n))return!1;return!0}isHermitian(t){if(!this.isSquare())return!1;const n=t||1e-10;for(let t=0;t<this.row_length;t++)for(let e=t;e<this.column_length;e++)if(t===e){if(!this.matrix_array[t][e].isReal(n))return!1}else if(!this.matrix_array[t][e].equals(this.matrix_array[e][t].conj(),n))return!1;return!0}size(){return new Matrix([[this.row_length,this.column_length]])}compareTo(t,n){const e=this,i=Matrix._toMatrix(t);if(e.isScalar()&&i.isScalar())return e.scalar.compareTo(i.scalar,n);const r=e.matrix_array,o=i.matrix_array,s=Math.max(e.row_length,i.row_length),a=Math.max(e.column_length,i.column_length);return Matrix.createMatrixDoEachCalculation(function(t,n){return r[t%e.row_length][n%e.column_length].compareTo(o[t%i.row_length][n%i.column_length])},s,a)}max(t){const n=function(n){let e=n[0];for(let i=1;i<n.length;i++)e.compareTo(n[i],t)<0&&(e=n[i]);return[e]};return this.eachVectorAuto(n)}min(t){const n=function(n){let e=n[0];for(let i=1;i<n.length;i++)e.compareTo(n[i],t)>0&&(e=n[i]);return[e]};return this.eachVectorAuto(n)}add(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].add(r[t%e.row_length][o%e.column_length])},o,s)}sub(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].sub(r[t%e.row_length][o%e.column_length])},o,s)}mul(t){const n=this,e=Matrix._toMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.mul(r.scalar));if(n.isScalar()){const t=new Array(e.row_length);for(let i=0;i<e.row_length;i++){t[i]=new Array(e.column_length);for(let o=0;o<e.column_length;o++)t[i][o]=n.scalar.mul(r[i][o])}return new Matrix(t)}if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].mul(e.scalar)}return new Matrix(t)}if(n.column_length!==e.row_length)throw"Matrix size does not match";{const t=new Array(n.row_length);for(let o=0;o<n.row_length;o++){t[o]=new Array(e.column_length);for(let s=0;s<e.column_length;s++){let e=Complex.ZERO;for(let t=0;t<n.column_length;t++)e=e.add(i[o][t].mul(r[t][s]));t[o][s]=e}}return new Matrix(t)}}div(t){const n=this,e=Matrix._toMatrix(t),i=n.matrix_array,r=e.matrix_array;if(n.isScalar()&&e.isScalar())return new Matrix(i.scalar.div(r.scalar));if(e.isScalar()){const t=new Array(n.row_length);for(let r=0;r<n.row_length;r++){t[r]=new Array(n.column_length);for(let o=0;o<n.column_length;o++)t[r][o]=i[r][o].div(e.scalar)}return new Matrix(t)}if(e.row_length===e.column_length)return this.mul(e.inv());if(n.column_length!==e.column_length)throw"Matrix size does not match";throw"warning"}nmul(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].mul(r[t%e.row_length][o%e.column_length])},o,s)}ndiv(t){const n=this,e=Matrix._toMatrix(t);if(n.row_length!==e.row_length&&n.column_length!==e.column_length)throw"Matrix size does not match";const i=n.matrix_array,r=e.matrix_array,o=Math.max(n.row_length,e.row_length),s=Math.max(n.column_length,e.column_length);return Matrix.createMatrixDoEachCalculation(function(t,o){return i[t%n.row_length][o%n.column_length].div(r[t%e.row_length][o%e.column_length])},o,s)}real(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.real)})}imag(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.imag)})}angle(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.angle)})}sign(){return this.cloneMatrixDoEachCalculation(function(t){return new Complex(t.sign())})}testInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isInteger(t)?Complex.ONE:Complex.ZERO})}testComplexInteger(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplexInteger(t)?Complex.ONE:Complex.ZERO})}testZero(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isZero(t)?Complex.ONE:Complex.ZERO})}testOne(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isOne(t)?Complex.ONE:Complex.ZERO})}testComplex(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isComplex(t)?Complex.ONE:Complex.ZERO})}testReal(t){return this.cloneMatrixDoEachCalculation(function(n){return n.isReal(t)?Complex.ONE:Complex.ZERO})}testNaN(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNaN()?Complex.ONE:Complex.ZERO})}testPositive(){return this.cloneMatrixDoEachCalculation(function(t){return t.isPositive()?Complex.ONE:Complex.ZERO})}testNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNegative()?Complex.ONE:Complex.ZERO})}testNotNegative(){return this.cloneMatrixDoEachCalculation(function(t){return t.isNotNegative()?Complex.ONE:Complex.ZERO})}testInfinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isInfinite()?Complex.ONE:Complex.ZERO})}testFinite(){return this.cloneMatrixDoEachCalculation(function(t){return t.isFinite()?Complex.ONE:Complex.ZERO})}abs(){return this.cloneMatrixDoEachCalculation(function(t){return t.abs()})}conj(){return this.cloneMatrixDoEachCalculation(function(t){return t.conj()})}negate(){return this.cloneMatrixDoEachCalculation(function(t){return t.negate()})}sqrt(){return this.cloneMatrixDoEachCalculation(function(t){return t.sqrt()})}pow(t){const n=Matrix._toComplex(t);return this.cloneMatrixDoEachCalculation(function(t){return t.pow(n)})}log(){return this.cloneMatrixDoEachCalculation(function(t){return t.log()})}exp(){return this.cloneMatrixDoEachCalculation(function(t){return t.exp()})}sin(){return this.cloneMatrixDoEachCalculation(function(t){return t.sin()})}cos(){return this.cloneMatrixDoEachCalculation(function(t){return t.cos()})}tan(){return this.cloneMatrixDoEachCalculation(function(t){return t.tan()})}atan(){return this.cloneMatrixDoEachCalculation(function(t){return t.atan()})}atan2(t){const n=Matrix._toComplex(t);return this.cloneMatrixDoEachCalculation(function(t){return t.atan2(n)})}floor(){return this.cloneMatrixDoEachCalculation(function(t){return t.floor()})}ceil(){return this.cloneMatrixDoEachCalculation(function(t){return t.ceil()})}round(){return this.cloneMatrixDoEachCalculation(function(t){return t.round()})}fix(){return this.cloneMatrixDoEachCalculation(function(t){return t.fix()})}fract(){return this.cloneMatrixDoEachCalculation(function(t){return t.fract()})}sinc(){return this.cloneMatrixDoEachCalculation(function(t){return t.sinc()})}_rot90(t){const n=Matrix._toInteger(t);let e=1;if(1===arguments.length&&(e=(n%4+4)%4),0===e)return this;const i=new Array(this.row_length);for(let t=0;t<this.row_length;t++){i[t]=new Array(this.column_length);for(let n=0;n<this.column_length;n++)i[t][n]=this.matrix_array[t][n]}const r=this.matrix_array;if(1===e){r.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?r[t].splice(this.row_length):r[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)r[t][n]=i[this.row_length-n-1][t]}}else if(2===e)for(let t=0;t<this.row_length;t++)for(let n=0;n<this.column_length;n++)r[t][n]=i[this.row_length-t-1][this.column_length-n-1];else if(3===e){r.splice(this.column_length);for(let t=0;t<this.column_length;t++){t<this.row_length?r[t].splice(this.row_length):r[t]=new Array(this.row_length);for(let n=0;n<this.row_length;n++)r[t][n]=i[n][this.column_length-t-1]}}return this.row_length=r.length,this.column_length=r[0].length,this._clearCash(),this}rot90(t){return this.clone()._rot90(t)}_resize(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(e===this.row_length&&i===this.column_length)return this;if(e<=0||i<=0)throw"_resize";const r=Math.max(this.row_length,e),o=Math.max(this.column_length,i),s=this.matrix_array;for(let t=0;t<r;t++){t>=this.row_length&&(s[t]=new Array(o));for(let n=0;n<o;n++)(t>=this.row_length||n>=this.column_length)&&(s[t][n]=Complex.ZERO)}if(this.row_length>e&&s.splice(e),this.column_length>i)for(let t=0;t<s.length;t++)s[t].splice(i);return this.row_length=e,this.column_length=i,this._clearCash(),this}resize(t,n){return this.clone().resize(t,n)}_deleteRow(t){const n=Matrix._toInteger(t);if(1===this.row_length||this.row_length<=n)throw"_deleteRow";return this.matrix_array.splice(n,1),this.row_length--,this._clearCash(),this}_deleteColumn(t){const n=Matrix._toInteger(t);if(1===this.column_length||this.column_length<=n)throw"_deleteColumn";for(let t=0;t<this.row_length;t++)this.matrix_array[t].splice(n,1);return this.column_length--,this._clearCash(),this}deleteRow(t){return this.clone()._deleteRow(t)}deleteColumn(t){return this.clone()._deleteColumn(t)}_exchangeRow(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(1===this.row_length||this.row_length<=e||this.row_length<=i)throw"_exchangeRow";if(e===i)return this;const r=this.matrix_array[e];return this.matrix_array[e]=this.matrix_array[i],this.matrix_array[i]=r,this._clearCash(),this}_exchangeColumn(t,n){const e=Matrix._toInteger(t),i=Matrix._toInteger(n);if(1===this.column_length||this.column_length<=e||this.column_length<=i)throw"_exchangeColumn";if(e===i)return this;for(let t=0;t<this.row_length;t++){const n=this.matrix_array[t][e];this.matrix_array[t][e]=this.matrix_array[t][i],this.matrix_array[t][i]=n}return this._clearCash(),this}exchangeRow(t,n){return this.clone()._exchangeRow(t,n)}exchangeColumn(t,n){return this.clone()._exchangeColumn(t,n)}_concatLeft(t){const n=Matrix._toMatrix(t);if(this.row_length!=n.row_length)throw"_concatLeft";for(let t=0;t<this.row_length;t++)for(let e=0;e<n.column_length;e++)this.matrix_array[t].push(n.matrix_array[t][e]);return this.column_length+=n.column_length,this._clearCash(),this}_concatBottom(t){const n=Matrix._toMatrix(t);if(this.column_length!=n.column_length)throw"_concatBottom";for(let t=0;t<n.row_length;t++)this.matrix_array.push(n.matrix_array[t]);return this.row_length+=n.row_length,this._clearCash(),this}concatLeft(t){return this.clone()._concatLeft(t)}concatBottom(t){return this.clone()._concatBottom(t)}transpose(){const t=new Array(this.column_length);for(let n=0;n<this.column_length;n++){t[n]=new Array(this.row_length);for(let e=0;e<this.row_length;e++)t[n][e]=this.matrix_array[e][n]}return new Matrix(t)}ctranspose(){return this.transpose().conj()}T(){return this.ctranspose()}rank(t){return LinearAlgebra.rank(this,t)}trace(){return LinearAlgebra.trace(this)}inner(t,n=1){return LinearAlgebra.inner(this,t,n)}det(){return LinearAlgebra.det(this)}lup(){return LinearAlgebra.lup(this)}linsolve(t){return LinearAlgebra.linsolve(this,t)}qr(){return LinearAlgebra.qr(this)}tridiagonalize(){return LinearAlgebra.tridiagonalize(this)}eig(){return LinearAlgebra.eig(this)}svd(){return LinearAlgebra.svd(this)}inv(){return LinearAlgebra.inv(this)}pinv(){return LinearAlgebra.pinv(this)}gammaln(){return Statistics.gammaln(this)}gamma(){return Statistics.gamma(this)}gammainc(t,n){return Statistics.gammainc(this,t,n)}gampdf(t,n){return Statistics.gampdf(this,t,n)}gamcdf(t,n){return Statistics.gampdf(this,t,n)}gaminv(t,n){return Statistics.gaminv(this,t,n)}beta(t){return Statistics.beta(this,t)}betainc(t,n,e){return Statistics.betainc(this,t,n,e)}betacdf(t,n){return Statistics.betacdf(this,t,n)}betapdf(t,n){return Statistics.betapdf(this,t,n)}betainv(t,n){return Statistics.betainv(this,t,n)}factorial(){return Statistics.factorial(this)}nchoosek(t){return Statistics.nchoosek(this,t)}erf(){return Statistics.erf(this)}erfc(){return Statistics.erfc(this)}normpdf(t=0,n=1){return Statistics.normpdf(this,t,n)}normcdf(t=0,n=1){return Statistics.normcdf(this,t,n)}norminv(t=0,n=1){return Statistics.norminv(this,t,n)}tpdf(t){return Statistics.tpdf(this,t)}tcdf(t){return Statistics.tcdf(this,t)}tinv(t){return Statistics.tinv(this,t)}tdist(t,n){return Statistics.tdist(this,t,n)}tinv2(t){return Statistics.tinv2(this,t)}chi2pdf(t){return Statistics.chi2pdf(this,t)}chi2cdf(t){return Statistics.chi2cdf(this,t)}chi2inv(t){return Statistics.chi2inv(this,t)}fpdf(t,n){return Statistics.fpdf(this,t,n)}fcdf(t,n){return Statistics.fcdf(this,t,n)}finv(t,n){return Statistics.finv(this,t,n)}sum(t){return Statistics.sum(this,t)}mean(t){return Statistics.mean(this,t)}geomean(t){return Statistics.geomean(this,t)}median(t){return Statistics.median(this,t)}mode(t){return Statistics.mode(this,t)}var(t){return Statistics.var(this,t)}std(t){return Statistics.std(this,t)}cov(t){return Statistics.cov(this,t)}normalize(t){return Statistics.normalize(this,t)}corrcoef(){return Statistics.corrcoef(this)}sort(t){return Statistics.sort(this,t)}fft(){return Signal.fft(this)}ifft(){return Signal.ifft(this)}powerfft(){return Signal.powerfft(this)}dct(){return Signal.dct(this)}idct(){return Signal.idct(this)}fft2(){return Signal.fft2(this)}ifft2(){return Signal.ifft2(this)}dct2(){return Signal.dct2(this)}idct2(){return Signal.idct2(this)}conv(t){return Signal.conv(this,t)}xcorr(t){return Signal.xcorr(this,t)}static window(t,n,e){return Signal.window(t,n,e)}static hann(t,n){return Signal.hann(t,n)}static hamming(t,n){return Signal.hamming(t,n)}}class konpeito{static get File(){return File}static get format(){return Format.format}static get Log(){return Log}static get BigInteger(){return BigInteger}static get BigDecimal(){return BigDecimal}static get RoundingMode(){return RoundingMode}static get MathContext(){return MathContext}static get Complex(){return Complex}static get Matrix(){return Matrix}static get Random(){return Random}}export default konpeito;
